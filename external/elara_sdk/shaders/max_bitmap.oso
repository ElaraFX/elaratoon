OpenShadingLanguage 1.00
# Compiled by oslc 1.7.2
# options: 
shader max_bitmap
param	string	tex_fileName	""		%read{17,303} %write{2147483647,-1}
param	point	tex_coords	0 0 0		%read{0,1} %write{2147483647,-1} %derivs
param	int	tex_filtering	0		%read{118,258} %write{2147483647,-1}
param	float	tex_clipu	0		%read{51,86} %write{2147483647,-1} %derivs
param	float	tex_clipv	0		%read{53,100} %write{2147483647,-1} %derivs
param	float	tex_clipw	1		%read{52,85} %write{2147483647,-1} %derivs
param	float	tex_cliph	1		%read{53,102} %write{2147483647,-1} %derivs
param	float	blur	0		%read{2147483647,-1} %write{2147483647,-1}
param	int	tex_apply	1		%read{47,47} %write{2147483647,-1}
param	int	tex_cropPlace	0		%read{49,49} %write{2147483647,-1}
param	int	tex_monoOutput	0		%read{2147483647,-1} %write{2147483647,-1}
param	int	tex_rgbOutput	0		%read{150,279} %write{2147483647,-1}
param	int	tex_alphaSource	2		%read{134,276} %write{2147483647,-1}
param	int	tex_preMultAlpha	1		%read{153,282} %write{2147483647,-1}
oparam	color	result	0 0 0		%read{140,377} %write{73,380}
oparam	vector	result_bump	0 0 0		%read{156,156} %write{300,300}
oparam	float	result_alpha	1		%read{152,155} %write{74,301}
global	vector	dPdu	%read{295,295} %write{2147483647,-1}
global	vector	dPdv	%read{297,297} %write{2147483647,-1}
local	float	___306_f	%read{146,292} %write{145,291}
local	float	___368_fileAlpha	%read{149,278} %write{115,250}
local	float	___375_gray_channel	%read{133,262} %write{128,261}
local	float	mu	%read{27,261} %write{0,108} %derivs
local	float	mv	%read{19,241} %write{1,109} %derivs
local	float	texFilterWidth	%read{121,261} %write{2,16}
local	float	___388_fu	%read{80,108} %write{40,40} %derivs
local	float	___388_fv	%read{93,109} %write{45,45} %derivs
local	int	___388_needtexmap	%read{110,110} %write{46,75}
local	float	___390_u0	%read{56,76} %write{51,51} %derivs
local	float	___390_u1	%read{64,64} %write{52,52}
local	float	___390_v0	%read{59,78} %write{54,54} %derivs
local	float	___390_v1	%read{69,69} %write{55,55}
local	int	___394_fileNumChannels	%read{116,251} %write{111,112}
local	float	___395_d_u	%read{178,235} %write{163,163} %derivs
local	float	___395_d_v	%read{237,294} %write{168,168} %derivs
local	float	___395_F	%read{234,293} %write{176,176}
local	float	___395_dFdu	%read{296,296} %write{177,235}
local	color	___396_result_u	%read{210,230} %write{180,225}
local	float	___396_result_alpha_u	%read{222,225} %write{181,219}
local	float	___395_dFdv	%read{298,298} %write{236,294}
local	color	___397_result_v	%read{269,289} %write{239,284}
local	float	___397_result_alpha_v	%read{281,284} %write{240,278}
local	int	___387_nativeFormat	%read{304,317} %write{302,303}
local	float	___399_texture_gamma	%read{324,379} %write{321,322}
const	int	$const1	0		%read{0,372} %write{2147483647,-1}
const	int	$const2	1		%read{1,376} %write{2147483647,-1}
const	float	$const3	1		%read{2,327} %write{2147483647,-1}
temp	int	$tmp1	%read{4,4} %write{3,3}
const	string	$const4	"eye"		%read{3,3} %write{2147483647,-1}
temp	int	$tmp2	%read{5,9} %write{4,8}
temp	int	$tmp3	%read{7,7} %write{6,6}
const	string	$const5	"transparent"		%read{6,6} %write{2147483647,-1}
temp	int	$tmp4	%read{8,8} %write{7,7}
const	float	$const6	0.2		%read{10,10} %write{2147483647,-1}
temp	int	$tmp5	%read{12,12} %write{11,11}
const	string	$const7	"glossy"		%read{11,11} %write{2147483647,-1}
const	float	$const8	4		%read{13,13} %write{2147483647,-1}
temp	int	$tmp6	%read{15,15} %write{14,14}
const	string	$const9	"diffuse"		%read{14,14} %write{2147483647,-1}
const	float	$const10	10		%read{16,16} %write{2147483647,-1}
const	string	$const11	""		%read{17,17} %write{2147483647,-1}
temp	int	$tmp7	%read{18,18} %write{17,17}
const	float	$const12	0		%read{19,378} %write{2147483647,-1}
temp	int	$tmp8	%read{20,20} %write{19,19}
temp	int	$tmp9	%read{21,25} %write{20,24}
temp	int	$tmp10	%read{23,23} %write{22,22}
temp	int	$tmp11	%read{24,24} %write{23,23}
temp	int	$tmp12	%read{26,30} %write{25,29}
temp	int	$tmp13	%read{28,28} %write{27,27}
temp	int	$tmp14	%read{29,29} %write{28,28}
temp	int	$tmp15	%read{31,35} %write{30,34}
temp	int	$tmp16	%read{33,33} %write{32,32}
temp	int	$tmp17	%read{34,34} %write{33,33}
temp	int	$tmp18	%read{38,38} %write{36,36} %derivs
temp	int	$tmp19	%read{38,38} %write{37,37} %derivs
temp	int	$tmp20	%read{39,39} %write{38,38} %derivs
temp	float	$tmp21	%read{40,40} %write{39,39} %derivs
temp	int	$tmp22	%read{43,43} %write{41,41} %derivs
temp	int	$tmp23	%read{43,43} %write{42,42} %derivs
temp	int	$tmp24	%read{44,44} %write{43,43} %derivs
temp	float	$tmp25	%read{45,45} %write{44,44} %derivs
temp	int	$tmp26	%read{48,48} %write{47,47}
temp	int	$tmp27	%read{50,50} %write{49,49}
temp	float	$tmp28	%read{54,54} %write{53,53} %derivs
temp	int	$tmp29	%read{57,57} %write{56,56}
temp	int	$tmp30	%read{58,62} %write{57,61}
temp	int	$tmp31	%read{60,60} %write{59,59}
temp	int	$tmp32	%read{61,61} %write{60,60}
temp	int	$tmp33	%read{63,67} %write{62,66}
temp	int	$tmp34	%read{65,65} %write{64,64}
temp	int	$tmp35	%read{66,66} %write{65,65}
temp	int	$tmp36	%read{68,72} %write{67,71}
temp	int	$tmp37	%read{70,70} %write{69,69}
temp	int	$tmp38	%read{71,71} %write{70,70}
const	color	$const13	0 0 0		%read{73,239} %write{2147483647,-1}
temp	float	$tmp39	%read{77,77} %write{76,76} %derivs
temp	float	$tmp40	%read{79,79} %write{78,78} %derivs
temp	float	$tmp41	%read{81,81} %write{80,80} %derivs
temp	float	$tmp42	%read{90,90} %write{81,81} %derivs
temp	float	$tmp43	%read{83,83} %write{82,82} %derivs
temp	float	$tmp44	%read{84,84} %write{83,83} %derivs
temp	int	$tmp45	%read{88,88} %write{84,84} %derivs
temp	float	$tmp46	%read{86,86} %write{85,85} %derivs
temp	float	$tmp47	%read{87,87} %write{86,86} %derivs
temp	int	$tmp48	%read{88,88} %write{87,87} %derivs
temp	int	$tmp49	%read{89,89} %write{88,88} %derivs
temp	float	$tmp50	%read{90,90} %write{89,89} %derivs
temp	float	$tmp51	%read{92,92} %write{91,91} %derivs
temp	float	$tmp52	%read{94,94} %write{92,92} %derivs
temp	float	$tmp53	%read{94,94} %write{93,93} %derivs
temp	float	$tmp54	%read{107,107} %write{94,94} %derivs
temp	float	$tmp55	%read{96,96} %write{95,95} %derivs
temp	float	$tmp56	%read{98,98} %write{96,96} %derivs
temp	float	$tmp57	%read{98,98} %write{97,97} %derivs
temp	float	$tmp58	%read{99,99} %write{98,98} %derivs
temp	int	$tmp59	%read{105,105} %write{99,99} %derivs
temp	float	$tmp60	%read{101,101} %write{100,100} %derivs
temp	float	$tmp61	%read{103,103} %write{101,101} %derivs
temp	float	$tmp62	%read{103,103} %write{102,102} %derivs
temp	float	$tmp63	%read{104,104} %write{103,103} %derivs
temp	int	$tmp64	%read{105,105} %write{104,104} %derivs
temp	int	$tmp65	%read{106,106} %write{105,105} %derivs
temp	float	$tmp66	%read{107,107} %write{106,106} %derivs
const	int	$const14	3		%read{111,307} %write{2147483647,-1}
temp	int	$tmp67	%read{2147483647,-1} %write{112,112}
const	string	$const15	"channels"		%read{112,112} %write{2147483647,-1}
temp	float	$tmp68	%read{120,132} %write{113,113} %derivs
const	string	$const16	"eval_bitmap"		%read{114,243} %write{2147483647,-1}
const	int	$const17	4		%read{116,312} %write{2147483647,-1}
temp	int	$tmp69	%read{117,117} %write{116,116}
const	int	$const18	2		%read{118,380} %write{2147483647,-1}
temp	int	$tmp70	%read{119,119} %write{118,118}
const	string	$const19	"width"		%read{120,261} %write{2147483647,-1}
const	string	$const20	"blur"		%read{120,261} %write{2147483647,-1}
const	string	$const21	"swrap"		%read{120,261} %write{2147483647,-1}
const	string	$const22	"clamp"		%read{120,261} %write{2147483647,-1}
const	string	$const23	"twrap"		%read{120,261} %write{2147483647,-1}
const	string	$const24	"alpha"		%read{120,250} %write{2147483647,-1}
temp	int	$tmp71	%read{123,123} %write{122,122}
temp	int	$tmp72	%read{125,125} %write{124,124}
temp	int	$tmp73	%read{130,130} %write{129,129}
temp	int	$tmp74	%read{135,135} %write{134,134}
temp	int	$tmp75	%read{138,138} %write{137,137}
const	string	$const25	"intensity"		%read{139,285} %write{2147483647,-1}
temp	float	$tmp76	%read{142,142} %write{140,140}
temp	float	$tmp77	%read{142,142} %write{141,141}
temp	float	$tmp78	%read{144,144} %write{142,142}
temp	float	$tmp79	%read{144,144} %write{143,143}
temp	float	$tmp80	%read{145,145} %write{144,144}
const	float	$const26	0.33333334		%read{145,291} %write{2147483647,-1}
temp	int	$tmp81	%read{148,148} %write{147,147}
temp	int	$tmp82	%read{151,151} %write{150,150}
temp	int	$tmp83	%read{154,154} %write{153,153}
temp	int	$tmp84	%read{157,157} %write{156,156}
temp	int	$tmp85	%read{158,158} %write{157,157}
temp	float	$tmp86	%read{163,163} %write{160,160} %derivs
temp	float	$tmp87	%read{160,160} %write{159,159} %derivs
temp	float	$tmp88	%read{163,163} %write{162,162} %derivs
temp	float	$tmp89	%read{162,162} %write{161,161} %derivs
temp	float	$tmp90	%read{168,168} %write{165,165} %derivs
temp	float	$tmp91	%read{165,165} %write{164,164} %derivs
temp	float	$tmp92	%read{168,168} %write{167,167} %derivs
temp	float	$tmp93	%read{167,167} %write{166,166} %derivs
temp	float	$tmp94	%read{172,172} %write{170,170}
temp	float	$tmp95	%read{172,172} %write{171,171}
temp	float	$tmp96	%read{174,174} %write{172,172}
temp	float	$tmp97	%read{174,174} %write{173,173}
temp	float	$tmp98	%read{175,175} %write{174,174}
temp	int	$tmp99	%read{179,179} %write{178,178}
temp	float	$tmp100	%read{190,202} %write{182,182} %derivs
temp	float	$tmp101	%read{190,202} %write{183,183} %derivs
temp	int	$tmp102	%read{187,187} %write{186,186}
temp	int	$tmp103	%read{189,189} %write{188,188}
temp	int	$tmp104	%read{193,193} %write{192,192}
temp	int	$tmp105	%read{195,195} %write{194,194}
temp	int	$tmp106	%read{200,200} %write{199,199}
temp	int	$tmp107	%read{205,205} %write{204,204}
temp	int	$tmp108	%read{208,208} %write{207,207}
temp	float	$tmp109	%read{212,212} %write{210,210}
temp	float	$tmp110	%read{212,212} %write{211,211}
temp	float	$tmp111	%read{214,214} %write{212,212}
temp	float	$tmp112	%read{214,214} %write{213,213}
temp	float	$tmp113	%read{215,215} %write{214,214}
temp	int	$tmp114	%read{218,218} %write{217,217}
temp	int	$tmp115	%read{221,221} %write{220,220}
temp	int	$tmp116	%read{224,224} %write{223,223}
temp	float	$tmp117	%read{234,234} %write{233,233}
temp	float	$tmp118	%read{229,229} %write{227,227}
temp	float	$tmp119	%read{229,229} %write{228,228}
temp	float	$tmp120	%read{231,231} %write{229,229}
temp	float	$tmp121	%read{231,231} %write{230,230}
temp	float	$tmp122	%read{232,232} %write{231,231}
temp	float	$tmp123	%read{235,235} %write{234,234}
temp	int	$tmp124	%read{238,238} %write{237,237}
temp	float	$tmp125	%read{242,242} %write{241,241} %derivs
temp	float	$tmp126	%read{249,261} %write{242,242} %derivs
temp	int	$tmp127	%read{246,246} %write{245,245}
temp	int	$tmp128	%read{248,248} %write{247,247}
temp	int	$tmp129	%read{252,252} %write{251,251}
temp	int	$tmp130	%read{254,254} %write{253,253}
temp	int	$tmp131	%read{259,259} %write{258,258}
temp	int	$tmp132	%read{264,264} %write{263,263}
temp	int	$tmp133	%read{267,267} %write{266,266}
temp	float	$tmp134	%read{271,271} %write{269,269}
temp	float	$tmp135	%read{271,271} %write{270,270}
temp	float	$tmp136	%read{273,273} %write{271,271}
temp	float	$tmp137	%read{273,273} %write{272,272}
temp	float	$tmp138	%read{274,274} %write{273,273}
temp	int	$tmp139	%read{277,277} %write{276,276}
temp	int	$tmp140	%read{280,280} %write{279,279}
temp	int	$tmp141	%read{283,283} %write{282,282}
temp	float	$tmp142	%read{293,293} %write{292,292}
temp	float	$tmp143	%read{288,288} %write{286,286}
temp	float	$tmp144	%read{288,288} %write{287,287}
temp	float	$tmp145	%read{290,290} %write{288,288}
temp	float	$tmp146	%read{290,290} %write{289,289}
temp	float	$tmp147	%read{291,291} %write{290,290}
temp	float	$tmp148	%read{294,294} %write{293,293}
temp	vector	$tmp149	%read{296,296} %write{295,295}
temp	vector	$tmp150	%read{299,299} %write{296,296}
temp	vector	$tmp151	%read{298,298} %write{297,297}
temp	vector	$tmp152	%read{299,299} %write{298,298}
temp	vector	$tmp153	%read{300,300} %write{299,299}
temp	int	$tmp154	%read{2147483647,-1} %write{303,303}
const	string	$const27	"format"		%read{303,303} %write{2147483647,-1}
temp	int	$tmp155	%read{305,305} %write{304,304}
temp	int	$tmp156	%read{306,310} %write{305,309}
temp	int	$tmp157	%read{308,308} %write{307,307}
temp	int	$tmp158	%read{309,309} %write{308,308}
temp	int	$tmp159	%read{311,315} %write{310,314}
temp	int	$tmp160	%read{313,313} %write{312,312}
temp	int	$tmp161	%read{314,314} %write{313,313}
temp	int	$tmp162	%read{316,320} %write{315,319}
const	int	$const28	5		%read{317,317} %write{2147483647,-1}
temp	int	$tmp163	%read{318,318} %write{317,317}
temp	int	$tmp164	%read{319,319} %write{318,318}
temp	int	$tmp165	%read{2147483647,-1} %write{322,322}
const	string	$const29	"options"		%read{322,322} %write{2147483647,-1}
const	string	$const30	"texture_gamma"		%read{322,322} %write{2147483647,-1}
const	string	$const31	"ei_degamma"		%read{323,323} %write{2147483647,-1}
temp	int	$tmp166	%read{325,325} %write{324,324}
temp	int	$tmp167	%read{326,330} %write{325,329}
temp	int	$tmp168	%read{328,328} %write{327,327}
temp	int	$tmp169	%read{329,329} %write{328,328}
const	float	$const32	2.2		%read{331,331} %write{2147483647,-1}
temp	int	$tmp170	%read{332,332} %write{331,331}
temp	float	$tmp171	%read{335,335} %write{334,334}
temp	float	$tmp172	%read{334,334} %write{333,333}
temp	float	$tmp173	%read{338,338} %write{337,337}
temp	float	$tmp174	%read{337,337} %write{336,336}
temp	float	$tmp175	%read{341,341} %write{340,340}
temp	float	$tmp176	%read{340,340} %write{339,339}
temp	float	$tmp177	%read{344,344} %write{342,342}
temp	float	$tmp178	%read{344,344} %write{343,343}
temp	float	$tmp179	%read{349,349} %write{344,344}
const	float	$const33	0.56999999		%read{348,366} %write{2147483647,-1}
const	float	$const34	0.43000001		%read{347,365} %write{2147483647,-1}
temp	float	$tmp180	%read{347,347} %write{346,346}
temp	float	$tmp181	%read{346,346} %write{345,345}
temp	float	$tmp182	%read{348,348} %write{347,347}
temp	float	$tmp183	%read{349,349} %write{348,348}
temp	float	$tmp184	%read{350,350} %write{349,349}
temp	float	$tmp185	%read{353,353} %write{351,351}
temp	float	$tmp186	%read{353,353} %write{352,352}
temp	float	$tmp187	%read{358,358} %write{353,353}
temp	float	$tmp188	%read{356,356} %write{355,355}
temp	float	$tmp189	%read{355,355} %write{354,354}
temp	float	$tmp190	%read{357,357} %write{356,356}
temp	float	$tmp191	%read{358,358} %write{357,357}
temp	float	$tmp192	%read{359,359} %write{358,358}
temp	float	$tmp193	%read{362,362} %write{360,360}
temp	float	$tmp194	%read{362,362} %write{361,361}
temp	float	$tmp195	%read{367,367} %write{362,362}
temp	float	$tmp196	%read{365,365} %write{364,364}
temp	float	$tmp197	%read{364,364} %write{363,363}
temp	float	$tmp198	%read{366,366} %write{365,365}
temp	float	$tmp199	%read{367,367} %write{366,366}
temp	float	$tmp200	%read{368,368} %write{367,367}
temp	float	$tmp201	%read{372,372} %write{371,371}
temp	float	$tmp202	%read{371,371} %write{370,370}
temp	float	$tmp203	%read{370,370} %write{369,369}
temp	float	$tmp204	%read{376,376} %write{375,375}
temp	float	$tmp205	%read{375,375} %write{374,374}
temp	float	$tmp206	%read{374,374} %write{373,373}
temp	float	$tmp207	%read{380,380} %write{379,379}
temp	float	$tmp208	%read{379,379} %write{378,378}
temp	float	$tmp209	%read{378,378} %write{377,377}
code ___main___
	compref		mu tex_coords $const1 	%filename{"E:/github/elaramax/Shaders/max_bitmap.osl"} %line{184} %argrw{"wrr"}
	compref		mv tex_coords $const2 	%line{185} %argrw{"wrr"}
	assign		texFilterWidth $const3 	%line{186} %argrw{"wr"}
	raytype		$tmp1 $const4 	%line{187} %argrw{"wr"}
	neq		$tmp2 $tmp1 $const1 	%argrw{"wrr"}
	if		$tmp2 6 9 	%argrw{"r"}
	raytype		$tmp3 $const5 	%argrw{"wr"}
	neq		$tmp4 $tmp3 $const1 	%argrw{"wrr"}
	assign		$tmp2 $tmp4 	%argrw{"wr"}
	if		$tmp2 11 11 	%argrw{"r"}
	assign		texFilterWidth $const6 	%line{189} %argrw{"wr"}
	raytype		$tmp5 $const7 	%line{191} %argrw{"wr"}
	if		$tmp5 14 14 	%argrw{"r"}
	assign		texFilterWidth $const8 	%line{193} %argrw{"wr"}
	raytype		$tmp6 $const9 	%line{195} %argrw{"wr"}
	if		$tmp6 17 17 	%argrw{"r"}
	assign		texFilterWidth $const10 	%line{197} %argrw{"wr"}
	neq		$tmp7 tex_fileName $const11 	%line{200} %argrw{"wrr"}
	if		$tmp7 381 381 	%argrw{"r"}
	ge		$tmp8 mv $const12 	%line{202} %argrw{"wrr"}
	neq		$tmp9 $tmp8 $const1 	%argrw{"wrr"}
	if		$tmp9 25 25 	%argrw{"r"}
	le		$tmp10 mv $const3 	%argrw{"wrr"}
	neq		$tmp11 $tmp10 $const1 	%argrw{"wrr"}
	assign		$tmp9 $tmp11 	%argrw{"wr"}
	neq		$tmp12 $tmp9 $const1 	%argrw{"wrr"}
	if		$tmp12 30 30 	%argrw{"r"}
	ge		$tmp13 mu $const12 	%argrw{"wrr"}
	neq		$tmp14 $tmp13 $const1 	%argrw{"wrr"}
	assign		$tmp12 $tmp14 	%argrw{"wr"}
	neq		$tmp15 $tmp12 $const1 	%argrw{"wrr"}
	if		$tmp15 35 35 	%argrw{"r"}
	le		$tmp16 mu $const3 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const1 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	if		$tmp15 301 302 	%argrw{"r"}
	assign		$tmp18 mu 	%line{204} %argrw{"wr"}
	lt		$tmp19 mu $const12 	%argrw{"wrr"}
	sub		$tmp20 $tmp18 $tmp19 	%argrw{"wrr"}
	assign		$tmp21 $tmp20 	%argrw{"wr"}
	sub		___388_fu mu $tmp21 	%argrw{"wrr"}
	assign		$tmp22 mv 	%line{205} %argrw{"wr"}
	lt		$tmp23 mv $const12 	%argrw{"wrr"}
	sub		$tmp24 $tmp22 $tmp23 	%argrw{"wrr"}
	assign		$tmp25 $tmp24 	%argrw{"wr"}
	sub		___388_fv mv $tmp25 	%argrw{"wrr"}
	assign		___388_needtexmap $const2 	%line{206} %argrw{"wr"}
	eq		$tmp26 tex_apply $const2 	%line{208} %argrw{"wrr"}
	if		$tmp26 108 110 	%argrw{"r"}
	eq		$tmp27 tex_cropPlace $const2 	%line{210} %argrw{"wrr"}
	if		$tmp27 80 108 	%argrw{"r"}
	assign		___390_u0 tex_clipu 	%line{212} %argrw{"wr"}
	add		___390_u1 tex_clipu tex_clipw 	%line{213} %argrw{"wrr"}
	add		$tmp28 tex_clipv tex_cliph 	%line{215} %argrw{"wrr"}
	sub		___390_v0 $const3 $tmp28 	%argrw{"wrr"}
	sub		___390_v1 $const3 tex_clipv 	%line{216} %argrw{"wrr"}
	lt		$tmp29 mu ___390_u0 	%line{218} %argrw{"wrr"}
	neq		$tmp30 $tmp29 $const1 	%argrw{"wrr"}
	if		$tmp30 59 62 	%argrw{"r"}
	lt		$tmp31 mv ___390_v0 	%argrw{"wrr"}
	neq		$tmp32 $tmp31 $const1 	%argrw{"wrr"}
	assign		$tmp30 $tmp32 	%argrw{"wr"}
	neq		$tmp33 $tmp30 $const1 	%argrw{"wrr"}
	if		$tmp33 64 67 	%argrw{"r"}
	gt		$tmp34 mu ___390_u1 	%argrw{"wrr"}
	neq		$tmp35 $tmp34 $const1 	%argrw{"wrr"}
	assign		$tmp33 $tmp35 	%argrw{"wr"}
	neq		$tmp36 $tmp33 $const1 	%argrw{"wrr"}
	if		$tmp36 69 72 	%argrw{"r"}
	gt		$tmp37 mv ___390_v1 	%argrw{"wrr"}
	neq		$tmp38 $tmp37 $const1 	%argrw{"wrr"}
	assign		$tmp36 $tmp38 	%argrw{"wr"}
	if		$tmp36 76 76 	%argrw{"r"}
	assign		result $const13 	%line{220} %argrw{"wr"}
	assign		result_alpha $const1 	%line{221} %argrw{"wr"}
	assign		___388_needtexmap $const1 	%line{222} %argrw{"wr"}
	sub		$tmp39 mu ___390_u0 	%line{225} %argrw{"wrr"}
	div		mu $tmp39 tex_clipw 	%argrw{"wrr"}
	sub		$tmp40 mv ___390_v0 	%line{226} %argrw{"wrr"}
	div		mv $tmp40 tex_cliph 	%argrw{"wrr"}
	mul		$tmp41 ___388_fu tex_clipw 	%line{230} %argrw{"wrr"}
	add		$tmp42 tex_clipu $tmp41 	%argrw{"wrr"}
	mul		$tmp43 ___388_fu tex_clipw 	%argrw{"wrr"}
	add		$tmp44 tex_clipu $tmp43 	%argrw{"wrr"}
	assign		$tmp45 $tmp44 	%argrw{"wr"}
	mul		$tmp46 ___388_fu tex_clipw 	%argrw{"wrr"}
	add		$tmp47 tex_clipu $tmp46 	%argrw{"wrr"}
	lt		$tmp48 $tmp47 $const12 	%argrw{"wrr"}
	sub		$tmp49 $tmp45 $tmp48 	%argrw{"wrr"}
	assign		$tmp50 $tmp49 	%argrw{"wr"}
	sub		mu $tmp42 $tmp50 	%argrw{"wrr"}
	sub		$tmp51 $const3 tex_clipv 	%line{231} %argrw{"wrr"}
	sub		$tmp52 $tmp51 tex_cliph 	%argrw{"wrr"}
	mul		$tmp53 ___388_fv tex_cliph 	%argrw{"wrr"}
	add		$tmp54 $tmp52 $tmp53 	%argrw{"wrr"}
	sub		$tmp55 $const3 tex_clipv 	%argrw{"wrr"}
	sub		$tmp56 $tmp55 tex_cliph 	%argrw{"wrr"}
	mul		$tmp57 ___388_fv tex_cliph 	%argrw{"wrr"}
	add		$tmp58 $tmp56 $tmp57 	%argrw{"wrr"}
	assign		$tmp59 $tmp58 	%argrw{"wr"}
	sub		$tmp60 $const3 tex_clipv 	%argrw{"wrr"}
	sub		$tmp61 $tmp60 tex_cliph 	%argrw{"wrr"}
	mul		$tmp62 ___388_fv tex_cliph 	%argrw{"wrr"}
	add		$tmp63 $tmp61 $tmp62 	%argrw{"wrr"}
	lt		$tmp64 $tmp63 $const12 	%argrw{"wrr"}
	sub		$tmp65 $tmp59 $tmp64 	%argrw{"wrr"}
	assign		$tmp66 $tmp65 	%argrw{"wr"}
	sub		mv $tmp54 $tmp66 	%argrw{"wrr"}
	assign		mu ___388_fu 	%line{236} %argrw{"wr"}
	assign		mv ___388_fv 	%line{237} %argrw{"wr"}
	if		___388_needtexmap 301 301 	%line{240} %argrw{"r"}
	assign		___394_fileNumChannels $const14 	%line{242} %argrw{"wr"}
	gettextureinfo	$tmp67 tex_fileName $const15 ___394_fileNumChannels 	%line{243} %argrw{"wrrw"}
	sub		$tmp68 $const3 mv 	%line{256} %argrw{"wrr"}
	functioncall	$const16 156 	%argrw{"r"}
	assign		___368_fileAlpha $const2 	%line{50} %argrw{"wr"}
	ge		$tmp69 ___394_fileNumChannels $const17 	%line{52} %argrw{"wrr"}
	if		$tmp69 122 134 	%argrw{"r"}
	eq		$tmp70 tex_filtering $const18 	%line{55} %argrw{"wrr"}
	if		$tmp70 121 122 	%argrw{"r"}
	texture		result tex_fileName mu $tmp68 $const19 $const12 $const20 $const12 $const21 $const22 $const23 $const22 $const24 ___368_fileAlpha 	%line{65} %argrw{"wrrrrrrrrrrrrw"} %argderivs{2,3}
	texture		result tex_fileName mu $tmp68 $const19 texFilterWidth $const20 $const12 $const21 $const22 $const23 $const22 $const24 ___368_fileAlpha 	%line{77} %argrw{"wrrrrrrrrrrrrw"} %argderivs{2,3}
	eq		$tmp71 ___394_fileNumChannels $const14 	%line{80} %argrw{"wrr"}
	if		$tmp71 128 134 	%argrw{"r"}
	eq		$tmp72 tex_filtering $const18 	%line{83} %argrw{"wrr"}
	if		$tmp72 127 128 	%argrw{"r"}
	texture		result tex_fileName mu $tmp68 $const19 $const12 $const20 $const12 $const21 $const22 $const23 $const22 	%line{92} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	texture		result tex_fileName mu $tmp68 $const19 texFilterWidth $const20 $const12 $const21 $const22 $const23 $const22 	%line{103} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	assign		___375_gray_channel $const1 	%line{109} %argrw{"wr"}
	eq		$tmp73 tex_filtering $const18 	%line{110} %argrw{"wrr"}
	if		$tmp73 132 133 	%argrw{"r"}
	texture		___375_gray_channel tex_fileName mu $tmp68 $const19 $const12 $const20 $const12 $const21 $const22 $const23 $const22 	%line{119} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	texture		___375_gray_channel tex_fileName mu $tmp68 $const19 texFilterWidth $const20 $const12 $const21 $const22 $const23 $const22 	%line{130} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	assign		result ___375_gray_channel 	%line{133} %argrw{"wr"}
	eq		$tmp74 tex_alphaSource $const18 	%line{136} %argrw{"wrr"}
	if		$tmp74 137 150 	%argrw{"r"}
	assign		result_alpha $const2 	%line{138} %argrw{"wr"}
	eq		$tmp75 tex_alphaSource $const2 	%line{140} %argrw{"wrr"}
	if		$tmp75 147 150 	%argrw{"r"}
	functioncall	$const25 147 	%line{142} %argrw{"r"}
	compref		$tmp76 result $const1 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{28} %argrw{"wrr"}
	compref		$tmp77 result $const2 	%argrw{"wrr"}
	add		$tmp78 $tmp76 $tmp77 	%argrw{"wrr"}
	compref		$tmp79 result $const18 	%argrw{"wrr"}
	add		$tmp80 $tmp78 $tmp79 	%argrw{"wrr"}
	mul		___306_f $tmp80 $const26 	%argrw{"wrr"}
	assign		result_alpha ___306_f 	%line{29} %argrw{"wr"}
	eq		$tmp81 tex_alphaSource $const1 	%filename{"E:/github/elaramax/Shaders/max_bitmap.osl"} %line{144} %argrw{"wrr"}
	if		$tmp81 150 150 	%argrw{"r"}
	assign		result_alpha ___368_fileAlpha 	%line{146} %argrw{"wr"}
	eq		$tmp82 tex_rgbOutput $const2 	%line{149} %argrw{"wrr"}
	if		$tmp82 153 156 	%argrw{"r"}
	assign		result result_alpha 	%line{151} %argrw{"wr"}
	eq		$tmp83 tex_preMultAlpha $const1 	%line{155} %argrw{"wrr"}
	if		$tmp83 156 156 	%argrw{"r"}
	mul		result result result_alpha 	%line{157} %argrw{"wrr"}
	isconnected	$tmp84 result_bump 	%line{261} %argrw{"wr"}
	bitand		$tmp85 $tmp84 $const18 	%argrw{"wrr"}
	if		$tmp85 301 301 	%argrw{"r"}
	Dx		$tmp87 mu 	%line{263} %argrw{"wr"} %argderivs{1}
	fabs		$tmp86 $tmp87 	%argrw{"wr"}
	Dy		$tmp89 mu 	%argrw{"wr"} %argderivs{1}
	fabs		$tmp88 $tmp89 	%argrw{"wr"}
	add		___395_d_u $tmp86 $tmp88 	%argrw{"wrr"}
	Dx		$tmp91 mv 	%line{264} %argrw{"wr"} %argderivs{1}
	fabs		$tmp90 $tmp91 	%argrw{"wr"}
	Dy		$tmp93 mv 	%argrw{"wr"} %argderivs{1}
	fabs		$tmp92 $tmp93 	%argrw{"wr"}
	add		___395_d_v $tmp90 $tmp92 	%argrw{"wrr"}
	functioncall	$const25 177 	%line{266} %argrw{"r"}
	compref		$tmp94 result $const1 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{28} %argrw{"wrr"}
	compref		$tmp95 result $const2 	%argrw{"wrr"}
	add		$tmp96 $tmp94 $tmp95 	%argrw{"wrr"}
	compref		$tmp97 result $const18 	%argrw{"wrr"}
	add		$tmp98 $tmp96 $tmp97 	%argrw{"wrr"}
	mul		___306_f $tmp98 $const26 	%argrw{"wrr"}
	assign		___395_F ___306_f 	%line{29} %argrw{"wr"}
	assign		___395_dFdu $const1 	%filename{"E:/github/elaramax/Shaders/max_bitmap.osl"} %line{268} %argrw{"wr"}
	neq		$tmp99 ___395_d_u $const1 	%line{269} %argrw{"wrr"}
	if		$tmp99 236 236 	%argrw{"r"}
	assign		___396_result_u $const13 	%line{271} %argrw{"wr"}
	assign		___396_result_alpha_u $const2 	%line{272} %argrw{"wr"}
	add		$tmp100 mu ___395_d_u 	%line{283} %argrw{"wrr"}
	sub		$tmp101 $const3 mv 	%line{284} %argrw{"wrr"}
	functioncall	$const16 226 	%argrw{"r"}
	assign		___368_fileAlpha $const2 	%line{50} %argrw{"wr"}
	ge		$tmp102 ___394_fileNumChannels $const17 	%line{52} %argrw{"wrr"}
	if		$tmp102 192 204 	%argrw{"r"}
	eq		$tmp103 tex_filtering $const18 	%line{55} %argrw{"wrr"}
	if		$tmp103 191 192 	%argrw{"r"}
	texture		___396_result_u tex_fileName $tmp100 $tmp101 $const19 $const12 $const20 $const12 $const21 $const22 $const23 $const22 $const24 ___368_fileAlpha 	%line{65} %argrw{"wrrrrrrrrrrrrw"} %argderivs{2,3}
	texture		___396_result_u tex_fileName $tmp100 $tmp101 $const19 texFilterWidth $const20 $const12 $const21 $const22 $const23 $const22 $const24 ___368_fileAlpha 	%line{77} %argrw{"wrrrrrrrrrrrrw"} %argderivs{2,3}
	eq		$tmp104 ___394_fileNumChannels $const14 	%line{80} %argrw{"wrr"}
	if		$tmp104 198 204 	%argrw{"r"}
	eq		$tmp105 tex_filtering $const18 	%line{83} %argrw{"wrr"}
	if		$tmp105 197 198 	%argrw{"r"}
	texture		___396_result_u tex_fileName $tmp100 $tmp101 $const19 $const12 $const20 $const12 $const21 $const22 $const23 $const22 	%line{92} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	texture		___396_result_u tex_fileName $tmp100 $tmp101 $const19 texFilterWidth $const20 $const12 $const21 $const22 $const23 $const22 	%line{103} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	assign		___375_gray_channel $const1 	%line{109} %argrw{"wr"}
	eq		$tmp106 tex_filtering $const18 	%line{110} %argrw{"wrr"}
	if		$tmp106 202 203 	%argrw{"r"}
	texture		___375_gray_channel tex_fileName $tmp100 $tmp101 $const19 $const12 $const20 $const12 $const21 $const22 $const23 $const22 	%line{119} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	texture		___375_gray_channel tex_fileName $tmp100 $tmp101 $const19 texFilterWidth $const20 $const12 $const21 $const22 $const23 $const22 	%line{130} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	assign		___396_result_u ___375_gray_channel 	%line{133} %argrw{"wr"}
	eq		$tmp107 tex_alphaSource $const18 	%line{136} %argrw{"wrr"}
	if		$tmp107 207 220 	%argrw{"r"}
	assign		___396_result_alpha_u $const2 	%line{138} %argrw{"wr"}
	eq		$tmp108 tex_alphaSource $const2 	%line{140} %argrw{"wrr"}
	if		$tmp108 217 220 	%argrw{"r"}
	functioncall	$const25 217 	%line{142} %argrw{"r"}
	compref		$tmp109 ___396_result_u $const1 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{28} %argrw{"wrr"}
	compref		$tmp110 ___396_result_u $const2 	%argrw{"wrr"}
	add		$tmp111 $tmp109 $tmp110 	%argrw{"wrr"}
	compref		$tmp112 ___396_result_u $const18 	%argrw{"wrr"}
	add		$tmp113 $tmp111 $tmp112 	%argrw{"wrr"}
	mul		___306_f $tmp113 $const26 	%argrw{"wrr"}
	assign		___396_result_alpha_u ___306_f 	%line{29} %argrw{"wr"}
	eq		$tmp114 tex_alphaSource $const1 	%filename{"E:/github/elaramax/Shaders/max_bitmap.osl"} %line{144} %argrw{"wrr"}
	if		$tmp114 220 220 	%argrw{"r"}
	assign		___396_result_alpha_u ___368_fileAlpha 	%line{146} %argrw{"wr"}
	eq		$tmp115 tex_rgbOutput $const2 	%line{149} %argrw{"wrr"}
	if		$tmp115 223 226 	%argrw{"r"}
	assign		___396_result_u ___396_result_alpha_u 	%line{151} %argrw{"wr"}
	eq		$tmp116 tex_preMultAlpha $const1 	%line{155} %argrw{"wrr"}
	if		$tmp116 226 226 	%argrw{"r"}
	mul		___396_result_u ___396_result_u ___396_result_alpha_u 	%line{157} %argrw{"wrr"}
	functioncall	$const25 234 	%line{285} %argrw{"r"}
	compref		$tmp118 ___396_result_u $const1 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{28} %argrw{"wrr"}
	compref		$tmp119 ___396_result_u $const2 	%argrw{"wrr"}
	add		$tmp120 $tmp118 $tmp119 	%argrw{"wrr"}
	compref		$tmp121 ___396_result_u $const18 	%argrw{"wrr"}
	add		$tmp122 $tmp120 $tmp121 	%argrw{"wrr"}
	mul		___306_f $tmp122 $const26 	%argrw{"wrr"}
	assign		$tmp117 ___306_f 	%line{29} %argrw{"wr"}
	sub		$tmp123 $tmp117 ___395_F 	%filename{"E:/github/elaramax/Shaders/max_bitmap.osl"} %line{285} %argrw{"wrr"}
	div		___395_dFdu $tmp123 ___395_d_u 	%argrw{"wrr"}
	assign		___395_dFdv $const1 	%line{288} %argrw{"wr"}
	neq		$tmp124 ___395_d_v $const1 	%line{289} %argrw{"wrr"}
	if		$tmp124 295 295 	%argrw{"r"}
	assign		___397_result_v $const13 	%line{291} %argrw{"wr"}
	assign		___397_result_alpha_v $const2 	%line{292} %argrw{"wr"}
	add		$tmp125 mv ___395_d_v 	%line{304} %argrw{"wrr"}
	sub		$tmp126 $const3 $tmp125 	%argrw{"wrr"}
	functioncall	$const16 285 	%argrw{"r"}
	assign		___368_fileAlpha $const2 	%line{50} %argrw{"wr"}
	ge		$tmp127 ___394_fileNumChannels $const17 	%line{52} %argrw{"wrr"}
	if		$tmp127 251 263 	%argrw{"r"}
	eq		$tmp128 tex_filtering $const18 	%line{55} %argrw{"wrr"}
	if		$tmp128 250 251 	%argrw{"r"}
	texture		___397_result_v tex_fileName mu $tmp126 $const19 $const12 $const20 $const12 $const21 $const22 $const23 $const22 $const24 ___368_fileAlpha 	%line{65} %argrw{"wrrrrrrrrrrrrw"} %argderivs{2,3}
	texture		___397_result_v tex_fileName mu $tmp126 $const19 texFilterWidth $const20 $const12 $const21 $const22 $const23 $const22 $const24 ___368_fileAlpha 	%line{77} %argrw{"wrrrrrrrrrrrrw"} %argderivs{2,3}
	eq		$tmp129 ___394_fileNumChannels $const14 	%line{80} %argrw{"wrr"}
	if		$tmp129 257 263 	%argrw{"r"}
	eq		$tmp130 tex_filtering $const18 	%line{83} %argrw{"wrr"}
	if		$tmp130 256 257 	%argrw{"r"}
	texture		___397_result_v tex_fileName mu $tmp126 $const19 $const12 $const20 $const12 $const21 $const22 $const23 $const22 	%line{92} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	texture		___397_result_v tex_fileName mu $tmp126 $const19 texFilterWidth $const20 $const12 $const21 $const22 $const23 $const22 	%line{103} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	assign		___375_gray_channel $const1 	%line{109} %argrw{"wr"}
	eq		$tmp131 tex_filtering $const18 	%line{110} %argrw{"wrr"}
	if		$tmp131 261 262 	%argrw{"r"}
	texture		___375_gray_channel tex_fileName mu $tmp126 $const19 $const12 $const20 $const12 $const21 $const22 $const23 $const22 	%line{119} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	texture		___375_gray_channel tex_fileName mu $tmp126 $const19 texFilterWidth $const20 $const12 $const21 $const22 $const23 $const22 	%line{130} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	assign		___397_result_v ___375_gray_channel 	%line{133} %argrw{"wr"}
	eq		$tmp132 tex_alphaSource $const18 	%line{136} %argrw{"wrr"}
	if		$tmp132 266 279 	%argrw{"r"}
	assign		___397_result_alpha_v $const2 	%line{138} %argrw{"wr"}
	eq		$tmp133 tex_alphaSource $const2 	%line{140} %argrw{"wrr"}
	if		$tmp133 276 279 	%argrw{"r"}
	functioncall	$const25 276 	%line{142} %argrw{"r"}
	compref		$tmp134 ___397_result_v $const1 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{28} %argrw{"wrr"}
	compref		$tmp135 ___397_result_v $const2 	%argrw{"wrr"}
	add		$tmp136 $tmp134 $tmp135 	%argrw{"wrr"}
	compref		$tmp137 ___397_result_v $const18 	%argrw{"wrr"}
	add		$tmp138 $tmp136 $tmp137 	%argrw{"wrr"}
	mul		___306_f $tmp138 $const26 	%argrw{"wrr"}
	assign		___397_result_alpha_v ___306_f 	%line{29} %argrw{"wr"}
	eq		$tmp139 tex_alphaSource $const1 	%filename{"E:/github/elaramax/Shaders/max_bitmap.osl"} %line{144} %argrw{"wrr"}
	if		$tmp139 279 279 	%argrw{"r"}
	assign		___397_result_alpha_v ___368_fileAlpha 	%line{146} %argrw{"wr"}
	eq		$tmp140 tex_rgbOutput $const2 	%line{149} %argrw{"wrr"}
	if		$tmp140 282 285 	%argrw{"r"}
	assign		___397_result_v ___397_result_alpha_v 	%line{151} %argrw{"wr"}
	eq		$tmp141 tex_preMultAlpha $const1 	%line{155} %argrw{"wrr"}
	if		$tmp141 285 285 	%argrw{"r"}
	mul		___397_result_v ___397_result_v ___397_result_alpha_v 	%line{157} %argrw{"wrr"}
	functioncall	$const25 293 	%line{305} %argrw{"r"}
	compref		$tmp143 ___397_result_v $const1 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{28} %argrw{"wrr"}
	compref		$tmp144 ___397_result_v $const2 	%argrw{"wrr"}
	add		$tmp145 $tmp143 $tmp144 	%argrw{"wrr"}
	compref		$tmp146 ___397_result_v $const18 	%argrw{"wrr"}
	add		$tmp147 $tmp145 $tmp146 	%argrw{"wrr"}
	mul		___306_f $tmp147 $const26 	%argrw{"wrr"}
	assign		$tmp142 ___306_f 	%line{29} %argrw{"wr"}
	sub		$tmp148 $tmp142 ___395_F 	%filename{"E:/github/elaramax/Shaders/max_bitmap.osl"} %line{305} %argrw{"wrr"}
	div		___395_dFdv $tmp148 ___395_d_v 	%argrw{"wrr"}
	normalize	$tmp149 dPdu 	%line{308} %argrw{"wr"}
	mul		$tmp150 $tmp149 ___395_dFdu 	%argrw{"wrr"}
	normalize	$tmp151 dPdv 	%argrw{"wr"}
	mul		$tmp152 $tmp151 ___395_dFdv 	%argrw{"wrr"}
	add		$tmp153 $tmp150 $tmp152 	%argrw{"wrr"}
	neg		result_bump $tmp153 	%argrw{"wr"}
	assign		result_alpha $const1 	%line{314} %argrw{"wr"}
	assign		___387_nativeFormat $const1 	%line{317} %argrw{"wr"}
	gettextureinfo	$tmp154 tex_fileName $const27 ___387_nativeFormat 	%line{318} %argrw{"wrrw"}
	eq		$tmp155 ___387_nativeFormat $const18 	%line{323} %argrw{"wrr"}
	neq		$tmp156 $tmp155 $const1 	%argrw{"wrr"}
	if		$tmp156 307 310 	%argrw{"r"}
	eq		$tmp157 ___387_nativeFormat $const14 	%argrw{"wrr"}
	neq		$tmp158 $tmp157 $const1 	%argrw{"wrr"}
	assign		$tmp156 $tmp158 	%argrw{"wr"}
	neq		$tmp159 $tmp156 $const1 	%argrw{"wrr"}
	if		$tmp159 312 315 	%line{324} %argrw{"r"}
	eq		$tmp160 ___387_nativeFormat $const17 	%argrw{"wrr"}
	neq		$tmp161 $tmp160 $const1 	%argrw{"wrr"}
	assign		$tmp159 $tmp161 	%argrw{"wr"}
	neq		$tmp162 $tmp159 $const1 	%argrw{"wrr"}
	if		$tmp162 317 320 	%argrw{"r"}
	eq		$tmp163 ___387_nativeFormat $const28 	%argrw{"wrr"}
	neq		$tmp164 $tmp163 $const1 	%argrw{"wrr"}
	assign		$tmp162 $tmp164 	%argrw{"wr"}
	if		$tmp162 381 381 	%line{323} %argrw{"r"}
	assign		___399_texture_gamma $const3 	%line{326} %argrw{"wr"}
	getattribute	$tmp165 $const29 $const30 ___399_texture_gamma 	%line{327} %argrw{"wrrw"}
	functioncall	$const31 381 	%line{329} %argrw{"r"}
	gt		$tmp166 ___399_texture_gamma $const12 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{412} %argrw{"wrr"}
	neq		$tmp167 $tmp166 $const1 	%argrw{"wrr"}
	if		$tmp167 330 330 	%argrw{"r"}
	neq		$tmp168 ___399_texture_gamma $const3 	%argrw{"wrr"}
	neq		$tmp169 $tmp168 $const1 	%argrw{"wrr"}
	assign		$tmp167 $tmp169 	%argrw{"wr"}
	if		$tmp167 381 381 	%argrw{"r"}
	eq		$tmp170 ___399_texture_gamma $const32 	%line{414} %argrw{"wrr"}
	if		$tmp170 369 381 	%argrw{"r"}
	compref		$tmp172 result $const1 	%line{416} %argrw{"wrr"}
	max		$tmp171 $tmp172 $const12 	%argrw{"wrr"}
	compassign	result $const1 $tmp171 	%argrw{"wrr"}
	compref		$tmp174 result $const2 	%line{417} %argrw{"wrr"}
	max		$tmp173 $tmp174 $const12 	%argrw{"wrr"}
	compassign	result $const2 $tmp173 	%argrw{"wrr"}
	compref		$tmp176 result $const18 	%line{418} %argrw{"wrr"}
	max		$tmp175 $tmp176 $const12 	%argrw{"wrr"}
	compassign	result $const18 $tmp175 	%argrw{"wrr"}
	compref		$tmp177 result $const1 	%line{419} %argrw{"wrr"}
	compref		$tmp178 result $const1 	%argrw{"wrr"}
	mul		$tmp179 $tmp177 $tmp178 	%argrw{"wrr"}
	compref		$tmp181 result $const1 	%argrw{"wrr"}
	sqrt		$tmp180 $tmp181 	%argrw{"wr"}
	mul		$tmp182 $const34 $tmp180 	%argrw{"wrr"}
	add		$tmp183 $const33 $tmp182 	%argrw{"wrr"}
	mul		$tmp184 $tmp179 $tmp183 	%argrw{"wrr"}
	compassign	result $const1 $tmp184 	%argrw{"wrr"}
	compref		$tmp185 result $const2 	%line{420} %argrw{"wrr"}
	compref		$tmp186 result $const2 	%argrw{"wrr"}
	mul		$tmp187 $tmp185 $tmp186 	%argrw{"wrr"}
	compref		$tmp189 result $const2 	%argrw{"wrr"}
	sqrt		$tmp188 $tmp189 	%argrw{"wr"}
	mul		$tmp190 $const34 $tmp188 	%argrw{"wrr"}
	add		$tmp191 $const33 $tmp190 	%argrw{"wrr"}
	mul		$tmp192 $tmp187 $tmp191 	%argrw{"wrr"}
	compassign	result $const2 $tmp192 	%argrw{"wrr"}
	compref		$tmp193 result $const18 	%line{421} %argrw{"wrr"}
	compref		$tmp194 result $const18 	%argrw{"wrr"}
	mul		$tmp195 $tmp193 $tmp194 	%argrw{"wrr"}
	compref		$tmp197 result $const18 	%argrw{"wrr"}
	sqrt		$tmp196 $tmp197 	%argrw{"wr"}
	mul		$tmp198 $const34 $tmp196 	%argrw{"wrr"}
	add		$tmp199 $const33 $tmp198 	%argrw{"wrr"}
	mul		$tmp200 $tmp195 $tmp199 	%argrw{"wrr"}
	compassign	result $const18 $tmp200 	%argrw{"wrr"}
	compref		$tmp203 result $const1 	%line{425} %argrw{"wrr"}
	max		$tmp202 $tmp203 $const12 	%argrw{"wrr"}
	pow		$tmp201 $tmp202 ___399_texture_gamma 	%argrw{"wrr"}
	compassign	result $const1 $tmp201 	%argrw{"wrr"}
	compref		$tmp206 result $const2 	%line{426} %argrw{"wrr"}
	max		$tmp205 $tmp206 $const12 	%argrw{"wrr"}
	pow		$tmp204 $tmp205 ___399_texture_gamma 	%argrw{"wrr"}
	compassign	result $const2 $tmp204 	%argrw{"wrr"}
	compref		$tmp209 result $const18 	%line{427} %argrw{"wrr"}
	max		$tmp208 $tmp209 $const12 	%argrw{"wrr"}
	pow		$tmp207 $tmp208 ___399_texture_gamma 	%argrw{"wrr"}
	compassign	result $const18 $tmp207 	%argrw{"wrr"}
	end
