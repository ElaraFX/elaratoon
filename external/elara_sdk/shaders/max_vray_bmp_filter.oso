OpenShadingLanguage 1.00
# Compiled by oslc 1.7.2
# options: 
shader max_vray_bmp_filter
param	string	tex_fileName	""		%read{9,56} %write{2147483647,-1} %derivs
param	float	tex_u_offset	-0.5		%read{16,16} %write{2147483647,-1} %derivs
param	float	tex_v_offset	-0.5		%read{17,17} %write{2147483647,-1} %derivs
param	int	tex_u_flip	0		%read{50,50} %write{2147483647,-1}
param	int	tex_v_flip	0		%read{52,52} %write{2147483647,-1}
param	int	tex_channel	1		%read{1,1} %write{2147483647,-1} %derivs
param	int	tex_u_tile	1		%read{18,18} %write{2147483647,-1}
param	int	tex_v_tile	1		%read{33,33} %write{2147483647,-1}
oparam	color	result	0 0 0		%read{86,130} %write{6,133}
oparam	float	result_alpha	1		%read{2147483647,-1} %write{32,47}
oparam	vector	result_bump	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
local	point	uv	%read{7,8} %write{0,5} %derivs
local	string	mapChannel	%read{2,2} %write{1,1} %derivs
local	float	mu	%read{22,54} %write{7,51} %derivs
local	float	mv	%read{37,54} %write{8,53} %derivs
local	int[2]	___369_resolution	%read{12,14} %write{11,11} %derivs
local	float	___369_fw	%read{16,16} %write{13,13} %derivs
local	float	___369_fh	%read{17,17} %write{15,15} %derivs
local	float	___369_xoffset	%read{21,48} %write{16,16} %derivs
local	float	___369_yoffset	%read{36,49} %write{17,17} %derivs
local	int	___372_nativeFormat	%read{57,70} %write{55,56}
local	float	___375_texture_gamma	%read{77,132} %write{74,75}
const	point	$const1	0 0 0		%read{0,0} %write{2147483647,-1}
const	string	$const2	"uv%d"		%read{1,1} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
temp	int	$tmp2	%read{4,4} %write{3,3}
const	int	$const3	0		%read{3,125} %write{2147483647,-1}
temp	int	$tmp3	%read{2147483647,-1} %write{5,5}
const	string	$const4	"uv0"		%read{5,5} %write{2147483647,-1}
const	color	$const5	0 0 0		%read{6,6} %write{2147483647,-1}
const	int	$const6	1		%read{8,129} %write{2147483647,-1}
const	string	$const7	""		%read{9,9} %write{2147483647,-1}
temp	int	$tmp4	%read{10,10} %write{9,9}
temp	int	$tmp5	%read{2147483647,-1} %write{11,11}
const	string	$const8	"resolution"		%read{11,11} %write{2147483647,-1}
temp	int	$tmp6	%read{13,13} %write{12,12} %derivs
temp	int	$tmp7	%read{15,15} %write{14,14} %derivs
temp	int	$tmp8	%read{19,19} %write{18,18}
temp	int	$tmp9	%read{20,31} %write{19,30}
const	float	$const9	1		%read{21,80} %write{2147483647,-1}
temp	float	$tmp10	%read{22,22} %write{21,21}
temp	int	$tmp11	%read{23,23} %write{22,22}
temp	int	$tmp12	%read{24,29} %write{23,28}
temp	float	$tmp13	%read{26,26} %write{25,25}
temp	int	$tmp14	%read{27,27} %write{26,26}
temp	int	$tmp15	%read{28,28} %write{27,27}
temp	int	$tmp16	%read{30,30} %write{29,29}
const	float	$const10	0		%read{32,131} %write{2147483647,-1}
temp	int	$tmp17	%read{34,34} %write{33,33}
temp	int	$tmp18	%read{35,46} %write{34,45}
temp	float	$tmp19	%read{37,37} %write{36,36}
temp	int	$tmp20	%read{38,38} %write{37,37}
temp	int	$tmp21	%read{39,44} %write{38,43}
temp	float	$tmp22	%read{41,41} %write{40,40}
temp	int	$tmp23	%read{42,42} %write{41,41}
temp	int	$tmp24	%read{43,43} %write{42,42}
temp	int	$tmp25	%read{45,45} %write{44,44}
const	string	$const11	"width"		%read{54,54} %write{2147483647,-1}
const	string	$const12	"blur"		%read{54,54} %write{2147483647,-1}
const	string	$const13	"swrap"		%read{54,54} %write{2147483647,-1}
const	string	$const14	"periodic"		%read{54,54} %write{2147483647,-1}
const	string	$const15	"twrap"		%read{54,54} %write{2147483647,-1}
temp	int	$tmp26	%read{2147483647,-1} %write{56,56}
const	string	$const16	"format"		%read{56,56} %write{2147483647,-1}
const	int	$const17	2		%read{57,133} %write{2147483647,-1}
temp	int	$tmp27	%read{58,58} %write{57,57}
temp	int	$tmp28	%read{59,63} %write{58,62}
const	int	$const18	3		%read{60,60} %write{2147483647,-1}
temp	int	$tmp29	%read{61,61} %write{60,60}
temp	int	$tmp30	%read{62,62} %write{61,61}
temp	int	$tmp31	%read{64,68} %write{63,67}
const	int	$const19	4		%read{65,65} %write{2147483647,-1}
temp	int	$tmp32	%read{66,66} %write{65,65}
temp	int	$tmp33	%read{67,67} %write{66,66}
temp	int	$tmp34	%read{69,73} %write{68,72}
const	int	$const20	5		%read{70,70} %write{2147483647,-1}
temp	int	$tmp35	%read{71,71} %write{70,70}
temp	int	$tmp36	%read{72,72} %write{71,71}
temp	int	$tmp37	%read{2147483647,-1} %write{75,75}
const	string	$const21	"options"		%read{75,75} %write{2147483647,-1}
const	string	$const22	"texture_gamma"		%read{75,75} %write{2147483647,-1}
const	string	$const23	"ei_degamma"		%read{76,76} %write{2147483647,-1}
temp	int	$tmp38	%read{78,78} %write{77,77}
temp	int	$tmp39	%read{79,83} %write{78,82}
temp	int	$tmp40	%read{81,81} %write{80,80}
temp	int	$tmp41	%read{82,82} %write{81,81}
const	float	$const24	2.2		%read{84,84} %write{2147483647,-1}
temp	int	$tmp42	%read{85,85} %write{84,84}
temp	float	$tmp43	%read{88,88} %write{87,87}
temp	float	$tmp44	%read{87,87} %write{86,86}
temp	float	$tmp45	%read{91,91} %write{90,90}
temp	float	$tmp46	%read{90,90} %write{89,89}
temp	float	$tmp47	%read{94,94} %write{93,93}
temp	float	$tmp48	%read{93,93} %write{92,92}
temp	float	$tmp49	%read{97,97} %write{95,95}
temp	float	$tmp50	%read{97,97} %write{96,96}
temp	float	$tmp51	%read{102,102} %write{97,97}
const	float	$const25	0.56999999		%read{101,119} %write{2147483647,-1}
const	float	$const26	0.43000001		%read{100,118} %write{2147483647,-1}
temp	float	$tmp52	%read{100,100} %write{99,99}
temp	float	$tmp53	%read{99,99} %write{98,98}
temp	float	$tmp54	%read{101,101} %write{100,100}
temp	float	$tmp55	%read{102,102} %write{101,101}
temp	float	$tmp56	%read{103,103} %write{102,102}
temp	float	$tmp57	%read{106,106} %write{104,104}
temp	float	$tmp58	%read{106,106} %write{105,105}
temp	float	$tmp59	%read{111,111} %write{106,106}
temp	float	$tmp60	%read{109,109} %write{108,108}
temp	float	$tmp61	%read{108,108} %write{107,107}
temp	float	$tmp62	%read{110,110} %write{109,109}
temp	float	$tmp63	%read{111,111} %write{110,110}
temp	float	$tmp64	%read{112,112} %write{111,111}
temp	float	$tmp65	%read{115,115} %write{113,113}
temp	float	$tmp66	%read{115,115} %write{114,114}
temp	float	$tmp67	%read{120,120} %write{115,115}
temp	float	$tmp68	%read{118,118} %write{117,117}
temp	float	$tmp69	%read{117,117} %write{116,116}
temp	float	$tmp70	%read{119,119} %write{118,118}
temp	float	$tmp71	%read{120,120} %write{119,119}
temp	float	$tmp72	%read{121,121} %write{120,120}
temp	float	$tmp73	%read{125,125} %write{124,124}
temp	float	$tmp74	%read{124,124} %write{123,123}
temp	float	$tmp75	%read{123,123} %write{122,122}
temp	float	$tmp76	%read{129,129} %write{128,128}
temp	float	$tmp77	%read{128,128} %write{127,127}
temp	float	$tmp78	%read{127,127} %write{126,126}
temp	float	$tmp79	%read{133,133} %write{132,132}
temp	float	$tmp80	%read{132,132} %write{131,131}
temp	float	$tmp81	%read{131,131} %write{130,130}
code ___main___
	assign		uv $const1 	%filename{"E:/github/elaramax/Shaders/max_vray_bmp_filter.osl"} %line{42} %argrw{"wr"}
	format		mapChannel $const2 tex_channel 	%line{44} %argrw{"wrr"}
	getattribute	$tmp1 mapChannel uv 	%line{46} %argrw{"wrw"}
	eq		$tmp2 $tmp1 $const3 	%argrw{"wrr"}
	if		$tmp2 6 6 	%argrw{"r"}
	getattribute	$tmp3 $const4 uv 	%line{48} %argrw{"wrw"}
	assign		result $const5 	%line{51} %argrw{"wr"}
	compref		mu uv $const3 	%line{53} %argrw{"wrr"}
	compref		mv uv $const6 	%line{54} %argrw{"wrr"}
	neq		$tmp4 tex_fileName $const7 	%line{56} %argrw{"wrr"}
	if		$tmp4 134 134 	%argrw{"r"}
	gettextureinfo	$tmp5 tex_fileName $const8 ___369_resolution 	%line{59} %argrw{"wrrw"}
	aref		$tmp6 ___369_resolution $const3 	%line{61} %argrw{"wrr"}
	assign		___369_fw $tmp6 	%argrw{"wr"}
	aref		$tmp7 ___369_resolution $const6 	%line{62} %argrw{"wrr"}
	assign		___369_fh $tmp7 	%argrw{"wr"}
	div		___369_xoffset tex_u_offset ___369_fw 	%line{64} %argrw{"wrr"}
	div		___369_yoffset tex_v_offset ___369_fh 	%line{65} %argrw{"wrr"}
	eq		$tmp8 tex_u_tile $const3 	%line{67} %argrw{"wrr"}
	neq		$tmp9 $tmp8 $const3 	%argrw{"wrr"}
	if		$tmp9 31 31 	%argrw{"r"}
	sub		$tmp10 $const9 ___369_xoffset 	%argrw{"wrr"}
	gt		$tmp11 mu $tmp10 	%argrw{"wrr"}
	neq		$tmp12 $tmp11 $const3 	%argrw{"wrr"}
	if		$tmp12 25 29 	%argrw{"r"}
	neg		$tmp13 ___369_xoffset 	%argrw{"wr"}
	lt		$tmp14 mu $tmp13 	%argrw{"wrr"}
	neq		$tmp15 $tmp14 $const3 	%argrw{"wrr"}
	assign		$tmp12 $tmp15 	%argrw{"wr"}
	neq		$tmp16 $tmp12 $const3 	%argrw{"wrr"}
	assign		$tmp9 $tmp16 	%argrw{"wr"}
	if		$tmp9 33 134 	%argrw{"r"}
	assign		result_alpha $const10 	%line{69} %argrw{"wr"}
	eq		$tmp17 tex_v_tile $const3 	%line{71} %argrw{"wrr"}
	neq		$tmp18 $tmp17 $const3 	%argrw{"wrr"}
	if		$tmp18 46 46 	%argrw{"r"}
	sub		$tmp19 $const9 ___369_yoffset 	%argrw{"wrr"}
	gt		$tmp20 mv $tmp19 	%argrw{"wrr"}
	neq		$tmp21 $tmp20 $const3 	%argrw{"wrr"}
	if		$tmp21 40 44 	%argrw{"r"}
	neg		$tmp22 ___369_yoffset 	%argrw{"wr"}
	lt		$tmp23 mv $tmp22 	%argrw{"wrr"}
	neq		$tmp24 $tmp23 $const3 	%argrw{"wrr"}
	assign		$tmp21 $tmp24 	%argrw{"wr"}
	neq		$tmp25 $tmp21 $const3 	%argrw{"wrr"}
	assign		$tmp18 $tmp25 	%argrw{"wr"}
	if		$tmp18 48 134 	%argrw{"r"}
	assign		result_alpha $const10 	%line{73} %argrw{"wr"}
	add		mu mu ___369_xoffset 	%line{77} %argrw{"wrr"}
	add		mv mv ___369_yoffset 	%line{78} %argrw{"wrr"}
	if		tex_u_flip 52 52 	%line{80} %argrw{"r"}
	sub		mu $const9 mu 	%line{82} %argrw{"wrr"}
	if		tex_v_flip 54 54 	%line{85} %argrw{"r"}
	sub		mv $const9 mv 	%line{87} %argrw{"wrr"}
	texture		result tex_fileName mu mv $const11 $const10 $const12 $const10 $const13 $const14 $const15 $const14 	%line{97} %argrw{"wrrrrrrrrrrr"} %argderivs{2,3}
	assign		___372_nativeFormat $const3 	%line{99} %argrw{"wr"}
	gettextureinfo	$tmp26 tex_fileName $const16 ___372_nativeFormat 	%line{100} %argrw{"wrrw"}
	eq		$tmp27 ___372_nativeFormat $const17 	%line{105} %argrw{"wrr"}
	neq		$tmp28 $tmp27 $const3 	%argrw{"wrr"}
	if		$tmp28 60 63 	%argrw{"r"}
	eq		$tmp29 ___372_nativeFormat $const18 	%argrw{"wrr"}
	neq		$tmp30 $tmp29 $const3 	%argrw{"wrr"}
	assign		$tmp28 $tmp30 	%argrw{"wr"}
	neq		$tmp31 $tmp28 $const3 	%argrw{"wrr"}
	if		$tmp31 65 68 	%line{106} %argrw{"r"}
	eq		$tmp32 ___372_nativeFormat $const19 	%argrw{"wrr"}
	neq		$tmp33 $tmp32 $const3 	%argrw{"wrr"}
	assign		$tmp31 $tmp33 	%argrw{"wr"}
	neq		$tmp34 $tmp31 $const3 	%argrw{"wrr"}
	if		$tmp34 70 73 	%argrw{"r"}
	eq		$tmp35 ___372_nativeFormat $const20 	%argrw{"wrr"}
	neq		$tmp36 $tmp35 $const3 	%argrw{"wrr"}
	assign		$tmp34 $tmp36 	%argrw{"wr"}
	if		$tmp34 134 134 	%line{105} %argrw{"r"}
	assign		___375_texture_gamma $const9 	%line{108} %argrw{"wr"}
	getattribute	$tmp37 $const21 $const22 ___375_texture_gamma 	%line{109} %argrw{"wrrw"}
	functioncall	$const23 134 	%line{111} %argrw{"r"}
	gt		$tmp38 ___375_texture_gamma $const10 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{412} %argrw{"wrr"}
	neq		$tmp39 $tmp38 $const3 	%argrw{"wrr"}
	if		$tmp39 83 83 	%argrw{"r"}
	neq		$tmp40 ___375_texture_gamma $const9 	%argrw{"wrr"}
	neq		$tmp41 $tmp40 $const3 	%argrw{"wrr"}
	assign		$tmp39 $tmp41 	%argrw{"wr"}
	if		$tmp39 134 134 	%argrw{"r"}
	eq		$tmp42 ___375_texture_gamma $const24 	%line{414} %argrw{"wrr"}
	if		$tmp42 122 134 	%argrw{"r"}
	compref		$tmp44 result $const3 	%line{416} %argrw{"wrr"}
	max		$tmp43 $tmp44 $const10 	%argrw{"wrr"}
	compassign	result $const3 $tmp43 	%argrw{"wrr"}
	compref		$tmp46 result $const6 	%line{417} %argrw{"wrr"}
	max		$tmp45 $tmp46 $const10 	%argrw{"wrr"}
	compassign	result $const6 $tmp45 	%argrw{"wrr"}
	compref		$tmp48 result $const17 	%line{418} %argrw{"wrr"}
	max		$tmp47 $tmp48 $const10 	%argrw{"wrr"}
	compassign	result $const17 $tmp47 	%argrw{"wrr"}
	compref		$tmp49 result $const3 	%line{419} %argrw{"wrr"}
	compref		$tmp50 result $const3 	%argrw{"wrr"}
	mul		$tmp51 $tmp49 $tmp50 	%argrw{"wrr"}
	compref		$tmp53 result $const3 	%argrw{"wrr"}
	sqrt		$tmp52 $tmp53 	%argrw{"wr"}
	mul		$tmp54 $const26 $tmp52 	%argrw{"wrr"}
	add		$tmp55 $const25 $tmp54 	%argrw{"wrr"}
	mul		$tmp56 $tmp51 $tmp55 	%argrw{"wrr"}
	compassign	result $const3 $tmp56 	%argrw{"wrr"}
	compref		$tmp57 result $const6 	%line{420} %argrw{"wrr"}
	compref		$tmp58 result $const6 	%argrw{"wrr"}
	mul		$tmp59 $tmp57 $tmp58 	%argrw{"wrr"}
	compref		$tmp61 result $const6 	%argrw{"wrr"}
	sqrt		$tmp60 $tmp61 	%argrw{"wr"}
	mul		$tmp62 $const26 $tmp60 	%argrw{"wrr"}
	add		$tmp63 $const25 $tmp62 	%argrw{"wrr"}
	mul		$tmp64 $tmp59 $tmp63 	%argrw{"wrr"}
	compassign	result $const6 $tmp64 	%argrw{"wrr"}
	compref		$tmp65 result $const17 	%line{421} %argrw{"wrr"}
	compref		$tmp66 result $const17 	%argrw{"wrr"}
	mul		$tmp67 $tmp65 $tmp66 	%argrw{"wrr"}
	compref		$tmp69 result $const17 	%argrw{"wrr"}
	sqrt		$tmp68 $tmp69 	%argrw{"wr"}
	mul		$tmp70 $const26 $tmp68 	%argrw{"wrr"}
	add		$tmp71 $const25 $tmp70 	%argrw{"wrr"}
	mul		$tmp72 $tmp67 $tmp71 	%argrw{"wrr"}
	compassign	result $const17 $tmp72 	%argrw{"wrr"}
	compref		$tmp75 result $const3 	%line{425} %argrw{"wrr"}
	max		$tmp74 $tmp75 $const10 	%argrw{"wrr"}
	pow		$tmp73 $tmp74 ___375_texture_gamma 	%argrw{"wrr"}
	compassign	result $const3 $tmp73 	%argrw{"wrr"}
	compref		$tmp78 result $const6 	%line{426} %argrw{"wrr"}
	max		$tmp77 $tmp78 $const10 	%argrw{"wrr"}
	pow		$tmp76 $tmp77 ___375_texture_gamma 	%argrw{"wrr"}
	compassign	result $const6 $tmp76 	%argrw{"wrr"}
	compref		$tmp81 result $const17 	%line{427} %argrw{"wrr"}
	max		$tmp80 $tmp81 $const10 	%argrw{"wrr"}
	pow		$tmp79 $tmp80 ___375_texture_gamma 	%argrw{"wrr"}
	compassign	result $const17 $tmp79 	%argrw{"wrr"}
	end
