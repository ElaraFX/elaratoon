OpenShadingLanguage 1.00
# Compiled by oslc 1.7.2
# options: 
shader max_vray_comptex
param	color	tex_sourceA	0 0 0		%read{3,82} %write{2147483647,-1}
param	float	tex_sourceA_alpha	1		%read{5,84} %write{2147483647,-1}
param	vector	tex_sourceA_bump	0 0 0		%read{7,86} %write{2147483647,-1}
param	color	tex_sourceB	0 0 0		%read{3,82} %write{2147483647,-1}
param	float	tex_sourceB_alpha	1		%read{5,84} %write{2147483647,-1}
param	vector	tex_sourceB_bump	0 0 0		%read{7,87} %write{2147483647,-1}
param	int	tex_operator	0		%read{0,80} %write{2147483647,-1}
oparam	float	result_alpha	1		%read{2147483647,-1} %write{6,83}
oparam	vector	result_bump	0 0 0		%read{2147483647,-1} %write{7,87}
oparam	color	result	0 0 0		%read{2147483647,-1} %write{4,82}
local	int	___422_i	%read{37,56} %write{36,56}
const	int	$const1	0		%read{0,36} %write{2147483647,-1}
temp	int	$tmp1	%read{1,1} %write{0,0}
const	int	$const2	1		%read{8,56} %write{2147483647,-1}
const	float	$const3	1		%read{2,65} %write{2147483647,-1}
temp	color	$tmp2	%read{4,4} %write{2,2}
temp	color	$tmp3	%read{4,4} %write{3,3}
temp	float	$tmp4	%read{6,6} %write{5,5}
temp	int	$tmp5	%read{9,9} %write{8,8}
const	float	$const4	0		%read{10,14} %write{2147483647,-1}
temp	color	$tmp6	%read{12,12} %write{10,10}
temp	color	$tmp7	%read{12,12} %write{11,11}
temp	float	$tmp8	%read{14,14} %write{13,13}
const	int	$const5	2		%read{16,16} %write{2147483647,-1}
temp	int	$tmp9	%read{17,17} %write{16,16}
temp	color	$tmp10	%read{19,19} %write{18,18}
temp	float	$tmp11	%read{21,21} %write{20,20}
temp	int	$tmp12	%read{23,23} %write{22,22}
const	int	$const6	3		%read{26,37} %write{2147483647,-1}
temp	int	$tmp13	%read{27,27} %write{26,26}
temp	vector	$tmp14	%read{32,32} %write{30,30}
temp	vector	$tmp15	%read{32,32} %write{31,31}
const	int	$const7	4		%read{33,33} %write{2147483647,-1}
temp	int	$tmp16	%read{34,34} %write{33,33}
temp	int	$tmp17	%read{35,56} %write{36,56}
temp	float	$tmp18	%read{37,56} %write{37,56}
temp	float	$tmp19	%read{37,56} %write{37,56}
temp	float	$tmp20	%read{37,56} %write{37,56}
temp	float	$tmp21	%read{37,56} %write{37,56}
const	float	$const8	1e-012		%read{42,63} %write{2147483647,-1}
temp	int	$tmp22	%read{37,56} %write{37,56}
temp	float	$tmp23	%read{37,56} %write{37,56}
temp	float	$tmp24	%read{37,56} %write{37,56}
temp	int	$tmp25	%read{37,56} %write{37,56}
temp	float	$tmp26	%read{37,56} %write{37,56}
temp	float	$tmp27	%read{37,56} %write{37,56}
temp	float	$tmp28	%read{37,56} %write{37,56}
temp	float	$tmp29	%read{37,56} %write{37,56}
temp	int	$tmp30	%read{2147483647,-1} %write{37,56}
temp	float	$tmp31	%read{59,59} %write{58,58}
temp	float	$tmp32	%read{58,58} %write{57,57}
temp	int	$tmp33	%read{60,60} %write{59,59}
temp	float	$tmp34	%read{63,63} %write{62,62}
temp	int	$tmp35	%read{64,64} %write{63,63}
temp	vector	$tmp36	%read{69,69} %write{67,67}
temp	vector	$tmp37	%read{69,69} %write{68,68}
temp	vector	$tmp38	%read{71,71} %write{69,69}
temp	float	$tmp39	%read{71,71} %write{70,70}
const	int	$const9	5		%read{72,72} %write{2147483647,-1}
temp	int	$tmp40	%read{73,73} %write{72,72}
temp	int	$tmp41	%read{77,77} %write{76,76}
const	int	$const10	6		%read{80,80} %write{2147483647,-1}
temp	int	$tmp42	%read{81,81} %write{80,80}
temp	int	$tmp43	%read{85,85} %write{84,84}
code ___main___
	eq		$tmp1 tex_operator $const1 	%filename{"E:/github/elaramax/Shaders/max_vray_comptex.osl"} %line{34} %argrw{"wrr"}
	if		$tmp1 8 88 	%argrw{"r"}
	assign		$tmp2 $const3 	%line{36} %argrw{"wr"}
	add		$tmp3 tex_sourceA tex_sourceB 	%argrw{"wrr"}
	min		result $tmp2 $tmp3 	%argrw{"wrr"}
	add		$tmp4 tex_sourceA_alpha tex_sourceB_alpha 	%line{37} %argrw{"wrr"}
	min		result_alpha $const3 $tmp4 	%argrw{"wrr"}
	add		result_bump tex_sourceA_bump tex_sourceB_bump 	%line{38} %argrw{"wrr"}
	eq		$tmp5 tex_operator $const2 	%line{40} %argrw{"wrr"}
	if		$tmp5 16 88 	%argrw{"r"}
	assign		$tmp6 $const4 	%line{42} %argrw{"wr"}
	sub		$tmp7 tex_sourceA tex_sourceB 	%argrw{"wrr"}
	max		result $tmp6 $tmp7 	%argrw{"wrr"}
	sub		$tmp8 tex_sourceA_alpha tex_sourceB_alpha 	%line{43} %argrw{"wrr"}
	max		result_alpha $const4 $tmp8 	%argrw{"wrr"}
	sub		result_bump tex_sourceA_bump tex_sourceB_bump 	%line{44} %argrw{"wrr"}
	eq		$tmp9 tex_operator $const5 	%line{46} %argrw{"wrr"}
	if		$tmp9 26 88 	%argrw{"r"}
	sub		$tmp10 tex_sourceA tex_sourceB 	%line{48} %argrw{"wrr"}
	abs		result $tmp10 	%argrw{"wr"}
	sub		$tmp11 tex_sourceA_alpha tex_sourceB_alpha 	%line{49} %argrw{"wrr"}
	abs		result_alpha $tmp11 	%argrw{"wr"}
	gt		$tmp12 tex_sourceA_alpha tex_sourceB_alpha 	%line{50} %argrw{"wrr"}
	if		$tmp12 25 26 	%argrw{"r"}
	sub		result_bump tex_sourceA_bump tex_sourceB_bump 	%argrw{"wrr"}
	sub		result_bump tex_sourceB_bump tex_sourceA_bump 	%line{51} %argrw{"wrr"}
	eq		$tmp13 tex_operator $const6 	%line{53} %argrw{"wrr"}
	if		$tmp13 33 88 	%argrw{"r"}
	mul		result tex_sourceA tex_sourceB 	%line{55} %argrw{"wrr"}
	mul		result_alpha tex_sourceA_alpha tex_sourceB_alpha 	%line{56} %argrw{"wrr"}
	mul		$tmp14 tex_sourceA_bump tex_sourceB_alpha 	%line{57} %argrw{"wrr"}
	mul		$tmp15 tex_sourceB_bump tex_sourceA_alpha 	%argrw{"wrr"}
	add		result_bump $tmp14 $tmp15 	%argrw{"wrr"}
	eq		$tmp16 tex_operator $const7 	%line{59} %argrw{"wrr"}
	if		$tmp16 72 88 	%argrw{"r"}
	for		$tmp17 37 38 55 57 	%line{61} %argrw{"r"}
	assign		___422_i $const1 	%argrw{"wr"}
	lt		$tmp17 ___422_i $const6 	%argrw{"wrr"}
	compref		$tmp19 tex_sourceA ___422_i 	%line{63} %argrw{"wrr"}
	compref		$tmp20 tex_sourceB ___422_i 	%argrw{"wrr"}
	sub		$tmp21 $tmp19 $tmp20 	%argrw{"wrr"}
	abs		$tmp18 $tmp21 	%argrw{"wr"}
	lt		$tmp22 $tmp18 $const8 	%argrw{"wrr"}
	if		$tmp22 45 55 	%argrw{"r"}
	compassign	result ___422_i $const3 	%argrw{"wrr"}
	compref		$tmp24 tex_sourceB ___422_i 	%line{64} %argrw{"wrr"}
	abs		$tmp23 $tmp24 	%argrw{"wr"}
	lt		$tmp25 $tmp23 $const8 	%argrw{"wrr"}
	if		$tmp25 50 55 	%argrw{"r"}
	compassign	result ___422_i $const3 	%argrw{"wrr"}
	compref		$tmp27 tex_sourceA ___422_i 	%line{65} %argrw{"wrr"}
	compref		$tmp28 tex_sourceB ___422_i 	%argrw{"wrr"}
	div		$tmp29 $tmp27 $tmp28 	%argrw{"wrr"}
	min		$tmp26 $const3 $tmp29 	%argrw{"wrr"}
	compassign	result ___422_i $tmp26 	%argrw{"wrr"}
	assign		$tmp30 ___422_i 	%line{61} %argrw{"wr"}
	add		___422_i ___422_i $const2 	%argrw{"wrr"}
	sub		$tmp32 tex_sourceA_alpha tex_sourceB_alpha 	%line{68} %argrw{"wrr"}
	abs		$tmp31 $tmp32 	%argrw{"wr"}
	lt		$tmp33 $tmp31 $const8 	%argrw{"wrr"}
	if		$tmp33 62 72 	%argrw{"r"}
	assign		result_alpha $const3 	%line{70} %argrw{"wr"}
	abs		$tmp34 tex_sourceB_alpha 	%line{72} %argrw{"wr"}
	lt		$tmp35 $tmp34 $const8 	%argrw{"wrr"}
	if		$tmp35 66 72 	%argrw{"r"}
	assign		result_alpha $const3 	%line{74} %argrw{"wr"}
	div		result_alpha tex_sourceA_alpha tex_sourceB_alpha 	%line{78} %argrw{"wrr"}
	mul		$tmp36 tex_sourceA_bump tex_sourceB_alpha 	%line{79} %argrw{"wrr"}
	mul		$tmp37 tex_sourceB_bump tex_sourceA_alpha 	%argrw{"wrr"}
	add		$tmp38 $tmp36 $tmp37 	%argrw{"wrr"}
	mul		$tmp39 tex_sourceB_alpha tex_sourceB_alpha 	%argrw{"wrr"}
	div		result_bump $tmp38 $tmp39 	%argrw{"wrr"}
	eq		$tmp40 tex_operator $const9 	%line{82} %argrw{"wrr"}
	if		$tmp40 80 88 	%argrw{"r"}
	min		result tex_sourceA tex_sourceB 	%line{84} %argrw{"wrr"}
	min		result_alpha tex_sourceA_alpha tex_sourceB_alpha 	%line{85} %argrw{"wrr"}
	lt		$tmp41 tex_sourceA_alpha tex_sourceB_alpha 	%line{86} %argrw{"wrr"}
	if		$tmp41 79 80 	%argrw{"r"}
	assign		result_bump tex_sourceA_bump 	%argrw{"wr"}
	assign		result_bump tex_sourceB_bump 	%argrw{"wr"}
	eq		$tmp42 tex_operator $const10 	%line{88} %argrw{"wrr"}
	if		$tmp42 88 88 	%argrw{"r"}
	max		result tex_sourceA tex_sourceB 	%line{90} %argrw{"wrr"}
	max		result_alpha tex_sourceA_alpha tex_sourceB_alpha 	%line{91} %argrw{"wrr"}
	gt		$tmp43 tex_sourceA_alpha tex_sourceB_alpha 	%line{92} %argrw{"wrr"}
	if		$tmp43 87 88 	%argrw{"r"}
	assign		result_bump tex_sourceA_bump 	%argrw{"wr"}
	assign		result_bump tex_sourceB_bump 	%argrw{"wr"}
	end
