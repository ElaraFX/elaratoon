OpenShadingLanguage 1.00
# Compiled by oslc 1.7.2
# options: 
shader max_vray_dirt
param	float	tex_radius	10		%read{76,143} %write{2147483647,-1}
param	color	tex_occluded_color	0 0 0		%read{154,154} %write{2147483647,-1}
param	color	tex_unoccluded_color	1 1 1		%read{155,155} %write{2147483647,-1}
param	int	tex_subdivs	8		%read{81,81} %write{2147483647,-1}
oparam	color	result	0 0 0		%read{2147483647,-1} %write{156,156}
oparam	float	result_alpha	1		%read{2147483647,-1} %write{2147483647,-1}
oparam	vector	result_bump	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
global	point	P	%read{76,143} %write{2147483647,-1} %derivs
global	normal	N	%read{54,121} %write{2147483647,-1} %derivs
local	float	___368_PI_OVER_4	%read{35,148} %write{23,148} %derivs
local	float	___368_PI_OVER_2	%read{41,148} %write{24,148} %derivs
local	float	___368_phi	%read{44,148} %write{35,148} %derivs
local	float	___368_r	%read{45,148} %write{33,148} %derivs
local	float	___368_a	%read{29,148} %write{26,148} %derivs
local	float	___368_b	%read{30,148} %write{28,148} %derivs
local	float	___368_x	%read{48,148} %write{45,148} %derivs
local	float	___368_y	%read{50,148} %write{47,148} %derivs
local	float	___368_cos_theta	%read{72,148} %write{53,148} %derivs
local	vector	___368_w	%read{55,148} %write{54,148} %derivs
local	vector	___368_u	%read{67,148} %write{62,148} %derivs
local	vector	___368_v	%read{70,148} %write{68,148} %derivs
local	vector	___368_out	%read{74,148} %write{73,148} %derivs
local	float	occlusion	%read{153,155} %write{0,152}
local	point	___372_rand	%read{20,21} %write{18,19} %derivs
local	vector	___372_R	%read{76,76} %write{74,74} %derivs
local	int	___374_hits	%read{84,149} %write{80,148}
local	int	___374_occ_samples	%read{84,151} %write{81,81}
local	int	___375_i	%read{84,148} %write{83,148} %derivs
local	point	___376_rand	%read{84,148} %write{84,148} %derivs
local	vector	___376_R	%read{84,148} %write{84,148} %derivs
const	int	$const1	0		%read{0,127} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
const	string	$const2	"diffuse"		%read{1,1} %write{2147483647,-1}
temp	int	$tmp2	%read{3,7} %write{2,6}
temp	int	$tmp3	%read{5,5} %write{4,4}
const	string	$const3	"glossy"		%read{4,4} %write{2147483647,-1}
temp	int	$tmp4	%read{6,6} %write{5,5}
temp	int	$tmp5	%read{8,12} %write{7,11}
temp	int	$tmp6	%read{10,10} %write{9,9}
const	string	$const4	"light"		%read{9,9} %write{2147483647,-1}
temp	int	$tmp7	%read{11,11} %write{10,10}
temp	int	$tmp8	%read{13,17} %write{12,16}
temp	int	$tmp9	%read{15,15} %write{14,14}
const	string	$const5	"shadow"		%read{14,14} %write{2147483647,-1}
temp	int	$tmp10	%read{16,16} %write{15,15}
const	point	$const6	0 0 0		%read{18,85} %write{2147483647,-1}
temp	int	$tmp11	%read{2147483647,-1} %write{19,19}
const	string	$const7	"random2d"		%read{19,86} %write{2147483647,-1}
temp	float	$tmp12	%read{25,25} %write{20,20} %derivs
const	int	$const8	1		%read{21,148} %write{2147483647,-1}
temp	float	$tmp13	%read{27,27} %write{21,21} %derivs
const	string	$const9	"sample_cosine_hemisphere"		%read{22,89} %write{2147483647,-1}
const	float	$const10	3.1415927		%read{23,91} %write{2147483647,-1}
const	float	$const12	4		%read{23,90} %write{2147483647,-1}
const	int	$const13	2		%read{59,130} %write{2147483647,-1}
const	float	$const14	2		%read{24,94} %write{2147483647,-1}
temp	float	$tmp14	%read{26,26} %write{25,25} %derivs
const	float	$const15	1		%read{26,153} %write{2147483647,-1}
temp	float	$tmp15	%read{28,28} %write{27,27} %derivs
temp	float	$tmp16	%read{31,31} %write{29,29}
temp	float	$tmp17	%read{31,31} %write{30,30}
temp	int	$tmp18	%read{32,32} %write{31,31}
temp	float	$tmp19	%read{35,35} %write{34,34} %derivs
temp	int	$tmp20	%read{37,37} %write{36,36}
temp	float	$tmp21	%read{40,40} %write{39,39} %derivs
temp	float	$tmp22	%read{41,41} %write{40,40} %derivs
const	float	$const16	0		%read{42,133} %write{2147483647,-1}
temp	float	$tmp23	%read{45,45} %write{44,44} %derivs
temp	float	$tmp24	%read{47,47} %write{46,46} %derivs
temp	float	$tmp25	%read{53,53} %write{52,52} %derivs
temp	float	$tmp26	%read{49,49} %write{48,48} %derivs
temp	float	$tmp27	%read{51,51} %write{49,49} %derivs
temp	float	$tmp28	%read{51,51} %write{50,50} %derivs
temp	float	$tmp29	%read{52,52} %write{51,51} %derivs
temp	float	$tmp30	%read{57,57} %write{56,56}
temp	float	$tmp31	%read{56,56} %write{55,55}
const	float	$const17	0.0099999998		%read{57,143} %write{2147483647,-1}
temp	int	$tmp32	%read{58,58} %write{57,57}
temp	float	$tmp33	%read{62,62} %write{59,59} %derivs
temp	float	$tmp34	%read{61,61} %write{60,60} %derivs
temp	float	$tmp35	%read{62,62} %write{61,61} %derivs
temp	float	$tmp36	%read{64,64} %write{63,63} %derivs
temp	float	$tmp37	%read{66,66} %write{64,64} %derivs
temp	float	$tmp38	%read{66,66} %write{65,65} %derivs
temp	vector	$tmp39	%read{71,71} %write{69,69} %derivs
temp	vector	$tmp40	%read{71,71} %write{70,70} %derivs
temp	vector	$tmp41	%read{73,73} %write{71,71} %derivs
temp	vector	$tmp42	%read{73,73} %write{72,72} %derivs
temp	int	$tmp43	%read{77,77} %write{76,76}
const	string	$const18	"mindist"		%read{76,143} %write{2147483647,-1}
const	string	$const19	"maxdist"		%read{76,143} %write{2147483647,-1}
temp	int	$tmp44	%read{78,78} %write{77,77}
temp	int	$tmp45	%read{82,148} %write{83,148}
temp	int	$tmp46	%read{2147483647,-1} %write{84,148}
temp	float	$tmp47	%read{84,148} %write{84,148} %derivs
temp	float	$tmp48	%read{84,148} %write{84,148} %derivs
temp	float	$tmp49	%read{84,148} %write{84,148} %derivs
temp	float	$tmp50	%read{84,148} %write{84,148} %derivs
temp	float	$tmp51	%read{84,148} %write{84,148}
temp	float	$tmp52	%read{84,148} %write{84,148}
temp	int	$tmp53	%read{84,148} %write{84,148}
temp	float	$tmp54	%read{84,148} %write{84,148} %derivs
temp	int	$tmp55	%read{84,148} %write{84,148}
temp	float	$tmp56	%read{84,148} %write{84,148} %derivs
temp	float	$tmp57	%read{84,148} %write{84,148} %derivs
temp	float	$tmp58	%read{84,148} %write{84,148} %derivs
temp	float	$tmp59	%read{84,148} %write{84,148} %derivs
temp	float	$tmp60	%read{84,148} %write{84,148} %derivs
temp	float	$tmp61	%read{84,148} %write{84,148} %derivs
temp	float	$tmp62	%read{84,148} %write{84,148} %derivs
temp	float	$tmp63	%read{84,148} %write{84,148} %derivs
temp	float	$tmp64	%read{84,148} %write{84,148} %derivs
temp	float	$tmp65	%read{84,148} %write{84,148}
temp	float	$tmp66	%read{84,148} %write{84,148}
temp	int	$tmp67	%read{84,148} %write{84,148}
temp	float	$tmp68	%read{84,148} %write{84,148} %derivs
temp	float	$tmp69	%read{84,148} %write{84,148} %derivs
temp	float	$tmp70	%read{84,148} %write{84,148} %derivs
temp	float	$tmp71	%read{84,148} %write{84,148} %derivs
temp	float	$tmp72	%read{84,148} %write{84,148} %derivs
temp	float	$tmp73	%read{84,148} %write{84,148} %derivs
temp	vector	$tmp74	%read{84,148} %write{84,148} %derivs
temp	vector	$tmp75	%read{84,148} %write{84,148} %derivs
temp	vector	$tmp76	%read{84,148} %write{84,148} %derivs
temp	vector	$tmp77	%read{84,148} %write{84,148} %derivs
temp	int	$tmp78	%read{84,148} %write{84,148}
temp	int	$tmp79	%read{2147483647,-1} %write{84,148}
temp	int	$tmp80	%read{2147483647,-1} %write{84,148}
temp	int	$tmp81	%read{150,150} %write{149,149}
temp	float	$tmp82	%read{152,152} %write{150,150}
temp	float	$tmp83	%read{152,152} %write{151,151}
temp	float	$tmp84	%read{154,154} %write{153,153}
temp	color	$tmp85	%read{156,156} %write{154,154}
temp	color	$tmp86	%read{156,156} %write{155,155}
code ___main___
	assign		occlusion $const1 	%filename{"E:/github/elaramax/Shaders/max_vray_dirt.osl"} %line{61} %argrw{"wr"}
	raytype		$tmp1 $const2 	%line{63} %argrw{"wr"}
	neq		$tmp2 $tmp1 $const1 	%argrw{"wrr"}
	if		$tmp2 4 7 	%line{64} %argrw{"r"}
	raytype		$tmp3 $const3 	%argrw{"wr"}
	neq		$tmp4 $tmp3 $const1 	%argrw{"wrr"}
	assign		$tmp2 $tmp4 	%argrw{"wr"}
	neq		$tmp5 $tmp2 $const1 	%argrw{"wrr"}
	if		$tmp5 9 12 	%line{65} %argrw{"r"}
	raytype		$tmp6 $const4 	%argrw{"wr"}
	neq		$tmp7 $tmp6 $const1 	%argrw{"wrr"}
	assign		$tmp5 $tmp7 	%argrw{"wr"}
	neq		$tmp8 $tmp5 $const1 	%argrw{"wrr"}
	if		$tmp8 14 17 	%line{66} %argrw{"r"}
	raytype		$tmp9 $const5 	%argrw{"wr"}
	neq		$tmp10 $tmp9 $const1 	%argrw{"wrr"}
	assign		$tmp8 $tmp10 	%argrw{"wr"}
	if		$tmp8 80 153 	%line{63} %argrw{"r"}
	assign		___372_rand $const6 	%line{68} %argrw{"wr"}
	getattribute	$tmp11 $const7 $const1 ___372_rand 	%line{69} %argrw{"wrrw"}
	compref		$tmp12 ___372_rand $const1 	%line{70} %argrw{"wrr"}
	compref		$tmp13 ___372_rand $const8 	%argrw{"wrr"}
	functioncall	$const9 76 	%argrw{"r"}
	div		___368_PI_OVER_4 $const10 $const12 	%line{21} %argrw{"wrr"}
	div		___368_PI_OVER_2 $const10 $const14 	%line{22} %argrw{"wrr"}
	mul		$tmp14 $const14 $tmp12 	%line{24} %argrw{"wrr"}
	sub		___368_a $tmp14 $const15 	%argrw{"wrr"}
	mul		$tmp15 $const14 $tmp13 	%line{25} %argrw{"wrr"}
	sub		___368_b $tmp15 $const15 	%argrw{"wrr"}
	mul		$tmp16 ___368_a ___368_a 	%line{26} %argrw{"wrr"}
	mul		$tmp17 ___368_b ___368_b 	%argrw{"wrr"}
	gt		$tmp18 $tmp16 $tmp17 	%argrw{"wrr"}
	if		$tmp18 36 44 	%argrw{"r"}
	assign		___368_r ___368_a 	%line{27} %argrw{"wr"}
	div		$tmp19 ___368_b ___368_a 	%line{28} %argrw{"wrr"}
	mul		___368_phi ___368_PI_OVER_4 $tmp19 	%argrw{"wrr"}
	neq		$tmp20 ___368_b $const1 	%line{30} %argrw{"wrr"}
	if		$tmp20 42 44 	%argrw{"r"}
	assign		___368_r ___368_b 	%line{31} %argrw{"wr"}
	div		$tmp21 ___368_a ___368_b 	%line{32} %argrw{"wrr"}
	mul		$tmp22 ___368_PI_OVER_4 $tmp21 	%argrw{"wrr"}
	sub		___368_phi ___368_PI_OVER_2 $tmp22 	%argrw{"wrr"}
	assign		___368_r $const16 	%line{35} %argrw{"wr"}
	assign		___368_phi $const16 	%line{36} %argrw{"wr"}
	sin		$tmp23 ___368_phi 	%line{38} %argrw{"wr"}
	mul		___368_x ___368_r $tmp23 	%argrw{"wrr"}
	cos		$tmp24 ___368_phi 	%line{39} %argrw{"wr"}
	mul		___368_y ___368_r $tmp24 	%argrw{"wrr"}
	mul		$tmp26 ___368_x ___368_x 	%line{40} %argrw{"wrr"}
	sub		$tmp27 $const15 $tmp26 	%argrw{"wrr"}
	mul		$tmp28 ___368_y ___368_y 	%argrw{"wrr"}
	sub		$tmp29 $tmp27 $tmp28 	%argrw{"wrr"}
	max		$tmp25 $tmp29 $const16 	%argrw{"wrr"}
	sqrt		___368_cos_theta $tmp25 	%argrw{"wr"}
	assign		___368_w N 	%line{41} %argrw{"wr"}
	compref		$tmp31 ___368_w $const1 	%line{42} %argrw{"wrr"}
	abs		$tmp30 $tmp31 	%argrw{"wr"}
	gt		$tmp32 $tmp30 $const17 	%argrw{"wrr"}
	if		$tmp32 63 67 	%argrw{"r"}
	compref		$tmp33 ___368_w $const13 	%argrw{"wrr"}
	compref		$tmp34 ___368_w $const1 	%argrw{"wrr"}
	neg		$tmp35 $tmp34 	%argrw{"wr"}
	vector		___368_u $tmp33 $const16 $tmp35 	%argrw{"wrrr"}
	compref		$tmp36 ___368_w $const13 	%argrw{"wrr"}
	neg		$tmp37 $tmp36 	%argrw{"wr"}
	compref		$tmp38 ___368_w $const8 	%argrw{"wrr"}
	vector		___368_u $const16 $tmp37 $tmp38 	%argrw{"wrrr"}
	normalize	___368_u ___368_u 	%line{43} %argrw{"wr"}
	cross		___368_v ___368_w ___368_u 	%line{44} %argrw{"wrr"}
	mul		$tmp39 ___368_x ___368_u 	%line{45} %argrw{"wrr"}
	mul		$tmp40 ___368_y ___368_v 	%argrw{"wrr"}
	add		$tmp41 $tmp39 $tmp40 	%argrw{"wrr"}
	mul		$tmp42 ___368_cos_theta ___368_w 	%argrw{"wrr"}
	add		___368_out $tmp41 $tmp42 	%argrw{"wrr"}
	normalize	___372_R ___368_out 	%line{46} %argrw{"wr"}
	return
	trace		$tmp43 P ___372_R $const18 $const17 $const19 tex_radius 	%line{72} %argrw{"wrrrrrr"} %argderivs{1,2}
	eq		$tmp44 $tmp43 $const1 	%argrw{"wrr"}
	if		$tmp44 80 80 	%argrw{"r"}
	assign		occlusion $const8 	%line{74} %argrw{"wr"}
	assign		___374_hits $const1 	%line{79} %argrw{"wr"}
	assign		___374_occ_samples tex_subdivs 	%line{80} %argrw{"wr"}
	for		$tmp45 84 85 147 149 	%line{82} %argrw{"r"}
	assign		___375_i $const1 	%argrw{"wr"}
	lt		$tmp45 ___375_i ___374_occ_samples 	%argrw{"wrr"}
	assign		___376_rand $const6 	%line{84} %argrw{"wr"}
	getattribute	$tmp46 $const7 ___375_i ___376_rand 	%line{85} %argrw{"wrrw"}
	compref		$tmp47 ___376_rand $const1 	%line{86} %argrw{"wrr"}
	compref		$tmp48 ___376_rand $const8 	%argrw{"wrr"}
	functioncall	$const9 143 	%argrw{"r"}
	div		___368_PI_OVER_4 $const10 $const12 	%line{21} %argrw{"wrr"}
	div		___368_PI_OVER_2 $const10 $const14 	%line{22} %argrw{"wrr"}
	mul		$tmp49 $const14 $tmp47 	%line{24} %argrw{"wrr"}
	sub		___368_a $tmp49 $const15 	%argrw{"wrr"}
	mul		$tmp50 $const14 $tmp48 	%line{25} %argrw{"wrr"}
	sub		___368_b $tmp50 $const15 	%argrw{"wrr"}
	mul		$tmp51 ___368_a ___368_a 	%line{26} %argrw{"wrr"}
	mul		$tmp52 ___368_b ___368_b 	%argrw{"wrr"}
	gt		$tmp53 $tmp51 $tmp52 	%argrw{"wrr"}
	if		$tmp53 103 111 	%argrw{"r"}
	assign		___368_r ___368_a 	%line{27} %argrw{"wr"}
	div		$tmp54 ___368_b ___368_a 	%line{28} %argrw{"wrr"}
	mul		___368_phi ___368_PI_OVER_4 $tmp54 	%argrw{"wrr"}
	neq		$tmp55 ___368_b $const1 	%line{30} %argrw{"wrr"}
	if		$tmp55 109 111 	%argrw{"r"}
	assign		___368_r ___368_b 	%line{31} %argrw{"wr"}
	div		$tmp56 ___368_a ___368_b 	%line{32} %argrw{"wrr"}
	mul		$tmp57 ___368_PI_OVER_4 $tmp56 	%argrw{"wrr"}
	sub		___368_phi ___368_PI_OVER_2 $tmp57 	%argrw{"wrr"}
	assign		___368_r $const16 	%line{35} %argrw{"wr"}
	assign		___368_phi $const16 	%line{36} %argrw{"wr"}
	sin		$tmp58 ___368_phi 	%line{38} %argrw{"wr"}
	mul		___368_x ___368_r $tmp58 	%argrw{"wrr"}
	cos		$tmp59 ___368_phi 	%line{39} %argrw{"wr"}
	mul		___368_y ___368_r $tmp59 	%argrw{"wrr"}
	mul		$tmp61 ___368_x ___368_x 	%line{40} %argrw{"wrr"}
	sub		$tmp62 $const15 $tmp61 	%argrw{"wrr"}
	mul		$tmp63 ___368_y ___368_y 	%argrw{"wrr"}
	sub		$tmp64 $tmp62 $tmp63 	%argrw{"wrr"}
	max		$tmp60 $tmp64 $const16 	%argrw{"wrr"}
	sqrt		___368_cos_theta $tmp60 	%argrw{"wr"}
	assign		___368_w N 	%line{41} %argrw{"wr"}
	compref		$tmp66 ___368_w $const1 	%line{42} %argrw{"wrr"}
	abs		$tmp65 $tmp66 	%argrw{"wr"}
	gt		$tmp67 $tmp65 $const17 	%argrw{"wrr"}
	if		$tmp67 130 134 	%argrw{"r"}
	compref		$tmp68 ___368_w $const13 	%argrw{"wrr"}
	compref		$tmp69 ___368_w $const1 	%argrw{"wrr"}
	neg		$tmp70 $tmp69 	%argrw{"wr"}
	vector		___368_u $tmp68 $const16 $tmp70 	%argrw{"wrrr"}
	compref		$tmp71 ___368_w $const13 	%argrw{"wrr"}
	neg		$tmp72 $tmp71 	%argrw{"wr"}
	compref		$tmp73 ___368_w $const8 	%argrw{"wrr"}
	vector		___368_u $const16 $tmp72 $tmp73 	%argrw{"wrrr"}
	normalize	___368_u ___368_u 	%line{43} %argrw{"wr"}
	cross		___368_v ___368_w ___368_u 	%line{44} %argrw{"wrr"}
	mul		$tmp74 ___368_x ___368_u 	%line{45} %argrw{"wrr"}
	mul		$tmp75 ___368_y ___368_v 	%argrw{"wrr"}
	add		$tmp76 $tmp74 $tmp75 	%argrw{"wrr"}
	mul		$tmp77 ___368_cos_theta ___368_w 	%argrw{"wrr"}
	add		___368_out $tmp76 $tmp77 	%argrw{"wrr"}
	normalize	___376_R ___368_out 	%line{46} %argrw{"wr"}
	return
	trace		$tmp78 P ___376_R $const18 $const17 $const19 tex_radius 	%line{88} %argrw{"wrrrrrr"} %argderivs{1,2}
	if		$tmp78 147 147 	%argrw{"r"}
	assign		$tmp79 ___374_hits 	%line{90} %argrw{"wr"}
	add		___374_hits ___374_hits $const8 	%argrw{"wrr"}
	assign		$tmp80 ___375_i 	%line{82} %argrw{"wr"}
	add		___375_i ___375_i $const8 	%argrw{"wrr"}
	sub		$tmp81 ___374_occ_samples ___374_hits 	%line{94} %argrw{"wrr"}
	assign		$tmp82 $tmp81 	%argrw{"wr"}
	assign		$tmp83 ___374_occ_samples 	%argrw{"wr"}
	div		occlusion $tmp82 $tmp83 	%argrw{"wrr"}
	sub		$tmp84 $const15 occlusion 	%line{97} %argrw{"wrr"}
	mul		$tmp85 tex_occluded_color $tmp84 	%argrw{"wrr"}
	mul		$tmp86 tex_unoccluded_color occlusion 	%argrw{"wrr"}
	add		result $tmp85 $tmp86 	%argrw{"wrr"}
	end
