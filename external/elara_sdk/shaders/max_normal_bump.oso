OpenShadingLanguage 1.00
# Compiled by oslc 1.7.2
# options: 
shader max_normal_bump
param	float	tex_mult_spin	1		%read{183,183} %write{2147483647,-1}
param	float	tex_bump_spin	1		%read{9,9} %write{2147483647,-1}
param	float	tex_normal_map_alpha	1		%read{1,1} %write{2147483647,-1}
param	color	tex_normal_map	0.5 0.5 1		%read{0,34} %write{2147483647,-1}
param	float	tex_bump_map_alpha	1		%read{2147483647,-1} %write{2147483647,-1}
param	color	tex_bump_map	0 0 0		%read{2147483647,-1} %write{2147483647,-1}
param	vector	tex_bump_map_bump	0 0 0		%read{9,9} %write{2147483647,-1}
param	int	tex_normal_map_isnull	0		%read{30,30} %write{2147483647,-1}
param	int	tex_bump_map_isnull	0		%read{5,5} %write{2147483647,-1}
param	int	tex_map1on	1		%read{27,27} %write{2147483647,-1}
param	int	tex_map2on	1		%read{2,2} %write{2147483647,-1}
param	int	tex_method	0		%read{129,178} %write{2147483647,-1}
param	int	tex_flipred	0		%read{10,96} %write{2147483647,-1}
param	int	tex_flipgreen	0		%read{15,101} %write{2147483647,-1}
param	int	tex_swap_rg	0		%read{20,106} %write{2147483647,-1}
oparam	color	result	0 0 0		%read{2147483647,-1} %write{0,0}
oparam	float	result_alpha	1		%read{2147483647,-1} %write{1,1}
oparam	vector	result_bump	0 0 0		%read{12,184} %write{9,184}
global	normal	N	%read{125,125} %write{2147483647,-1}
global	vector	dPdu	%read{134,134} %write{2147483647,-1}
global	vector	dPdv	%read{135,135} %write{2147483647,-1}
local	float	___371_t	%read{2147483647,-1} %write{22,22}
local	color	___372_s	%read{48,121} %write{34,112}
local	float	___372_texture_gamma	%read{37,37} %write{35,36}
local	float	___375_t	%read{2147483647,-1} %write{108,108}
local	vector	___372_p	%read{131,181} %write{116,180}
local	vector	___372_frontNormal	%read{128,181} %write{125,128}
local	vector	___377_tangent	%read{137,161} %write{134,134}
local	vector	___377_binormal	%read{140,164} %write{135,135}
local	vector	___377_tempNormal	%read{172,172} %write{147,171}
local	vector	___372_perturb	%read{182,182} %write{181,181}
const	int	$const1	1		%read{2,178} %write{2147483647,-1}
temp	int	$tmp1	%read{3,3} %write{2,2}
temp	int	$tmp2	%read{4,8} %write{3,7}
const	int	$const2	0		%read{3,160} %write{2147483647,-1}
temp	int	$tmp3	%read{6,6} %write{5,5}
temp	int	$tmp4	%read{7,7} %write{6,6}
temp	int	$tmp5	%read{11,11} %write{10,10}
const	float	$const3	1		%read{13,104} %write{2147483647,-1}
temp	float	$tmp6	%read{13,13} %write{12,12}
temp	float	$tmp7	%read{14,14} %write{13,13}
temp	int	$tmp8	%read{16,16} %write{15,15}
temp	float	$tmp9	%read{18,18} %write{17,17}
temp	float	$tmp10	%read{19,19} %write{18,18}
temp	int	$tmp11	%read{21,21} %write{20,20}
temp	float	$tmp12	%read{24,24} %write{23,23}
temp	float	$tmp13	%read{26,26} %write{25,25}
temp	int	$tmp14	%read{28,28} %write{27,27}
temp	int	$tmp15	%read{29,33} %write{28,32}
temp	int	$tmp16	%read{31,31} %write{30,30}
temp	int	$tmp17	%read{32,32} %write{31,31}
temp	int	$tmp18	%read{2147483647,-1} %write{36,36}
const	string	$const4	"options"		%read{36,36} %write{2147483647,-1}
const	string	$const5	"texture_gamma"		%read{36,36} %write{2147483647,-1}
temp	float	$tmp19	%read{39,94} %write{37,37}
const	string	$const6	"ei_degamma"		%read{38,38} %write{2147483647,-1}
const	float	$const7	0		%read{39,93} %write{2147483647,-1}
temp	int	$tmp20	%read{40,40} %write{39,39}
temp	int	$tmp21	%read{41,45} %write{40,44}
temp	int	$tmp22	%read{43,43} %write{42,42}
temp	int	$tmp23	%read{44,44} %write{43,43}
const	float	$const8	2.2		%read{46,46} %write{2147483647,-1}
temp	int	$tmp24	%read{47,47} %write{46,46}
temp	float	$tmp25	%read{50,50} %write{49,49}
temp	float	$tmp26	%read{49,49} %write{48,48}
temp	float	$tmp27	%read{53,53} %write{52,52}
temp	float	$tmp28	%read{52,52} %write{51,51}
temp	float	$tmp29	%read{56,56} %write{55,55}
const	int	$const9	2		%read{54,173} %write{2147483647,-1}
temp	float	$tmp30	%read{55,55} %write{54,54}
temp	float	$tmp31	%read{59,59} %write{57,57}
temp	float	$tmp32	%read{59,59} %write{58,58}
temp	float	$tmp33	%read{64,64} %write{59,59}
const	float	$const10	0.56999999		%read{63,81} %write{2147483647,-1}
const	float	$const11	0.43000001		%read{62,80} %write{2147483647,-1}
temp	float	$tmp34	%read{62,62} %write{61,61}
temp	float	$tmp35	%read{61,61} %write{60,60}
temp	float	$tmp36	%read{63,63} %write{62,62}
temp	float	$tmp37	%read{64,64} %write{63,63}
temp	float	$tmp38	%read{65,65} %write{64,64}
temp	float	$tmp39	%read{68,68} %write{66,66}
temp	float	$tmp40	%read{68,68} %write{67,67}
temp	float	$tmp41	%read{73,73} %write{68,68}
temp	float	$tmp42	%read{71,71} %write{70,70}
temp	float	$tmp43	%read{70,70} %write{69,69}
temp	float	$tmp44	%read{72,72} %write{71,71}
temp	float	$tmp45	%read{73,73} %write{72,72}
temp	float	$tmp46	%read{74,74} %write{73,73}
temp	float	$tmp47	%read{77,77} %write{75,75}
temp	float	$tmp48	%read{77,77} %write{76,76}
temp	float	$tmp49	%read{82,82} %write{77,77}
temp	float	$tmp50	%read{80,80} %write{79,79}
temp	float	$tmp51	%read{79,79} %write{78,78}
temp	float	$tmp52	%read{81,81} %write{80,80}
temp	float	$tmp53	%read{82,82} %write{81,81}
temp	float	$tmp54	%read{83,83} %write{82,82}
temp	float	$tmp55	%read{87,87} %write{86,86}
temp	float	$tmp56	%read{86,86} %write{85,85}
temp	float	$tmp57	%read{85,85} %write{84,84}
temp	float	$tmp58	%read{91,91} %write{90,90}
temp	float	$tmp59	%read{90,90} %write{89,89}
temp	float	$tmp60	%read{89,89} %write{88,88}
temp	float	$tmp61	%read{95,95} %write{94,94}
temp	float	$tmp62	%read{94,94} %write{93,93}
temp	float	$tmp63	%read{93,93} %write{92,92}
temp	int	$tmp64	%read{97,97} %write{96,96}
temp	float	$tmp65	%read{99,99} %write{98,98}
temp	float	$tmp66	%read{100,100} %write{99,99}
temp	int	$tmp67	%read{102,102} %write{101,101}
temp	float	$tmp68	%read{104,104} %write{103,103}
temp	float	$tmp69	%read{105,105} %write{104,104}
temp	int	$tmp70	%read{107,107} %write{106,106}
temp	float	$tmp71	%read{110,110} %write{109,109}
temp	float	$tmp72	%read{112,112} %write{111,111}
const	float	$const12	2		%read{115,123} %write{2147483647,-1}
temp	float	$tmp73	%read{114,114} %write{113,113}
const	float	$const13	0.5		%read{114,122} %write{2147483647,-1}
temp	float	$tmp74	%read{115,115} %write{114,114}
temp	float	$tmp75	%read{116,116} %write{115,115}
temp	float	$tmp76	%read{118,118} %write{117,117}
temp	float	$tmp77	%read{119,119} %write{118,118}
temp	float	$tmp78	%read{120,120} %write{119,119}
temp	float	$tmp79	%read{122,122} %write{121,121}
temp	float	$tmp80	%read{123,123} %write{122,122}
temp	float	$tmp81	%read{124,124} %write{123,123}
temp	int	$tmp82	%read{127,127} %write{126,126}
temp	int	$tmp83	%read{130,130} %write{129,129}
temp	float	$tmp84	%read{132,132} %write{131,131}
temp	float	$tmp85	%read{133,133} %write{132,132}
temp	float	$tmp86	%read{138,138} %write{136,136}
temp	float	$tmp87	%read{138,138} %write{137,137}
temp	float	$tmp88	%read{142,142} %write{138,138}
temp	float	$tmp89	%read{141,141} %write{139,139}
temp	float	$tmp90	%read{141,141} %write{140,140}
temp	float	$tmp91	%read{142,142} %write{141,141}
temp	float	$tmp92	%read{146,146} %write{142,142}
temp	float	$tmp93	%read{145,145} %write{143,143}
temp	float	$tmp94	%read{145,145} %write{144,144}
temp	float	$tmp95	%read{146,146} %write{145,145}
temp	float	$tmp96	%read{147,147} %write{146,146}
temp	float	$tmp97	%read{150,150} %write{148,148}
temp	float	$tmp98	%read{150,150} %write{149,149}
temp	float	$tmp99	%read{154,154} %write{150,150}
temp	float	$tmp100	%read{153,153} %write{151,151}
temp	float	$tmp101	%read{153,153} %write{152,152}
temp	float	$tmp102	%read{154,154} %write{153,153}
temp	float	$tmp103	%read{158,158} %write{154,154}
temp	float	$tmp104	%read{157,157} %write{155,155}
temp	float	$tmp105	%read{157,157} %write{156,156}
temp	float	$tmp106	%read{158,158} %write{157,157}
temp	float	$tmp107	%read{159,159} %write{158,158}
temp	float	$tmp108	%read{162,162} %write{160,160}
temp	float	$tmp109	%read{162,162} %write{161,161}
temp	float	$tmp110	%read{166,166} %write{162,162}
temp	float	$tmp111	%read{165,165} %write{163,163}
temp	float	$tmp112	%read{165,165} %write{164,164}
temp	float	$tmp113	%read{166,166} %write{165,165}
temp	float	$tmp114	%read{170,170} %write{166,166}
temp	float	$tmp115	%read{169,169} %write{167,167}
temp	float	$tmp116	%read{169,169} %write{168,168}
temp	float	$tmp117	%read{170,170} %write{169,169}
temp	float	$tmp118	%read{171,171} %write{170,170}
temp	int	$tmp119	%read{174,174} %write{173,173}
const	string	$const14	"camera"		%read{175,175} %write{2147483647,-1}
const	string	$const15	"world"		%read{175,180} %write{2147483647,-1}
const	int	$const16	3		%read{176,176} %write{2147483647,-1}
temp	int	$tmp120	%read{177,177} %write{176,176}
temp	int	$tmp121	%read{179,179} %write{178,178}
const	string	$const17	"object"		%read{180,180} %write{2147483647,-1}
temp	vector	$tmp122	%read{183,183} %write{182,182}
const	float	$const19	100		%read{182,182} %write{2147483647,-1}
temp	vector	$tmp123	%read{184,184} %write{183,183}
code ___main___
	assign		result tex_normal_map 	%filename{"E:/github/elaramax/Shaders/max_normal_bump.osl"} %line{46} %argrw{"wr"}
	assign		result_alpha tex_normal_map_alpha 	%line{47} %argrw{"wr"}
	eq		$tmp1 tex_map2on $const1 	%line{48} %argrw{"wrr"}
	neq		$tmp2 $tmp1 $const2 	%argrw{"wrr"}
	if		$tmp2 8 8 	%argrw{"r"}
	eq		$tmp3 tex_bump_map_isnull $const2 	%argrw{"wrr"}
	neq		$tmp4 $tmp3 $const2 	%argrw{"wrr"}
	assign		$tmp2 $tmp4 	%argrw{"wr"}
	if		$tmp2 27 27 	%argrw{"r"}
	mul		result_bump tex_bump_map_bump tex_bump_spin 	%line{50} %argrw{"wrr"}
	eq		$tmp5 tex_flipred $const1 	%line{51} %argrw{"wrr"}
	if		$tmp5 15 15 	%argrw{"r"}
	compref		$tmp6 result_bump $const2 	%line{53} %argrw{"wrr"}
	sub		$tmp7 $const3 $tmp6 	%argrw{"wrr"}
	compassign	result_bump $const2 $tmp7 	%argrw{"wrr"}
	eq		$tmp8 tex_flipgreen $const1 	%line{55} %argrw{"wrr"}
	if		$tmp8 20 20 	%argrw{"r"}
	compref		$tmp9 result_bump $const1 	%line{57} %argrw{"wrr"}
	sub		$tmp10 $const3 $tmp9 	%argrw{"wrr"}
	compassign	result_bump $const1 $tmp10 	%argrw{"wrr"}
	eq		$tmp11 tex_swap_rg $const1 	%line{59} %argrw{"wrr"}
	if		$tmp11 27 27 	%argrw{"r"}
	compref		___371_t result_bump $const2 	%line{61} %argrw{"wrr"}
	compref		$tmp12 result_bump $const1 	%line{62} %argrw{"wrr"}
	compassign	result_bump $const2 $tmp12 	%argrw{"wrr"}
	compref		$tmp13 result_bump $const2 	%line{63} %argrw{"wrr"}
	compassign	result_bump $const1 $tmp13 	%argrw{"wrr"}
	eq		$tmp14 tex_map1on $const1 	%line{66} %argrw{"wrr"}
	neq		$tmp15 $tmp14 $const2 	%argrw{"wrr"}
	if		$tmp15 33 33 	%argrw{"r"}
	eq		$tmp16 tex_normal_map_isnull $const2 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const2 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	if		$tmp15 185 185 	%argrw{"r"}
	assign		___372_s tex_normal_map 	%line{68} %argrw{"wr"}
	assign		___372_texture_gamma $const3 	%line{70} %argrw{"wr"}
	getattribute	$tmp18 $const4 $const5 ___372_texture_gamma 	%line{71} %argrw{"wrrw"}
	div		$tmp19 $const3 ___372_texture_gamma 	%line{72} %argrw{"wrr"}
	functioncall	$const6 96 	%argrw{"r"}
	gt		$tmp20 $tmp19 $const7 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{412} %argrw{"wrr"}
	neq		$tmp21 $tmp20 $const2 	%argrw{"wrr"}
	if		$tmp21 45 45 	%argrw{"r"}
	neq		$tmp22 $tmp19 $const3 	%argrw{"wrr"}
	neq		$tmp23 $tmp22 $const2 	%argrw{"wrr"}
	assign		$tmp21 $tmp23 	%argrw{"wr"}
	if		$tmp21 96 96 	%argrw{"r"}
	eq		$tmp24 $tmp19 $const8 	%line{414} %argrw{"wrr"}
	if		$tmp24 84 96 	%argrw{"r"}
	compref		$tmp26 ___372_s $const2 	%line{416} %argrw{"wrr"}
	max		$tmp25 $tmp26 $const7 	%argrw{"wrr"}
	compassign	___372_s $const2 $tmp25 	%argrw{"wrr"}
	compref		$tmp28 ___372_s $const1 	%line{417} %argrw{"wrr"}
	max		$tmp27 $tmp28 $const7 	%argrw{"wrr"}
	compassign	___372_s $const1 $tmp27 	%argrw{"wrr"}
	compref		$tmp30 ___372_s $const9 	%line{418} %argrw{"wrr"}
	max		$tmp29 $tmp30 $const7 	%argrw{"wrr"}
	compassign	___372_s $const9 $tmp29 	%argrw{"wrr"}
	compref		$tmp31 ___372_s $const2 	%line{419} %argrw{"wrr"}
	compref		$tmp32 ___372_s $const2 	%argrw{"wrr"}
	mul		$tmp33 $tmp31 $tmp32 	%argrw{"wrr"}
	compref		$tmp35 ___372_s $const2 	%argrw{"wrr"}
	sqrt		$tmp34 $tmp35 	%argrw{"wr"}
	mul		$tmp36 $const11 $tmp34 	%argrw{"wrr"}
	add		$tmp37 $const10 $tmp36 	%argrw{"wrr"}
	mul		$tmp38 $tmp33 $tmp37 	%argrw{"wrr"}
	compassign	___372_s $const2 $tmp38 	%argrw{"wrr"}
	compref		$tmp39 ___372_s $const1 	%line{420} %argrw{"wrr"}
	compref		$tmp40 ___372_s $const1 	%argrw{"wrr"}
	mul		$tmp41 $tmp39 $tmp40 	%argrw{"wrr"}
	compref		$tmp43 ___372_s $const1 	%argrw{"wrr"}
	sqrt		$tmp42 $tmp43 	%argrw{"wr"}
	mul		$tmp44 $const11 $tmp42 	%argrw{"wrr"}
	add		$tmp45 $const10 $tmp44 	%argrw{"wrr"}
	mul		$tmp46 $tmp41 $tmp45 	%argrw{"wrr"}
	compassign	___372_s $const1 $tmp46 	%argrw{"wrr"}
	compref		$tmp47 ___372_s $const9 	%line{421} %argrw{"wrr"}
	compref		$tmp48 ___372_s $const9 	%argrw{"wrr"}
	mul		$tmp49 $tmp47 $tmp48 	%argrw{"wrr"}
	compref		$tmp51 ___372_s $const9 	%argrw{"wrr"}
	sqrt		$tmp50 $tmp51 	%argrw{"wr"}
	mul		$tmp52 $const11 $tmp50 	%argrw{"wrr"}
	add		$tmp53 $const10 $tmp52 	%argrw{"wrr"}
	mul		$tmp54 $tmp49 $tmp53 	%argrw{"wrr"}
	compassign	___372_s $const9 $tmp54 	%argrw{"wrr"}
	compref		$tmp57 ___372_s $const2 	%line{425} %argrw{"wrr"}
	max		$tmp56 $tmp57 $const7 	%argrw{"wrr"}
	pow		$tmp55 $tmp56 $tmp19 	%argrw{"wrr"}
	compassign	___372_s $const2 $tmp55 	%argrw{"wrr"}
	compref		$tmp60 ___372_s $const1 	%line{426} %argrw{"wrr"}
	max		$tmp59 $tmp60 $const7 	%argrw{"wrr"}
	pow		$tmp58 $tmp59 $tmp19 	%argrw{"wrr"}
	compassign	___372_s $const1 $tmp58 	%argrw{"wrr"}
	compref		$tmp63 ___372_s $const9 	%line{427} %argrw{"wrr"}
	max		$tmp62 $tmp63 $const7 	%argrw{"wrr"}
	pow		$tmp61 $tmp62 $tmp19 	%argrw{"wrr"}
	compassign	___372_s $const9 $tmp61 	%argrw{"wrr"}
	eq		$tmp64 tex_flipred $const1 	%filename{"E:/github/elaramax/Shaders/max_normal_bump.osl"} %line{74} %argrw{"wrr"}
	if		$tmp64 101 101 	%argrw{"r"}
	compref		$tmp65 ___372_s $const2 	%line{76} %argrw{"wrr"}
	sub		$tmp66 $const3 $tmp65 	%argrw{"wrr"}
	compassign	___372_s $const2 $tmp66 	%argrw{"wrr"}
	eq		$tmp67 tex_flipgreen $const1 	%line{78} %argrw{"wrr"}
	if		$tmp67 106 106 	%argrw{"r"}
	compref		$tmp68 ___372_s $const1 	%line{80} %argrw{"wrr"}
	sub		$tmp69 $const3 $tmp68 	%argrw{"wrr"}
	compassign	___372_s $const1 $tmp69 	%argrw{"wrr"}
	eq		$tmp70 tex_swap_rg $const1 	%line{82} %argrw{"wrr"}
	if		$tmp70 113 113 	%argrw{"r"}
	compref		___375_t ___372_s $const2 	%line{84} %argrw{"wrr"}
	compref		$tmp71 ___372_s $const1 	%line{85} %argrw{"wrr"}
	compassign	___372_s $const2 $tmp71 	%argrw{"wrr"}
	compref		$tmp72 ___372_s $const2 	%line{86} %argrw{"wrr"}
	compassign	___372_s $const1 $tmp72 	%argrw{"wrr"}
	compref		$tmp73 ___372_s $const2 	%line{89} %argrw{"wrr"}
	sub		$tmp74 $tmp73 $const13 	%argrw{"wrr"}
	mul		$tmp75 $const12 $tmp74 	%argrw{"wrr"}
	compassign	___372_p $const2 $tmp75 	%argrw{"wrr"}
	compref		$tmp76 ___372_s $const1 	%line{90} %argrw{"wrr"}
	sub		$tmp77 $tmp76 $const13 	%argrw{"wrr"}
	mul		$tmp78 $const12 $tmp77 	%argrw{"wrr"}
	compassign	___372_p $const1 $tmp78 	%argrw{"wrr"}
	compref		$tmp79 ___372_s $const9 	%line{91} %argrw{"wrr"}
	sub		$tmp80 $tmp79 $const13 	%argrw{"wrr"}
	mul		$tmp81 $const12 $tmp80 	%argrw{"wrr"}
	compassign	___372_p $const9 $tmp81 	%argrw{"wrr"}
	assign		___372_frontNormal N 	%line{93} %argrw{"wr"}
	backfacing	$tmp82 	%line{94} %argrw{"w"}
	if		$tmp82 129 129 	%argrw{"r"}
	neg		___372_frontNormal ___372_frontNormal 	%line{96} %argrw{"wr"}
	eq		$tmp83 tex_method $const2 	%line{99} %argrw{"wrr"}
	if		$tmp83 173 181 	%argrw{"r"}
	compref		$tmp84 ___372_p $const1 	%line{101} %argrw{"wrr"}
	neg		$tmp85 $tmp84 	%argrw{"wr"}
	compassign	___372_p $const1 $tmp85 	%argrw{"wrr"}
	normalize	___377_tangent dPdu 	%line{102} %argrw{"wr"}
	normalize	___377_binormal dPdv 	%line{103} %argrw{"wr"}
	compref		$tmp86 ___372_p $const2 	%line{105} %argrw{"wrr"}
	compref		$tmp87 ___377_tangent $const2 	%argrw{"wrr"}
	mul		$tmp88 $tmp86 $tmp87 	%argrw{"wrr"}
	compref		$tmp89 ___372_p $const1 	%argrw{"wrr"}
	compref		$tmp90 ___377_binormal $const2 	%argrw{"wrr"}
	mul		$tmp91 $tmp89 $tmp90 	%argrw{"wrr"}
	add		$tmp92 $tmp88 $tmp91 	%argrw{"wrr"}
	compref		$tmp93 ___372_p $const9 	%argrw{"wrr"}
	compref		$tmp94 ___372_frontNormal $const2 	%argrw{"wrr"}
	mul		$tmp95 $tmp93 $tmp94 	%argrw{"wrr"}
	add		$tmp96 $tmp92 $tmp95 	%argrw{"wrr"}
	compassign	___377_tempNormal $const2 $tmp96 	%argrw{"wrr"}
	compref		$tmp97 ___372_p $const2 	%line{106} %argrw{"wrr"}
	compref		$tmp98 ___377_tangent $const1 	%argrw{"wrr"}
	mul		$tmp99 $tmp97 $tmp98 	%argrw{"wrr"}
	compref		$tmp100 ___372_p $const1 	%argrw{"wrr"}
	compref		$tmp101 ___377_binormal $const1 	%argrw{"wrr"}
	mul		$tmp102 $tmp100 $tmp101 	%argrw{"wrr"}
	add		$tmp103 $tmp99 $tmp102 	%argrw{"wrr"}
	compref		$tmp104 ___372_p $const9 	%argrw{"wrr"}
	compref		$tmp105 ___372_frontNormal $const1 	%argrw{"wrr"}
	mul		$tmp106 $tmp104 $tmp105 	%argrw{"wrr"}
	add		$tmp107 $tmp103 $tmp106 	%argrw{"wrr"}
	compassign	___377_tempNormal $const1 $tmp107 	%argrw{"wrr"}
	compref		$tmp108 ___372_p $const2 	%line{107} %argrw{"wrr"}
	compref		$tmp109 ___377_tangent $const9 	%argrw{"wrr"}
	mul		$tmp110 $tmp108 $tmp109 	%argrw{"wrr"}
	compref		$tmp111 ___372_p $const1 	%argrw{"wrr"}
	compref		$tmp112 ___377_binormal $const9 	%argrw{"wrr"}
	mul		$tmp113 $tmp111 $tmp112 	%argrw{"wrr"}
	add		$tmp114 $tmp110 $tmp113 	%argrw{"wrr"}
	compref		$tmp115 ___372_p $const9 	%argrw{"wrr"}
	compref		$tmp116 ___372_frontNormal $const9 	%argrw{"wrr"}
	mul		$tmp117 $tmp115 $tmp116 	%argrw{"wrr"}
	add		$tmp118 $tmp114 $tmp117 	%argrw{"wrr"}
	compassign	___377_tempNormal $const9 $tmp118 	%argrw{"wrr"}
	assign		___372_p ___377_tempNormal 	%line{108} %argrw{"wr"}
	eq		$tmp119 tex_method $const9 	%line{110} %argrw{"wrr"}
	if		$tmp119 176 181 	%argrw{"r"}
	transformv	___372_p $const14 $const15 ___372_p 	%line{112} %argrw{"wrrr"}
	eq		$tmp120 tex_method $const16 	%line{114} %argrw{"wrr"}
	if		$tmp120 178 181 	%argrw{"r"}
	eq		$tmp121 tex_method $const1 	%line{118} %argrw{"wrr"}
	if		$tmp121 181 181 	%argrw{"r"}
	transformv	___372_p $const17 $const15 ___372_p 	%line{120} %argrw{"wrrr"}
	sub		___372_perturb ___372_p ___372_frontNormal 	%line{123} %argrw{"wrr"}
	mul		$tmp122 $const19 ___372_perturb 	%line{124} %argrw{"wrr"}
	mul		$tmp123 $tmp122 tex_mult_spin 	%argrw{"wrr"}
	add		result_bump result_bump $tmp123 	%argrw{"wrr"}
	end
