OpenShadingLanguage 1.00
# Compiled by oslc 1.3.0
displacement maya_displacementShader
param	float	i_displacement	0 		 %read{11,11} %write{2147483647,-1} %derivs
param	float	i_scale	1 		 %read{18,71} %write{2147483647,-1} %derivs
param	color	i_vectorDisplacement	0 0 0 		 %read{8,22} %write{2147483647,-1} %derivs
param	float	i_vectorEncoding	0 		 %read{12,24} %write{2147483647,-1}
param	int	i_vectorSpace	1 		 %read{3,43} %write{2147483647,-1}
param	color	i_tangent	0 0 0 		 %read{54,56} %write{2147483647,-1} %derivs
oparam	closure color	result			 %read{75,75} %write{74,74}
global	point	P	 %read{0,0} %write{2147483647,-1} %derivs
global	normal	N	 %read{1,59} %write{2147483647,-1} %derivs
global	vector	dPdu	 %read{51,51} %write{2147483647,-1} %derivs
global	vector	dPdv	 %read{53,53} %write{2147483647,-1} %derivs
global	closure color	Ci	 %read{2147483647,-1} %write{75,75}
local	point	PP	 %read{19,74} %write{0,72} %derivs
local	vector	NN	 %read{74,74} %write{1,73}
local	string	space	 %read{2147483647,-1} %write{2,5}
local	float	___347_magnitude	 %read{14,17} %write{11,14} %derivs
local	vector	___350_vectorDisplacement	 %read{26,67} %write{23,26} %derivs
local	vector	___352_basisx	 %read{46,63} %write{29,58} %derivs
local	vector	___352_basisy	 %read{48,65} %write{30,59} %derivs
local	vector	___352_basisz	 %read{50,69} %write{31,61} %derivs
const	string	$const1	"world"		 %read{2,57} %write{2147483647,-1}
const	int	$const2	0		 %read{3,67} %write{2147483647,-1}
temp	int	$tmp1	 %read{4,4} %write{3,3}
const	string	$const3	"object"		 %read{5,42} %write{2147483647,-1}
temp	int	$tmp2	 %read{7,7} %write{6,6}
const	string	$const4	"displace"		 %read{6,6} %write{2147483647,-1}
temp	int	$tmp3	 %read{9,9} %write{8,8}
temp	int	$tmp4	 %read{10,10} %write{9,9}
const	int	$const5	1		 %read{12,64} %write{2147483647,-1}
temp	int	$tmp5	 %read{13,13} %write{12,12}
const	float	$const6	0.5		 %read{14,26} %write{2147483647,-1}
temp	int	$tmp6	 %read{16,16} %write{15,15}
temp	normal	$tmp7	 %read{18,18} %write{17,17} %derivs
temp	normal	$tmp8	 %read{19,19} %write{18,18} %derivs
temp	float	$tmp9	 %read{23,23} %write{20,20} %derivs
temp	float	$tmp10	 %read{23,23} %write{21,21} %derivs
const	int	$const7	2		 %read{22,62} %write{2147483647,-1}
temp	float	$tmp11	 %read{23,23} %write{22,22} %derivs
temp	int	$tmp12	 %read{25,25} %write{24,24}
temp	int	$tmp13	 %read{28,28} %write{27,27}
temp	int	$tmp14	 %read{34,34} %write{33,33}
temp	int	$tmp15	 %read{35,39} %write{34,38}
temp	int	$tmp16	 %read{37,37} %write{36,36}
temp	int	$tmp17	 %read{38,38} %write{37,37}
const	float	$const8	0		 %read{40,42} %write{2147483647,-1}
const	float	$const9	1		 %read{40,41} %write{2147483647,-1}
const	float	$const11	-1		 %read{42,42} %write{2147483647,-1}
temp	int	$tmp18	 %read{44,44} %write{43,43}
const	string	$const12	"transform"		 %read{45,49} %write{2147483647,-1}
const	string	$const13	"common"		 %read{46,50} %write{2147483647,-1}
temp	vector	$tmp19	 %read{58,58} %write{57,57} %derivs
temp	float	$tmp20	 %read{57,57} %write{54,54} %derivs
temp	float	$tmp21	 %read{57,57} %write{55,55} %derivs
temp	float	$tmp22	 %read{57,57} %write{56,56} %derivs
temp	vector	$tmp23	 %read{61,61} %write{60,60} %derivs
temp	float	$tmp24	 %read{63,63} %write{62,62} %derivs
temp	vector	$tmp25	 %read{66,66} %write{63,63} %derivs
temp	float	$tmp26	 %read{65,65} %write{64,64} %derivs
temp	vector	$tmp27	 %read{66,66} %write{65,65} %derivs
temp	vector	$tmp28	 %read{70,70} %write{66,66} %derivs
temp	float	$tmp29	 %read{68,68} %write{67,67} %derivs
temp	float	$tmp30	 %read{69,69} %write{68,68} %derivs
temp	vector	$tmp31	 %read{70,70} %write{69,69} %derivs
temp	vector	$tmp32	 %read{71,71} %write{70,70} %derivs
temp	vector	$tmp33	 %read{72,72} %write{71,71} %derivs
const	string	$const14	"displacement"		 %read{74,74} %write{2147483647,-1}
code ___main___
	assign		PP P 	%filename{"E:\\dev\\work\\mercury\\src\\shaders_er\\maya_displacementShader.osl"} %line{41} %argrw{"wr"}
	assign		NN N 	%line{42} %argrw{"wr"}
	assign		space $const1 	%line{44} %argrw{"wr"}
	neq		$tmp1 i_vectorSpace $const2 	%line{45} %argrw{"wrr"}
	if		$tmp1 6 6 	%argrw{"r"}
	assign		space $const3 	%line{47} %argrw{"wr"}
	raytype		$tmp2 $const4 	%line{50} %argrw{"wr"}
	if		$tmp2 74 74 	%argrw{"r"}
	isconnected	$tmp3 i_vectorDisplacement 	%line{52} %argrw{"wr"}
	eq		$tmp4 $tmp3 $const2 	%argrw{"wrr"}
	if		$tmp4 20 73 	%argrw{"r"}
	assign		___347_magnitude i_displacement 	%line{54} %argrw{"wr"}
	eq		$tmp5 i_vectorEncoding $const5 	%line{55} %argrw{"wrr"}
	if		$tmp5 15 15 	%argrw{"r"}
	sub		___347_magnitude ___347_magnitude $const6 	%line{57} %argrw{"wrr"}
	neq		$tmp6 ___347_magnitude $const2 	%line{59} %argrw{"wrr"}
	if		$tmp6 20 20 	%argrw{"r"}
	mul		$tmp7 ___347_magnitude N 	%line{61} %argrw{"wrr"}
	mul		$tmp8 $tmp7 i_scale 	%argrw{"wrr"}
	add		PP PP $tmp8 	%argrw{"wrr"}
	compref		$tmp9 i_vectorDisplacement $const2 	%line{66} %argrw{"wrr"}
	compref		$tmp10 i_vectorDisplacement $const5 	%argrw{"wrr"}
	compref		$tmp11 i_vectorDisplacement $const7 	%argrw{"wrr"}
	vector		___350_vectorDisplacement $tmp9 $tmp10 $tmp11 	%argrw{"wrrr"}
	eq		$tmp12 i_vectorEncoding $const5 	%line{67} %argrw{"wrr"}
	if		$tmp12 27 27 	%argrw{"r"}
	sub		___350_vectorDisplacement ___350_vectorDisplacement $const6 	%line{69} %argrw{"wrr"}
	neq		$tmp13 ___350_vectorDisplacement $const2 	%line{72} %argrw{"wrr"}
	if		$tmp13 73 73 	%argrw{"r"}
	assign		___352_basisx $const2 	%line{74} %argrw{"wr"}
	assign		___352_basisy $const2 	%line{75} %argrw{"wr"}
	assign		___352_basisz $const2 	%line{76} %argrw{"wr"}
	if		$const5 54 62 	%line{77} %argrw{"r"}
	eq		$tmp14 i_vectorSpace $const2 	%line{80} %argrw{"wrr"}
	neq		$tmp15 $tmp14 $const2 	%argrw{"wrr"}
	if		$tmp15 36 39 	%argrw{"r"}
	eq		$tmp16 i_vectorSpace $const5 	%argrw{"wrr"}
	neq		$tmp17 $tmp16 $const2 	%argrw{"wrr"}
	assign		$tmp15 $tmp17 	%argrw{"wr"}
	if		$tmp15 51 54 	%argrw{"r"}
	vector		___352_basisx $const3 $const8 $const8 $const9 	%line{82} %argrw{"wrrrr"}
	vector		___352_basisy $const3 $const8 $const9 $const8 	%line{83} %argrw{"wrrrr"}
	vector		___352_basisz $const3 $const11 $const8 $const8 	%line{84} %argrw{"wrrrr"}
	eq		$tmp18 i_vectorSpace $const2 	%line{85} %argrw{"wrr"}
	if		$tmp18 51 51 	%argrw{"r"}
	functioncall	$const12 47 	%line{88} %argrw{"r"}
	transformv	___352_basisx $const13 $const1 ___352_basisx 	%filename{"E:/osl\\current\\shaders\\stdosl.h"} %line{239} %argrw{"wrrr"}
	functioncall	$const12 49 	%filename{"E:\\dev\\work\\mercury\\src\\shaders_er\\maya_displacementShader.osl"} %line{89} %argrw{"r"}
	transformv	___352_basisy $const13 $const1 ___352_basisy 	%filename{"E:/osl\\current\\shaders\\stdosl.h"} %line{239} %argrw{"wrrr"}
	functioncall	$const12 51 	%filename{"E:\\dev\\work\\mercury\\src\\shaders_er\\maya_displacementShader.osl"} %line{90} %argrw{"r"}
	transformv	___352_basisz $const13 $const1 ___352_basisz 	%filename{"E:/osl\\current\\shaders\\stdosl.h"} %line{239} %argrw{"wrrr"}
	normalize	___352_basisx dPdu 	%filename{"E:\\dev\\work\\mercury\\src\\shaders_er\\maya_displacementShader.osl"} %line{95} %argrw{"wr"}
	normalize	___352_basisy N 	%line{96} %argrw{"wr"}
	normalize	___352_basisz dPdv 	%line{97} %argrw{"wr"}
	compref		$tmp20 i_tangent $const2 	%line{102} %argrw{"wrr"}
	compref		$tmp21 i_tangent $const5 	%argrw{"wrr"}
	compref		$tmp22 i_tangent $const7 	%argrw{"wrr"}
	vector		$tmp19 $const1 $tmp20 $tmp21 $tmp22 	%argrw{"wrrrr"}
	normalize	___352_basisx $tmp19 	%argrw{"wr"}
	normalize	___352_basisy N 	%line{103} %argrw{"wr"}
	cross		$tmp23 ___352_basisx ___352_basisy 	%line{104} %argrw{"wrr"}
	normalize	___352_basisz $tmp23 	%argrw{"wr"}
	compref		$tmp24 ___350_vectorDisplacement $const7 	%line{108} %argrw{"wrr"}
	mul		$tmp25 ___352_basisx $tmp24 	%argrw{"wrr"}
	compref		$tmp26 ___350_vectorDisplacement $const5 	%line{109} %argrw{"wrr"}
	mul		$tmp27 ___352_basisy $tmp26 	%argrw{"wrr"}
	add		$tmp28 $tmp25 $tmp27 	%argrw{"wrr"}
	compref		$tmp29 ___350_vectorDisplacement $const2 	%line{110} %argrw{"wrr"}
	neg		$tmp30 $tmp29 	%argrw{"wr"}
	mul		$tmp31 ___352_basisz $tmp30 	%argrw{"wrr"}
	add		$tmp32 $tmp28 $tmp31 	%line{111} %argrw{"wrr"}
	mul		$tmp33 $tmp32 i_scale 	%argrw{"wrr"}
	add		PP PP $tmp33 	%argrw{"wrr"}
	calculatenormal	NN PP 	%line{115} %argrw{"wr"} %argderivs{1}
	closure		result $const14 PP NN 	%line{118} %argrw{"wrrr"}
	assign		Ci result 	%line{119} %argrw{"wr"}
	end
