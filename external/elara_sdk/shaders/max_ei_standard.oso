OpenShadingLanguage 1.00
# Compiled by oslc 1.7.2
# options: 
shader max_ei_standard
param	color	diffuse_color	1 1 1		%read{360,360} %write{2147483647,-1}
param	color	diffuse_color_base	1 1 1		%read{359,359} %write{2147483647,-1}
param	float	diffuse_color_alpha	1		%read{358,358} %write{2147483647,-1}
param	float	diffuse_weight	0.69999999		%read{176,176} %write{2147483647,-1}
param	float	roughness	0		%read{198,198} %write{2147483647,-1}
param	float	backlighting_weight	0		%read{170,170} %write{2147483647,-1}
param	color	specular_color	1 1 1		%read{337,337} %write{2147483647,-1}
param	color	specular_color_base	1 1 1		%read{336,336} %write{2147483647,-1}
param	float	specular_color_alpha	1		%read{335,335} %write{2147483647,-1}
param	float	specular_weight	0.2		%read{132,132} %write{2147483647,-1}
param	int	specular_mode	0		%read{308,326} %write{2147483647,-1}
param	float	glossiness	90		%read{304,330} %write{2147483647,-1}
param	float	anisotropy	1		%read{315,315} %write{2147483647,-1}
param	float	rotation	0		%read{231,235} %write{2147483647,-1}
param	float	fresnel_ior_glossy	1.5		%read{49,66} %write{2147483647,-1}
param	color	reflection_color	1 1 1		%read{346,346} %write{2147483647,-1}
param	color	reflection_color_base	1 1 1		%read{345,345} %write{2147483647,-1}
param	float	reflection_color_alpha	1		%read{344,344} %write{2147483647,-1}
param	float	reflection_weight	0		%read{135,135} %write{2147483647,-1}
param	float	fresnel_ior	1.5		%read{48,65} %write{2147483647,-1}
param	color	refraction_color	1 1 1		%read{41,129} %write{2147483647,-1}
param	color	refraction_color_base	1 1 1		%read{40,128} %write{2147483647,-1}
param	float	refraction_color_alpha	1		%read{39,127} %write{2147483647,-1}
param	float	refraction_weight	0		%read{17,17} %write{2147483647,-1}
param	float	refraction_glossiness	100		%read{116,122} %write{2147483647,-1}
param	float	ior	1.5		%read{47,100} %write{2147483647,-1}
param	int	refraction_invert_weight	0		%read{18,18} %write{2147483647,-1}
param	color	sss_color	1 1 1		%read{215,215} %write{2147483647,-1}
param	color	sss_color_base	1 1 1		%read{214,214} %write{2147483647,-1}
param	float	sss_color_alpha	1		%read{213,213} %write{2147483647,-1}
param	float	sss_weight	0		%read{166,166} %write{2147483647,-1}
param	float	sss_scale	1		%read{208,208} %write{2147483647,-1}
param	color	sss_scale_color	1 1 1		%read{207,207} %write{2147483647,-1}
param	color	sss_scale_color_base	1 1 1		%read{206,206} %write{2147483647,-1}
param	float	sss_scale_color_alpha	1		%read{205,205} %write{2147483647,-1}
param	color	emission_color	1 1 1		%read{356,356} %write{2147483647,-1}
param	color	emission_color_base	1 1 1		%read{355,355} %write{2147483647,-1}
param	float	emission_color_alpha	1		%read{354,354} %write{2147483647,-1}
param	float	emission_weight	0		%read{348,348} %write{2147483647,-1}
param	color	normal_map	0 0 0		%read{72,72} %write{2147483647,-1}
param	float	normal_map_alpha	1		%read{72,72} %write{2147483647,-1}
param	float	normal_weight	0		%read{70,87} %write{2147483647,-1}
param	vector	bump_map_bump	0 0 0		%read{94,94} %write{2147483647,-1}
param	float	bump_weight	0		%read{90,92} %write{2147483647,-1}
param	color	displace_map	0 0 0		%read{6,9} %write{2147483647,-1}
param	float	displace_map_alpha	1		%read{12,12} %write{2147483647,-1}
param	float	displace_weight	0		%read{3,13} %write{2147483647,-1}
param	color	transparency_color	1 1 1		%read{376,376} %write{2147483647,-1}
param	color	transparency_color_base	1 1 1		%read{375,375} %write{2147483647,-1}
param	float	transparency_color_alpha	1		%read{374,374} %write{2147483647,-1}
param	float	transparency_weight	0		%read{368,368} %write{2147483647,-1}
param	int	transparency_invert_weight	0		%read{369,369} %write{2147483647,-1}
oparam	closure color	result			%read{378,378} %write{16,382}
global	point	P	%read{15,15} %write{2147483647,-1}
global	vector	I	%read{139,139} %write{2147483647,-1}
global	normal	N	%read{14,228} %write{2147483647,-1}
global	vector	dPdu	%read{75,75} %write{2147483647,-1}
global	vector	dPdv	%read{78,78} %write{2147483647,-1}
local	normal	___319_Nbumped	%read{97,97} %write{96,96}
local	vector	___378_U	%read{227,229} %write{226,226}
local	float	___379_c	%read{238,300} %write{237,237}
local	float	___379_t	%read{241,297} %write{238,238}
local	float	___379_s	%read{253,257} %write{239,239}
local	float	___379_txy	%read{266,274} %write{243,243}
local	float	___379_tyz	%read{285,292} %write{247,247}
local	float	___379_txz	%read{270,289} %write{251,251}
local	float	___379_sx	%read{285,292} %write{253,253}
local	float	___379_sy	%read{270,289} %write{255,255}
local	float	___379_sz	%read{266,274} %write{257,257}
local	float	___380_Rn	%read{149,149} %write{148,148}
local	float	___380_R0	%read{154,156} %write{149,149}
local	float	___380_F1	%read{151,153} %write{150,150}
local	float	___380_F2	%read{152,152} %write{151,151}
local	float	___380_F5	%read{155,155} %write{153,153}
local	float	___383_final_displace_map	%read{13,13} %write{12,12}
local	float	___384_refr	%read{20,163} %write{17,23}
local	float	___384_kt	%read{33,183} %write{24,24}
local	int	___384_caustic	%read{30,103} %write{25,26}
local	closure color	___384_refraction_result	%read{42,366} %write{27,130}
local	color	___387_final_refraction_color	%read{42,42} %write{41,41}
local	int	___388_no_bump	%read{68,203} %write{43,46}
local	float	___388_eta	%read{53,125} %write{47,64}
local	float	___388_refl_eta	%read{342,342} %write{48,65}
local	float	___388_refl_eta_glossy	%read{142,333} %write{49,66}
local	normal	___388_Nshading	%read{89,342} %write{67,97}
local	color	___395_final_normal_map	%read{73,73} %write{72,72}
local	color	___395_Nlocal	%read{76,82} %write{74,74}
local	normal	___395_Nglob	%read{87,87} %write{84,84}
local	color	___399_sigma_t	%read{118,125} %write{114,114}
local	int	___399_maxRefractDepth	%read{118,125} %write{115,115}
local	float	___401_refr_alpha	%read{125,125} %write{124,124}
local	color	___397_final_refraction_color	%read{130,130} %write{129,129}
local	float	___388_spec	%read{137,160} %write{133,133}
local	float	___388_refl	%read{138,138} %write{136,136}
local	float	___388_krs	%read{223,334} %write{137,193}
local	float	___388_krr	%read{340,343} %write{138,194}
local	float	___388_Fr	%read{160,324} %write{144,159}
local	float	___388_kd	%read{168,179} %write{164,164}
local	float	___388_sss	%read{168,178} %write{167,167}
local	float	___388_kds	%read{201,212} %write{168,191}
local	float	___388_backlight	%read{174,180} %write{171,171}
local	float	___388_kdb	%read{218,221} %write{174,192}
local	float	___388_diff	%read{182,182} %write{177,177}
local	float	___388_kdd	%read{196,199} %write{182,190}
local	closure color	___388_diffuse_result	%read{361,361} %write{195,199}
local	closure color	___388_sss_result	%read{216,363} %write{200,216}
local	color	___405_final_sss_scale_color	%read{208,208} %write{207,207}
local	color	___404_final_sss_color	%read{216,216} %write{215,215}
local	closure color	___388_backlighting_result	%read{361,361} %write{217,221}
local	closure color	___388_specular_result	%read{338,364} %write{222,338}
local	vector	___408_T	%read{258,323} %write{230,303}
local	float	___411_asz	%read{314,315} %write{313,313}
local	float	___411_ax	%read{317,323} %write{314,319}
local	float	___411_ay	%read{320,323} %write{316,322}
local	float	___412_power	%read{333,333} %write{332,332}
local	color	___408_final_specular_color	%read{338,338} %write{337,337}
local	closure color	___388_reflection_result	%read{347,365} %write{339,347}
local	color	___413_final_reflection_color	%read{347,347} %write{346,346}
local	float	___388_ke	%read{350,353} %write{348,348}
local	closure color	___388_emission_result	%read{357,367} %write{349,357}
local	color	___414_final_emission_color	%read{357,357} %write{356,356}
local	color	___388_final_diffuse_color	%read{362,362} %write{360,360}
local	float	___384_transp	%read{371,380} %write{368,371}
local	color	___416_final_transparency_color	%read{380,380} %write{376,376}
const	string	$const1	"ei_standard"		%read{0,0} %write{2147483647,-1}
temp	int	$tmp1	%read{2,2} %write{1,1}
const	string	$const2	"displace"		%read{1,1} %write{2147483647,-1}
const	int	$const3	0		%read{3,372} %write{2147483647,-1}
temp	int	$tmp2	%read{4,4} %write{3,3}
temp	float	$tmp3	%read{12,12} %write{11,11}
const	string	$const4	"intensity"		%read{5,5} %write{2147483647,-1}
temp	float	$tmp4	%read{8,8} %write{6,6}
const	int	$const5	1		%read{7,326} %write{2147483647,-1}
temp	float	$tmp5	%read{8,8} %write{7,7}
temp	float	$tmp6	%read{10,10} %write{8,8}
const	int	$const6	2		%read{9,298} %write{2147483647,-1}
temp	float	$tmp7	%read{10,10} %write{9,9}
temp	float	$tmp8	%read{11,11} %write{10,10}
const	float	$const7	0.33333001		%read{11,11} %write{2147483647,-1}
temp	float	$tmp9	%read{14,14} %write{13,13}
temp	normal	$tmp10	%read{15,15} %write{14,14}
temp	point	$tmp11	%read{16,16} %write{15,15}
const	string	$const8	"displacement"		%read{16,16} %write{2147483647,-1}
temp	int	$tmp12	%read{19,19} %write{18,18}
const	float	$const9	1		%read{20,377} %write{2147483647,-1}
const	float	$const10	0		%read{23,348} %write{2147483647,-1}
const	string	$const11	"clamp"		%read{21,175} %write{2147483647,-1}
temp	float	$tmp13	%read{23,23} %write{22,22}
temp	int	$tmp14	%read{2147483647,-1} %write{26,26}
const	string	$const12	"options"		%read{26,26} %write{2147483647,-1}
const	string	$const13	"caustic"		%read{26,26} %write{2147483647,-1}
temp	int	$tmp15	%read{29,29} %write{28,28}
const	string	$const14	"shadow"		%read{28,28} %write{2147483647,-1}
temp	int	$tmp16	%read{31,31} %write{30,30}
temp	int	$tmp17	%read{32,36} %write{31,35}
temp	int	$tmp18	%read{34,34} %write{33,33}
temp	int	$tmp19	%read{35,35} %write{34,34}
temp	closure color	$tmp20	%read{38,38} %write{37,37}
const	string	$const15	"transparent"		%read{37,379} %write{2147483647,-1}
temp	float	$tmp21	%read{40,40} %write{39,39}
temp	color	$tmp22	%read{41,41} %write{40,40}
temp	int	$tmp23	%read{45,45} %write{44,44}
const	string	$const16	"diffuse"		%read{46,211} %write{2147483647,-1}
temp	int	$tmp24	%read{51,51} %write{50,50}
temp	int	$tmp25	%read{52,56} %write{51,55}
temp	int	$tmp26	%read{54,54} %write{53,53}
temp	int	$tmp27	%read{55,55} %write{54,54}
temp	int	$tmp28	%read{58,58} %write{57,57}
temp	int	$tmp29	%read{63,63} %write{62,62}
temp	int	$tmp30	%read{69,69} %write{68,68}
temp	int	$tmp31	%read{71,71} %write{70,70}
temp	color	$tmp32	%read{74,74} %write{73,73}
const	float	$const17	2		%read{73,73} %write{2147483647,-1}
temp	vector	$tmp33	%read{77,77} %write{75,75}
temp	float	$tmp34	%read{77,77} %write{76,76}
temp	vector	$tmp35	%read{81,81} %write{77,77}
temp	vector	$tmp36	%read{80,80} %write{78,78}
temp	float	$tmp37	%read{80,80} %write{79,79}
temp	vector	$tmp38	%read{81,81} %write{80,80}
temp	vector	$tmp39	%read{84,84} %write{81,81}
temp	float	$tmp40	%read{83,83} %write{82,82}
temp	normal	$tmp41	%read{84,84} %write{83,83}
temp	float	$tmp42	%read{86,86} %write{85,85}
temp	normal	$tmp43	%read{88,88} %write{86,86}
temp	normal	$tmp44	%read{88,88} %write{87,87}
temp	int	$tmp45	%read{91,91} %write{90,90}
const	float	$const18	0.0099999998		%read{92,310} %write{2147483647,-1}
temp	float	$tmp46	%read{94,94} %write{92,92}
const	string	$const19	"max_calculatenormal"		%read{93,93} %write{2147483647,-1}
temp	vector	$tmp47	%read{95,95} %write{94,94}
temp	vector	$tmp48	%read{96,96} %write{95,95}
temp	int	$tmp49	%read{99,99} %write{98,98}
temp	int	$tmp50	%read{101,101} %write{100,100}
temp	int	$tmp51	%read{102,111} %write{101,110}
temp	int	$tmp52	%read{104,104} %write{103,103}
temp	int	$tmp53	%read{105,109} %write{104,108}
temp	int	$tmp54	%read{107,107} %write{106,106}
temp	int	$tmp55	%read{108,108} %write{107,107}
temp	int	$tmp56	%read{110,110} %write{109,109}
temp	closure color	$tmp57	%read{113,113} %write{112,112}
const	color	$const20	0 0 0		%read{114,114} %write{2147483647,-1}
const	int	$const21	5		%read{115,115} %write{2147483647,-1}
const	float	$const22	99.995003		%read{116,304} %write{2147483647,-1}
temp	int	$tmp58	%read{117,117} %write{116,116}
temp	closure color	$tmp59	%read{119,119} %write{118,118}
const	string	$const23	"depth_refraction"		%read{118,118} %write{2147483647,-1}
temp	float	$tmp60	%read{121,121} %write{120,120}
temp	float	$tmp61	%read{124,124} %write{121,121}
temp	float	$tmp62	%read{123,123} %write{122,122}
temp	float	$tmp63	%read{124,124} %write{123,123}
temp	closure color	$tmp64	%read{126,126} %write{125,125}
const	string	$const24	"depth_microfacet_beckmann_refraction"		%read{125,125} %write{2147483647,-1}
temp	float	$tmp65	%read{128,128} %write{127,127}
temp	color	$tmp66	%read{129,129} %write{128,128}
temp	float	$tmp67	%read{133,133} %write{132,132}
temp	float	$tmp68	%read{136,136} %write{135,135}
temp	float	$tmp69	%read{150,150} %write{140,140}
temp	vector	$tmp70	%read{140,140} %write{139,139}
const	string	$const25	"fresnel_schlick"		%read{141,141} %write{2147483647,-1}
temp	int	$tmp71	%read{143,143} %write{142,142}
temp	float	$tmp72	%read{148,148} %write{146,146}
temp	float	$tmp73	%read{148,148} %write{147,147}
temp	float	$tmp74	%read{153,153} %write{152,152}
temp	float	$tmp75	%read{155,155} %write{154,154}
temp	float	$tmp76	%read{156,156} %write{155,155}
temp	float	$tmp77	%read{158,158} %write{156,156}
temp	float	$tmp78	%read{159,159} %write{158,158}
temp	float	$tmp79	%read{164,164} %write{162,162}
const	float	$const26	0.44999999		%read{162,162} %write{2147483647,-1}
temp	float	$tmp80	%read{161,161} %write{160,160}
temp	float	$tmp81	%read{162,162} %write{161,161}
temp	float	$tmp82	%read{164,164} %write{163,163}
temp	float	$tmp83	%read{167,167} %write{166,166}
temp	float	$tmp84	%read{171,171} %write{170,170}
temp	float	$tmp85	%read{173,173} %write{172,172}
temp	float	$tmp86	%read{174,174} %write{173,173}
temp	float	$tmp87	%read{177,177} %write{176,176}
temp	float	$tmp88	%read{179,179} %write{178,178}
temp	float	$tmp89	%read{181,181} %write{179,179}
temp	float	$tmp90	%read{181,181} %write{180,180}
temp	float	$tmp91	%read{182,182} %write{181,181}
temp	int	$tmp92	%read{184,184} %write{183,183}
temp	int	$tmp93	%read{185,189} %write{184,188}
temp	int	$tmp94	%read{187,187} %write{186,186}
temp	int	$tmp95	%read{188,188} %write{187,187}
temp	int	$tmp96	%read{197,197} %write{196,196}
temp	closure color	$tmp97	%read{199,199} %write{198,198}
const	string	$const27	"oren_nayar"		%read{198,198} %write{2147483647,-1}
temp	int	$tmp98	%read{202,202} %write{201,201}
temp	int	$tmp99	%read{204,204} %write{203,203}
temp	float	$tmp100	%read{206,206} %write{205,205}
temp	color	$tmp101	%read{207,207} %write{206,206}
temp	closure color	$tmp102	%read{210,210} %write{209,209}
temp	color	$tmp103	%read{209,209} %write{208,208}
const	string	$const28	"bssrdf_gaussian"		%read{209,209} %write{2147483647,-1}
temp	closure color	$tmp104	%read{212,212} %write{211,211}
temp	float	$tmp105	%read{214,214} %write{213,213}
temp	color	$tmp106	%read{215,215} %write{214,214}
temp	int	$tmp107	%read{219,219} %write{218,218}
temp	closure color	$tmp108	%read{221,221} %write{220,220}
const	string	$const29	"translucent"		%read{220,220} %write{2147483647,-1}
temp	int	$tmp109	%read{224,224} %write{223,223}
const	string	$const30	"compute_tangent"		%read{225,225} %write{2147483647,-1}
temp	int	$tmp110	%read{2147483647,-1} %write{226,226}
const	string	$const31	"sample"		%read{226,226} %write{2147483647,-1}
const	string	$const32	"world_up"		%read{226,226} %write{2147483647,-1}
temp	float	$tmp111	%read{228,228} %write{227,227}
temp	normal	$tmp112	%read{229,229} %write{228,228}
temp	vector	$tmp113	%read{230,230} %write{229,229}
temp	int	$tmp114	%read{232,232} %write{231,231}
temp	float	$tmp115	%read{237,239} %write{235,235}
const	string	$const33	"radians"		%read{233,233} %write{2147483647,-1}
const	float	$const34	3.1415927		%read{234,234} %write{2147483647,-1}
const	float	$const35	180		%read{234,234} %write{2147483647,-1}
temp	float	$tmp116	%read{235,235} %write{234,234}
const	string	$const36	"rotate_vector"		%read{236,236} %write{2147483647,-1}
temp	float	$tmp117	%read{241,241} %write{240,240}
temp	float	$tmp118	%read{243,243} %write{241,241}
temp	float	$tmp119	%read{243,243} %write{242,242}
temp	float	$tmp120	%read{245,245} %write{244,244}
temp	float	$tmp121	%read{247,247} %write{245,245}
temp	float	$tmp122	%read{247,247} %write{246,246}
temp	float	$tmp123	%read{249,249} %write{248,248}
temp	float	$tmp124	%read{251,251} %write{249,249}
temp	float	$tmp125	%read{251,251} %write{250,250}
temp	float	$tmp126	%read{253,253} %write{252,252}
temp	float	$tmp127	%read{255,255} %write{254,254}
temp	float	$tmp128	%read{257,257} %write{256,256}
temp	float	$tmp129	%read{264,264} %write{258,258}
temp	float	$tmp130	%read{260,260} %write{259,259}
temp	float	$tmp131	%read{262,262} %write{260,260}
temp	float	$tmp132	%read{262,262} %write{261,261}
temp	float	$tmp133	%read{263,263} %write{262,262}
temp	float	$tmp134	%read{264,264} %write{263,263}
temp	float	$tmp135	%read{268,268} %write{264,264}
temp	float	$tmp136	%read{267,267} %write{265,265}
temp	float	$tmp137	%read{267,267} %write{266,266}
temp	float	$tmp138	%read{268,268} %write{267,267}
temp	float	$tmp139	%read{272,272} %write{268,268}
temp	float	$tmp140	%read{271,271} %write{269,269}
temp	float	$tmp141	%read{271,271} %write{270,270}
temp	float	$tmp142	%read{272,272} %write{271,271}
temp	float	$tmp143	%read{303,303} %write{272,272}
temp	float	$tmp144	%read{275,275} %write{273,273}
temp	float	$tmp145	%read{275,275} %write{274,274}
temp	float	$tmp146	%read{283,283} %write{275,275}
temp	float	$tmp147	%read{282,282} %write{276,276}
temp	float	$tmp148	%read{278,278} %write{277,277}
temp	float	$tmp149	%read{280,280} %write{278,278}
temp	float	$tmp150	%read{280,280} %write{279,279}
temp	float	$tmp151	%read{281,281} %write{280,280}
temp	float	$tmp152	%read{282,282} %write{281,281}
temp	float	$tmp153	%read{283,283} %write{282,282}
temp	float	$tmp154	%read{287,287} %write{283,283}
temp	float	$tmp155	%read{286,286} %write{284,284}
temp	float	$tmp156	%read{286,286} %write{285,285}
temp	float	$tmp157	%read{287,287} %write{286,286}
temp	float	$tmp158	%read{303,303} %write{287,287}
temp	float	$tmp159	%read{290,290} %write{288,288}
temp	float	$tmp160	%read{290,290} %write{289,289}
temp	float	$tmp161	%read{294,294} %write{290,290}
temp	float	$tmp162	%read{293,293} %write{291,291}
temp	float	$tmp163	%read{293,293} %write{292,292}
temp	float	$tmp164	%read{294,294} %write{293,293}
temp	float	$tmp165	%read{302,302} %write{294,294}
temp	float	$tmp166	%read{301,301} %write{295,295}
temp	float	$tmp167	%read{297,297} %write{296,296}
temp	float	$tmp168	%read{299,299} %write{297,297}
temp	float	$tmp169	%read{299,299} %write{298,298}
temp	float	$tmp170	%read{300,300} %write{299,299}
temp	float	$tmp171	%read{301,301} %write{300,300}
temp	float	$tmp172	%read{302,302} %write{301,301}
temp	float	$tmp173	%read{303,303} %write{302,302}
temp	int	$tmp174	%read{305,305} %write{304,304}
temp	closure color	$tmp175	%read{307,307} %write{306,306}
const	string	$const37	"reflection"		%read{306,342} %write{2147483647,-1}
temp	int	$tmp176	%read{309,309} %write{308,308}
temp	float	$tmp177	%read{311,311} %write{310,310}
temp	float	$tmp178	%read{313,313} %write{311,311}
const	float	$const38	0.5		%read{312,312} %write{2147483647,-1}
const	float	$const39	0.015		%read{312,316} %write{2147483647,-1}
temp	float	$tmp179	%read{313,313} %write{312,312}
temp	float	$tmp180	%read{316,316} %write{315,315}
temp	int	$tmp181	%read{318,318} %write{317,317}
temp	int	$tmp182	%read{321,321} %write{320,320}
temp	closure color	$tmp183	%read{325,325} %write{323,323}
const	string	$const40	"ward"		%read{323,323} %write{2147483647,-1}
temp	float	$tmp184	%read{325,325} %write{324,324}
temp	int	$tmp185	%read{327,327} %write{326,326}
const	float	$const41	6.02e-005		%read{328,328} %write{2147483647,-1}
temp	float	$tmp186	%read{329,329} %write{328,328}
temp	float	$tmp187	%read{331,331} %write{329,329}
const	float	$const42	0.01501		%read{330,330} %write{2147483647,-1}
temp	float	$tmp188	%read{331,331} %write{330,330}
temp	float	$tmp189	%read{332,332} %write{331,331}
const	float	$const43	0.89999998		%read{332,332} %write{2147483647,-1}
temp	closure color	$tmp190	%read{334,334} %write{333,333}
const	string	$const44	"microfacet_ggx"		%read{333,333} %write{2147483647,-1}
temp	float	$tmp191	%read{336,336} %write{335,335}
temp	color	$tmp192	%read{337,337} %write{336,336}
temp	int	$tmp193	%read{341,341} %write{340,340}
temp	closure color	$tmp194	%read{343,343} %write{342,342}
temp	float	$tmp195	%read{345,345} %write{344,344}
temp	color	$tmp196	%read{346,346} %write{345,345}
temp	int	$tmp197	%read{351,351} %write{350,350}
temp	closure color	$tmp198	%read{353,353} %write{352,352}
const	string	$const45	"emission"		%read{352,352} %write{2147483647,-1}
temp	float	$tmp199	%read{355,355} %write{354,354}
temp	color	$tmp200	%read{356,356} %write{355,355}
temp	float	$tmp201	%read{359,359} %write{358,358}
temp	color	$tmp202	%read{360,360} %write{359,359}
temp	closure color	$tmp203	%read{362,362} %write{361,361}
temp	closure color	$tmp204	%read{363,363} %write{362,362}
temp	closure color	$tmp205	%read{364,364} %write{363,363}
temp	closure color	$tmp206	%read{365,365} %write{364,364}
temp	closure color	$tmp207	%read{366,366} %write{365,365}
temp	closure color	$tmp208	%read{367,367} %write{366,366}
temp	int	$tmp209	%read{370,370} %write{369,369}
temp	int	$tmp210	%read{373,373} %write{372,372}
temp	float	$tmp211	%read{375,375} %write{374,374}
temp	color	$tmp212	%read{376,376} %write{375,375}
temp	float	$tmp213	%read{378,378} %write{377,377}
temp	closure color	$tmp214	%read{382,382} %write{378,378}
temp	closure color	$tmp215	%read{381,381} %write{379,379}
temp	color	$tmp216	%read{381,381} %write{380,380}
temp	closure color	$tmp217	%read{382,382} %write{381,381}
code ___main___
	functioncall	$const1 383 	%filename{"E:/github/elaramax/Shaders/max_ei_standard.osl"} %line{161} %argrw{"r"}
	raytype		$tmp1 $const2 	%filename{"E:/github\\elaramax\\Shaders\\ei_standard.h"} %line{179} %argrw{"wr"}
	if		$tmp1 17 383 	%argrw{"r"}
	gt		$tmp2 displace_weight $const3 	%line{181} %argrw{"wrr"}
	if		$tmp2 17 17 	%argrw{"r"}
	functioncall	$const4 12 	%line{183} %argrw{"r"}
	compref		$tmp4 displace_map $const3 	%line{46} %argrw{"wrr"}
	compref		$tmp5 displace_map $const5 	%argrw{"wrr"}
	add		$tmp6 $tmp4 $tmp5 	%argrw{"wrr"}
	compref		$tmp7 displace_map $const6 	%argrw{"wrr"}
	add		$tmp8 $tmp6 $tmp7 	%argrw{"wrr"}
	mul		$tmp3 $tmp8 $const7 	%argrw{"wrr"}
	mul		___383_final_displace_map $tmp3 displace_map_alpha 	%line{183} %argrw{"wrr"}
	mul		$tmp9 displace_weight ___383_final_displace_map 	%line{184} %argrw{"wrr"}
	mul		$tmp10 $tmp9 N 	%argrw{"wrr"}
	add		$tmp11 P $tmp10 	%argrw{"wrr"}
	closure		result $const8 $tmp11 N 	%argrw{"wrrr"}
	assign		___384_refr refraction_weight 	%line{189} %argrw{"wr"}
	neq		$tmp12 refraction_invert_weight $const3 	%line{190} %argrw{"wrr"}
	if		$tmp12 21 21 	%argrw{"r"}
	sub		___384_refr $const9 ___384_refr 	%line{192} %argrw{"wrr"}
	functioncall	$const11 24 	%line{194} %argrw{"r"}
	min		$tmp13 ___384_refr $const9 	%filename{"E:/OSL_install\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		___384_refr $tmp13 $const10 	%argrw{"wrr"}
	assign		___384_kt ___384_refr 	%filename{"E:/github\\elaramax\\Shaders\\ei_standard.h"} %line{195} %argrw{"wr"}
	assign		___384_caustic $const3 	%line{197} %argrw{"wr"}
	getattribute	$tmp14 $const12 $const13 ___384_caustic 	%line{198} %argrw{"wrrw"}
	assign		___384_refraction_result $const3 	%line{200} %argrw{"wr"}
	raytype		$tmp15 $const14 	%line{202} %argrw{"wr"}
	if		$tmp15 43 368 	%argrw{"r"}
	eq		$tmp16 ___384_caustic $const3 	%line{204} %argrw{"wrr"}
	neq		$tmp17 $tmp16 $const3 	%argrw{"wrr"}
	if		$tmp17 36 36 	%argrw{"r"}
	gt		$tmp18 ___384_kt $const3 	%argrw{"wrr"}
	neq		$tmp19 $tmp18 $const3 	%argrw{"wrr"}
	assign		$tmp17 $tmp19 	%argrw{"wr"}
	if		$tmp17 43 43 	%argrw{"r"}
	closure		$tmp20 $const15 	%line{206} %argrw{"wr"}
	mul		___384_refraction_result $tmp20 ___384_kt 	%argrw{"wrr"}
	sub		$tmp21 $const9 refraction_color_alpha 	%line{208} %argrw{"wrr"}
	mul		$tmp22 $tmp21 refraction_color_base 	%argrw{"wrr"}
	add		___387_final_refraction_color $tmp22 refraction_color 	%argrw{"wrr"}
	mul		result ___384_refraction_result ___387_final_refraction_color 	%line{209} %argrw{"wrr"}
	assign		___388_no_bump $const3 	%line{214} %argrw{"wr"}
	eq		$tmp23 ___384_caustic $const3 	%line{215} %argrw{"wrr"}
	if		$tmp23 47 47 	%argrw{"r"}
	raytype		___388_no_bump $const16 	%line{217} %argrw{"wr"}
	assign		___388_eta ior 	%line{220} %argrw{"wr"}
	assign		___388_refl_eta fresnel_ior 	%line{221} %argrw{"wr"}
	assign		___388_refl_eta_glossy fresnel_ior_glossy 	%line{222} %argrw{"wr"}
	gt		$tmp24 ___384_kt $const3 	%line{224} %argrw{"wrr"}
	neq		$tmp25 $tmp24 $const3 	%argrw{"wrr"}
	if		$tmp25 56 56 	%argrw{"r"}
	neq		$tmp26 ___388_eta $const5 	%argrw{"wrr"}
	neq		$tmp27 $tmp26 $const3 	%argrw{"wrr"}
	assign		$tmp25 $tmp27 	%argrw{"wr"}
	if		$tmp25 62 67 	%argrw{"r"}
	backfacing	$tmp28 	%line{226} %argrw{"w"}
	if		$tmp28 60 60 	%argrw{"r"}
	div		___388_eta $const9 ior 	%line{228} %argrw{"wrr"}
	assign		___388_refl_eta ___388_eta 	%line{231} %argrw{"wr"}
	assign		___388_refl_eta_glossy ___388_eta 	%line{232} %argrw{"wr"}
	backfacing	$tmp29 	%line{236} %argrw{"w"}
	if		$tmp29 67 67 	%argrw{"r"}
	div		___388_eta $const9 ior 	%line{238} %argrw{"wrr"}
	div		___388_refl_eta $const9 fresnel_ior 	%line{239} %argrw{"wrr"}
	div		___388_refl_eta_glossy $const9 fresnel_ior_glossy 	%line{240} %argrw{"wrr"}
	assign		___388_Nshading N 	%line{244} %argrw{"wr"}
	eq		$tmp30 ___388_no_bump $const3 	%line{246} %argrw{"wrr"}
	if		$tmp30 98 98 	%argrw{"r"}
	gt		$tmp31 normal_weight $const3 	%line{248} %argrw{"wrr"}
	if		$tmp31 90 90 	%argrw{"r"}
	mul		___395_final_normal_map normal_map normal_map_alpha 	%line{250} %argrw{"wrr"}
	mul		$tmp32 ___395_final_normal_map $const17 	%line{251} %argrw{"wrr"}
	sub		___395_Nlocal $tmp32 $const9 	%argrw{"wrr"}
	normalize	$tmp33 dPdu 	%line{253} %argrw{"wr"}
	compref		$tmp34 ___395_Nlocal $const3 	%argrw{"wrr"}
	mul		$tmp35 $tmp33 $tmp34 	%argrw{"wrr"}
	normalize	$tmp36 dPdv 	%argrw{"wr"}
	compref		$tmp37 ___395_Nlocal $const5 	%argrw{"wrr"}
	mul		$tmp38 $tmp36 $tmp37 	%argrw{"wrr"}
	add		$tmp39 $tmp35 $tmp38 	%argrw{"wrr"}
	compref		$tmp40 ___395_Nlocal $const6 	%argrw{"wrr"}
	mul		$tmp41 N $tmp40 	%argrw{"wrr"}
	add		___395_Nglob $tmp39 $tmp41 	%argrw{"wrr"}
	sub		$tmp42 $const9 normal_weight 	%line{255} %argrw{"wrr"}
	mul		$tmp43 $tmp42 N 	%argrw{"wrr"}
	mul		$tmp44 normal_weight ___395_Nglob 	%argrw{"wrr"}
	add		___388_Nshading $tmp43 $tmp44 	%argrw{"wrr"}
	normalize	___388_Nshading ___388_Nshading 	%line{256} %argrw{"wr"}
	neq		$tmp45 bump_weight $const3 	%line{259} %argrw{"wrr"}
	if		$tmp45 98 98 	%argrw{"r"}
	mul		$tmp46 bump_weight $const18 	%line{261} %argrw{"wrr"}
	functioncall	$const19 98 	%argrw{"r"}
	mul		$tmp47 bump_map_bump $tmp46 	%filename{"E:/github\\elaramax\\Shaders\\ei_std.h"} %line{132} %argrw{"wrr"}
	add		$tmp48 $tmp47 ___388_Nshading 	%argrw{"wrr"}
	normalize	___319_Nbumped $tmp48 	%argrw{"wr"}
	assign		___388_Nshading ___319_Nbumped 	%line{133} %argrw{"wr"}
	gt		$tmp49 ___384_kt $const3 	%filename{"E:/github\\elaramax\\Shaders\\ei_standard.h"} %line{265} %argrw{"wrr"}
	if		$tmp49 131 131 	%argrw{"r"}
	eq		$tmp50 ior $const5 	%line{267} %argrw{"wrr"}
	neq		$tmp51 $tmp50 $const3 	%argrw{"wrr"}
	if		$tmp51 103 111 	%argrw{"r"}
	eq		$tmp52 ___384_caustic $const3 	%argrw{"wrr"}
	neq		$tmp53 $tmp52 $const3 	%argrw{"wrr"}
	if		$tmp53 109 109 	%argrw{"r"}
	raytype		$tmp54 $const16 	%argrw{"wr"}
	neq		$tmp55 $tmp54 $const3 	%argrw{"wrr"}
	assign		$tmp53 $tmp55 	%argrw{"wr"}
	neq		$tmp56 $tmp53 $const3 	%argrw{"wrr"}
	assign		$tmp51 $tmp56 	%argrw{"wr"}
	if		$tmp51 114 127 	%argrw{"r"}
	closure		$tmp57 $const15 	%line{269} %argrw{"wr"}
	mul		___384_refraction_result $tmp57 ___384_kt 	%argrw{"wrr"}
	assign		___399_sigma_t $const20 	%line{273} %argrw{"wr"}
	assign		___399_maxRefractDepth $const21 	%line{274} %argrw{"wr"}
	gt		$tmp58 refraction_glossiness $const22 	%line{276} %argrw{"wrr"}
	if		$tmp58 120 127 	%argrw{"r"}
	closure		$tmp59 $const23 ___388_Nshading ___388_eta ___399_maxRefractDepth ___399_sigma_t 	%line{278} %argrw{"wrrrrr"}
	mul		___384_refraction_result $tmp59 ___384_kt 	%argrw{"wrr"}
	mul		$tmp60 refraction_glossiness $const18 	%line{282} %argrw{"wrr"}
	sub		$tmp61 $const9 $tmp60 	%argrw{"wrr"}
	mul		$tmp62 refraction_glossiness $const18 	%argrw{"wrr"}
	sub		$tmp63 $const9 $tmp62 	%argrw{"wrr"}
	mul		___401_refr_alpha $tmp61 $tmp63 	%argrw{"wrr"}
	closure		$tmp64 $const24 ___388_Nshading ___401_refr_alpha ___388_eta ___399_maxRefractDepth ___399_sigma_t 	%line{284} %argrw{"wrrrrrr"}
	mul		___384_refraction_result $tmp64 ___384_kt 	%argrw{"wrr"}
	sub		$tmp65 $const9 refraction_color_alpha 	%line{288} %argrw{"wrr"}
	mul		$tmp66 $tmp65 refraction_color_base 	%argrw{"wrr"}
	add		___397_final_refraction_color $tmp66 refraction_color 	%argrw{"wrr"}
	mul		___384_refraction_result ___384_refraction_result ___397_final_refraction_color 	%line{289} %argrw{"wrr"}
	functioncall	$const11 134 	%line{292} %argrw{"r"}
	min		$tmp67 specular_weight $const9 	%filename{"E:/OSL_install\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		___388_spec $tmp67 $const10 	%argrw{"wrr"}
	functioncall	$const11 137 	%filename{"E:/github\\elaramax\\Shaders\\ei_standard.h"} %line{293} %argrw{"r"}
	min		$tmp68 reflection_weight $const9 	%filename{"E:/OSL_install\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		___388_refl $tmp68 $const10 	%argrw{"wrr"}
	assign		___388_krs ___388_spec 	%filename{"E:/github\\elaramax\\Shaders\\ei_standard.h"} %line{294} %argrw{"wr"}
	assign		___388_krr ___388_refl 	%line{295} %argrw{"wr"}
	neg		$tmp70 I 	%line{297} %argrw{"wr"}
	dot		$tmp69 N $tmp70 	%argrw{"wrr"}
	functioncall	$const25 160 	%argrw{"r"}
	le		$tmp71 ___388_refl_eta_glossy $const3 	%line{79} %argrw{"wrr"}
	if		$tmp71 146 146 	%argrw{"r"}
	assign		___388_Fr $const5 	%line{80} %argrw{"wr"}
	return
	sub		$tmp72 $const9 ___388_refl_eta_glossy 	%line{82} %argrw{"wrr"}
	add		$tmp73 $const9 ___388_refl_eta_glossy 	%argrw{"wrr"}
	div		___380_Rn $tmp72 $tmp73 	%argrw{"wrr"}
	mul		___380_R0 ___380_Rn ___380_Rn 	%line{83} %argrw{"wrr"}
	sub		___380_F1 $const9 $tmp69 	%line{85} %argrw{"wrr"}
	mul		___380_F2 ___380_F1 ___380_F1 	%line{86} %argrw{"wrr"}
	mul		$tmp74 ___380_F2 ___380_F2 	%line{87} %argrw{"wrr"}
	mul		___380_F5 $tmp74 ___380_F1 	%argrw{"wrr"}
	sub		$tmp75 $const9 ___380_R0 	%line{89} %argrw{"wrr"}
	mul		$tmp76 $tmp75 ___380_F5 	%argrw{"wrr"}
	add		$tmp77 ___380_R0 $tmp76 	%argrw{"wrr"}
	functioncall	$const11 160 	%argrw{"r"}
	min		$tmp78 $tmp77 $const9 	%filename{"E:/OSL_install\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		___388_Fr $tmp78 $const10 	%argrw{"wrr"}
	mul		$tmp80 ___388_Fr ___388_spec 	%filename{"E:/github\\elaramax\\Shaders\\ei_standard.h"} %line{298} %argrw{"wrr"}
	sub		$tmp81 $const9 $tmp80 	%argrw{"wrr"}
	max		$tmp79 $const26 $tmp81 	%argrw{"wrr"}
	sub		$tmp82 $const9 ___384_refr 	%argrw{"wrr"}
	mul		___388_kd $tmp79 $tmp82 	%argrw{"wrr"}
	functioncall	$const11 168 	%line{300} %argrw{"r"}
	min		$tmp83 sss_weight $const9 	%filename{"E:/OSL_install\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		___388_sss $tmp83 $const10 	%argrw{"wrr"}
	mul		___388_kds ___388_kd ___388_sss 	%filename{"E:/github\\elaramax\\Shaders\\ei_standard.h"} %line{301} %argrw{"wrr"}
	functioncall	$const11 172 	%line{303} %argrw{"r"}
	min		$tmp84 backlighting_weight $const9 	%filename{"E:/OSL_install\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		___388_backlight $tmp84 $const10 	%argrw{"wrr"}
	sub		$tmp85 $const9 ___388_sss 	%filename{"E:/github\\elaramax\\Shaders\\ei_standard.h"} %line{304} %argrw{"wrr"}
	mul		$tmp86 ___388_kd $tmp85 	%argrw{"wrr"}
	mul		___388_kdb $tmp86 ___388_backlight 	%argrw{"wrr"}
	functioncall	$const11 178 	%line{306} %argrw{"r"}
	min		$tmp87 diffuse_weight $const9 	%filename{"E:/OSL_install\\shaders\\stdosl.h"} %line{144} %argrw{"wrr"}
	max		___388_diff $tmp87 $const10 	%argrw{"wrr"}
	sub		$tmp88 $const9 ___388_sss 	%filename{"E:/github\\elaramax\\Shaders\\ei_standard.h"} %line{307} %argrw{"wrr"}
	mul		$tmp89 ___388_kd $tmp88 	%argrw{"wrr"}
	sub		$tmp90 $const9 ___388_backlight 	%argrw{"wrr"}
	mul		$tmp91 $tmp89 $tmp90 	%argrw{"wrr"}
	mul		___388_kdd $tmp91 ___388_diff 	%argrw{"wrr"}
	gt		$tmp92 ___384_kt $const3 	%line{310} %argrw{"wrr"}
	neq		$tmp93 $tmp92 $const3 	%argrw{"wrr"}
	if		$tmp93 189 189 	%argrw{"r"}
	backfacing	$tmp94 	%argrw{"w"}
	neq		$tmp95 $tmp94 $const3 	%argrw{"wrr"}
	assign		$tmp93 $tmp95 	%argrw{"wr"}
	if		$tmp93 195 195 	%argrw{"r"}
	assign		___388_kdd $const3 	%line{312} %argrw{"wr"}
	assign		___388_kds $const3 	%line{313} %argrw{"wr"}
	assign		___388_kdb $const3 	%line{314} %argrw{"wr"}
	assign		___388_krs $const3 	%line{315} %argrw{"wr"}
	assign		___388_krr $const3 	%line{316} %argrw{"wr"}
	assign		___388_diffuse_result $const3 	%line{319} %argrw{"wr"}
	gt		$tmp96 ___388_kdd $const3 	%line{321} %argrw{"wrr"}
	if		$tmp96 200 200 	%argrw{"r"}
	closure		$tmp97 $const27 ___388_Nshading roughness 	%line{323} %argrw{"wrrr"}
	mul		___388_diffuse_result $tmp97 ___388_kdd 	%argrw{"wrr"}
	assign		___388_sss_result $const3 	%line{326} %argrw{"wr"}
	gt		$tmp98 ___388_kds $const3 	%line{328} %argrw{"wrr"}
	if		$tmp98 217 217 	%argrw{"r"}
	eq		$tmp99 ___388_no_bump $const3 	%line{330} %argrw{"wrr"}
	if		$tmp99 211 213 	%argrw{"r"}
	sub		$tmp100 $const9 sss_scale_color_alpha 	%line{332} %argrw{"wrr"}
	mul		$tmp101 $tmp100 sss_scale_color_base 	%argrw{"wrr"}
	add		___405_final_sss_scale_color $tmp101 sss_scale_color 	%argrw{"wrr"}
	mul		$tmp103 sss_scale ___405_final_sss_scale_color 	%line{334} %argrw{"wrr"}
	closure		$tmp102 $const28 ___388_Nshading $tmp103 	%argrw{"wrrr"}
	mul		___388_sss_result $tmp102 ___388_kds 	%argrw{"wrr"}
	closure		$tmp104 $const16 ___388_Nshading 	%line{339} %argrw{"wrr"}
	mul		___388_sss_result $tmp104 ___388_kds 	%argrw{"wrr"}
	sub		$tmp105 $const9 sss_color_alpha 	%line{342} %argrw{"wrr"}
	mul		$tmp106 $tmp105 sss_color_base 	%argrw{"wrr"}
	add		___404_final_sss_color $tmp106 sss_color 	%argrw{"wrr"}
	mul		___388_sss_result ___388_sss_result ___404_final_sss_color 	%line{343} %argrw{"wrr"}
	assign		___388_backlighting_result $const3 	%line{346} %argrw{"wr"}
	gt		$tmp107 ___388_kdb $const3 	%line{348} %argrw{"wrr"}
	if		$tmp107 222 222 	%argrw{"r"}
	closure		$tmp108 $const29 ___388_Nshading 	%line{350} %argrw{"wrr"}
	mul		___388_backlighting_result $tmp108 ___388_kdb 	%argrw{"wrr"}
	assign		___388_specular_result $const3 	%line{353} %argrw{"wr"}
	gt		$tmp109 ___388_krs $const3 	%line{355} %argrw{"wrr"}
	if		$tmp109 339 339 	%argrw{"r"}
	functioncall	$const30 231 	%line{357} %argrw{"r"}
	getattribute	$tmp110 $const31 $const32 ___378_U 	%line{53} %argrw{"wrrw"}
	dot		$tmp111 ___378_U N 	%line{55} %argrw{"wrr"}
	mul		$tmp112 N $tmp111 	%argrw{"wrr"}
	sub		$tmp113 ___378_U $tmp112 	%argrw{"wrr"}
	normalize	___408_T $tmp113 	%argrw{"wr"}
	neq		$tmp114 rotation $const3 	%line{359} %argrw{"wrr"}
	if		$tmp114 304 304 	%argrw{"r"}
	functioncall	$const33 236 	%line{361} %argrw{"r"}
	div		$tmp116 $const34 $const35 	%filename{"E:/OSL_install\\shaders\\stdosl.h"} %line{88} %argrw{"wrr"}
	mul		$tmp115 rotation $tmp116 	%argrw{"wrr"}
	functioncall	$const36 304 	%filename{"E:/github\\elaramax\\Shaders\\ei_standard.h"} %line{361} %argrw{"r"}
	cos		___379_c $tmp115 	%line{60} %argrw{"wr"}
	sub		___379_t $const9 ___379_c 	%line{61} %argrw{"wrr"}
	sin		___379_s $tmp115 	%line{62} %argrw{"wr"}
	compref		$tmp117 ___388_Nshading $const3 	%line{63} %argrw{"wrr"}
	mul		$tmp118 ___379_t $tmp117 	%argrw{"wrr"}
	compref		$tmp119 ___388_Nshading $const5 	%argrw{"wrr"}
	mul		___379_txy $tmp118 $tmp119 	%argrw{"wrr"}
	compref		$tmp120 ___388_Nshading $const5 	%line{64} %argrw{"wrr"}
	mul		$tmp121 ___379_t $tmp120 	%argrw{"wrr"}
	compref		$tmp122 ___388_Nshading $const6 	%argrw{"wrr"}
	mul		___379_tyz $tmp121 $tmp122 	%argrw{"wrr"}
	compref		$tmp123 ___388_Nshading $const3 	%line{65} %argrw{"wrr"}
	mul		$tmp124 ___379_t $tmp123 	%argrw{"wrr"}
	compref		$tmp125 ___388_Nshading $const6 	%argrw{"wrr"}
	mul		___379_txz $tmp124 $tmp125 	%argrw{"wrr"}
	compref		$tmp126 ___388_Nshading $const3 	%line{66} %argrw{"wrr"}
	mul		___379_sx ___379_s $tmp126 	%argrw{"wrr"}
	compref		$tmp127 ___388_Nshading $const5 	%line{67} %argrw{"wrr"}
	mul		___379_sy ___379_s $tmp127 	%argrw{"wrr"}
	compref		$tmp128 ___388_Nshading $const6 	%line{68} %argrw{"wrr"}
	mul		___379_sz ___379_s $tmp128 	%argrw{"wrr"}
	compref		$tmp129 ___408_T $const3 	%line{71} %argrw{"wrr"}
	compref		$tmp130 ___388_Nshading $const3 	%argrw{"wrr"}
	mul		$tmp131 ___379_t $tmp130 	%argrw{"wrr"}
	compref		$tmp132 ___388_Nshading $const3 	%argrw{"wrr"}
	mul		$tmp133 $tmp131 $tmp132 	%argrw{"wrr"}
	add		$tmp134 $tmp133 ___379_c 	%argrw{"wrr"}
	mul		$tmp135 $tmp129 $tmp134 	%argrw{"wrr"}
	compref		$tmp136 ___408_T $const5 	%argrw{"wrr"}
	sub		$tmp137 ___379_txy ___379_sz 	%argrw{"wrr"}
	mul		$tmp138 $tmp136 $tmp137 	%argrw{"wrr"}
	add		$tmp139 $tmp135 $tmp138 	%argrw{"wrr"}
	compref		$tmp140 ___408_T $const6 	%argrw{"wrr"}
	add		$tmp141 ___379_txz ___379_sy 	%argrw{"wrr"}
	mul		$tmp142 $tmp140 $tmp141 	%argrw{"wrr"}
	add		$tmp143 $tmp139 $tmp142 	%argrw{"wrr"}
	compref		$tmp144 ___408_T $const3 	%line{72} %argrw{"wrr"}
	add		$tmp145 ___379_txy ___379_sz 	%argrw{"wrr"}
	mul		$tmp146 $tmp144 $tmp145 	%argrw{"wrr"}
	compref		$tmp147 ___408_T $const5 	%argrw{"wrr"}
	compref		$tmp148 ___388_Nshading $const5 	%argrw{"wrr"}
	mul		$tmp149 ___379_t $tmp148 	%argrw{"wrr"}
	compref		$tmp150 ___388_Nshading $const5 	%argrw{"wrr"}
	mul		$tmp151 $tmp149 $tmp150 	%argrw{"wrr"}
	add		$tmp152 $tmp151 ___379_c 	%argrw{"wrr"}
	mul		$tmp153 $tmp147 $tmp152 	%argrw{"wrr"}
	add		$tmp154 $tmp146 $tmp153 	%argrw{"wrr"}
	compref		$tmp155 ___408_T $const6 	%argrw{"wrr"}
	sub		$tmp156 ___379_tyz ___379_sx 	%argrw{"wrr"}
	mul		$tmp157 $tmp155 $tmp156 	%argrw{"wrr"}
	add		$tmp158 $tmp154 $tmp157 	%argrw{"wrr"}
	compref		$tmp159 ___408_T $const3 	%line{73} %argrw{"wrr"}
	sub		$tmp160 ___379_txz ___379_sy 	%argrw{"wrr"}
	mul		$tmp161 $tmp159 $tmp160 	%argrw{"wrr"}
	compref		$tmp162 ___408_T $const5 	%argrw{"wrr"}
	add		$tmp163 ___379_tyz ___379_sx 	%argrw{"wrr"}
	mul		$tmp164 $tmp162 $tmp163 	%argrw{"wrr"}
	add		$tmp165 $tmp161 $tmp164 	%argrw{"wrr"}
	compref		$tmp166 ___408_T $const6 	%argrw{"wrr"}
	compref		$tmp167 ___388_Nshading $const6 	%argrw{"wrr"}
	mul		$tmp168 ___379_t $tmp167 	%argrw{"wrr"}
	compref		$tmp169 ___388_Nshading $const6 	%argrw{"wrr"}
	mul		$tmp170 $tmp168 $tmp169 	%argrw{"wrr"}
	add		$tmp171 $tmp170 ___379_c 	%argrw{"wrr"}
	mul		$tmp172 $tmp166 $tmp171 	%argrw{"wrr"}
	add		$tmp173 $tmp165 $tmp172 	%argrw{"wrr"}
	vector		___408_T $tmp143 $tmp158 $tmp173 	%argrw{"wrrr"}
	gt		$tmp174 glossiness $const22 	%line{364} %argrw{"wrr"}
	if		$tmp174 308 335 	%argrw{"r"}
	closure		$tmp175 $const37 ___388_Nshading ___388_refl_eta_glossy 	%line{366} %argrw{"wrrr"}
	mul		___388_specular_result $tmp175 ___388_krs 	%argrw{"wrr"}
	eq		$tmp176 specular_mode $const3 	%line{368} %argrw{"wrr"}
	if		$tmp176 326 335 	%argrw{"r"}
	mul		$tmp177 glossiness $const18 	%line{370} %argrw{"wrr"}
	sub		$tmp178 $const9 $tmp177 	%argrw{"wrr"}
	sub		$tmp179 $const38 $const39 	%argrw{"wrr"}
	mul		___411_asz $tmp178 $tmp179 	%argrw{"wrr"}
	add		___411_ax $const39 ___411_asz 	%line{371} %argrw{"wrr"}
	mul		$tmp180 ___411_asz anisotropy 	%line{372} %argrw{"wrr"}
	add		___411_ay $const39 $tmp180 	%argrw{"wrr"}
	lt		$tmp181 ___411_ax $const3 	%line{373} %argrw{"wrr"}
	if		$tmp181 320 320 	%argrw{"r"}
	assign		___411_ax $const3 	%argrw{"wr"}
	lt		$tmp182 ___411_ay $const3 	%line{374} %argrw{"wrr"}
	if		$tmp182 323 323 	%argrw{"r"}
	assign		___411_ay $const3 	%argrw{"wr"}
	closure		$tmp183 $const40 ___388_Nshading ___408_T ___411_ax ___411_ay 	%line{376} %argrw{"wrrrrr"}
	mul		$tmp184 ___388_krs ___388_Fr 	%argrw{"wrr"}
	mul		___388_specular_result $tmp183 $tmp184 	%argrw{"wrr"}
	eq		$tmp185 specular_mode $const5 	%line{378} %argrw{"wrr"}
	if		$tmp185 335 335 	%argrw{"r"}
	mul		$tmp186 $const41 glossiness 	%line{380} %argrw{"wrr"}
	mul		$tmp187 $tmp186 glossiness 	%argrw{"wrr"}
	mul		$tmp188 $const42 glossiness 	%argrw{"wrr"}
	sub		$tmp189 $tmp187 $tmp188 	%argrw{"wrr"}
	add		___412_power $tmp189 $const43 	%argrw{"wrr"}
	closure		$tmp190 $const44 ___388_Nshading ___412_power ___388_refl_eta_glossy 	%line{382} %argrw{"wrrrr"}
	mul		___388_specular_result $tmp190 ___388_krs 	%argrw{"wrr"}
	sub		$tmp191 $const9 specular_color_alpha 	%line{385} %argrw{"wrr"}
	mul		$tmp192 $tmp191 specular_color_base 	%argrw{"wrr"}
	add		___408_final_specular_color $tmp192 specular_color 	%argrw{"wrr"}
	mul		___388_specular_result ___388_specular_result ___408_final_specular_color 	%line{386} %argrw{"wrr"}
	assign		___388_reflection_result $const3 	%line{389} %argrw{"wr"}
	gt		$tmp193 ___388_krr $const3 	%line{391} %argrw{"wrr"}
	if		$tmp193 348 348 	%argrw{"r"}
	closure		$tmp194 $const37 ___388_Nshading ___388_refl_eta 	%line{393} %argrw{"wrrr"}
	mul		___388_reflection_result $tmp194 ___388_krr 	%argrw{"wrr"}
	sub		$tmp195 $const9 reflection_color_alpha 	%line{395} %argrw{"wrr"}
	mul		$tmp196 $tmp195 reflection_color_base 	%argrw{"wrr"}
	add		___413_final_reflection_color $tmp196 reflection_color 	%argrw{"wrr"}
	mul		___388_reflection_result ___388_reflection_result ___413_final_reflection_color 	%line{396} %argrw{"wrr"}
	max		___388_ke $const10 emission_weight 	%line{399} %argrw{"wrr"}
	assign		___388_emission_result $const3 	%line{401} %argrw{"wr"}
	gt		$tmp197 ___388_ke $const3 	%line{403} %argrw{"wrr"}
	if		$tmp197 358 358 	%argrw{"r"}
	closure		$tmp198 $const45 	%line{405} %argrw{"wr"}
	mul		___388_emission_result $tmp198 ___388_ke 	%argrw{"wrr"}
	sub		$tmp199 $const9 emission_color_alpha 	%line{407} %argrw{"wrr"}
	mul		$tmp200 $tmp199 emission_color_base 	%argrw{"wrr"}
	add		___414_final_emission_color $tmp200 emission_color 	%argrw{"wrr"}
	mul		___388_emission_result ___388_emission_result ___414_final_emission_color 	%line{408} %argrw{"wrr"}
	sub		$tmp201 $const9 diffuse_color_alpha 	%line{412} %argrw{"wrr"}
	mul		$tmp202 $tmp201 diffuse_color_base 	%argrw{"wrr"}
	add		___388_final_diffuse_color $tmp202 diffuse_color 	%argrw{"wrr"}
	add		$tmp203 ___388_diffuse_result ___388_backlighting_result 	%line{414} %argrw{"wrr"}
	mul		$tmp204 $tmp203 ___388_final_diffuse_color 	%argrw{"wrr"}
	add		$tmp205 $tmp204 ___388_sss_result 	%line{416} %argrw{"wrr"}
	add		$tmp206 $tmp205 ___388_specular_result 	%line{417} %argrw{"wrr"}
	add		$tmp207 $tmp206 ___388_reflection_result 	%line{418} %argrw{"wrr"}
	add		$tmp208 $tmp207 ___384_refraction_result 	%line{419} %argrw{"wrr"}
	add		result $tmp208 ___388_emission_result 	%argrw{"wrr"}
	assign		___384_transp transparency_weight 	%line{422} %argrw{"wr"}
	neq		$tmp209 transparency_invert_weight $const3 	%line{423} %argrw{"wrr"}
	if		$tmp209 372 372 	%argrw{"r"}
	sub		___384_transp $const9 ___384_transp 	%line{425} %argrw{"wrr"}
	gt		$tmp210 ___384_transp $const3 	%line{428} %argrw{"wrr"}
	if		$tmp210 383 383 	%argrw{"r"}
	sub		$tmp211 $const9 transparency_color_alpha 	%line{430} %argrw{"wrr"}
	mul		$tmp212 $tmp211 transparency_color_base 	%argrw{"wrr"}
	add		___416_final_transparency_color $tmp212 transparency_color 	%argrw{"wrr"}
	sub		$tmp213 $const9 ___384_transp 	%line{432} %argrw{"wrr"}
	mul		$tmp214 result $tmp213 	%argrw{"wrr"}
	closure		$tmp215 $const15 	%argrw{"wr"}
	mul		$tmp216 ___416_final_transparency_color ___384_transp 	%argrw{"wrr"}
	mul		$tmp217 $tmp215 $tmp216 	%argrw{"wrr"}
	add		result $tmp214 $tmp217 	%argrw{"wrr"}
	end
