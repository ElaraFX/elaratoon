OpenShadingLanguage 1.00
# Compiled by oslc 1.7.2
# options: 
shader max_vray_physical_camera
param	float	f_number	16		%read{9,10} %write{2147483647,-1}
param	float	shutter_speed	125		%read{2,2} %write{2147483647,-1}
param	float	film_iso	100		%read{3,7} %write{2147483647,-1}
param	float	cm2_factor	477.465		%read{6,12} %write{2147483647,-1}
param	color	whitepoint	1 1 1		%read{13,13} %write{2147483647,-1}
global	closure color	Ci	%read{2147483647,-1} %write{51,51}
local	color	result	%read{49,49} %write{0,0}
local	float	data_m	%read{49,49} %write{1,12}
local	float	t	%read{7,7} %write{2,2}
local	color	nwp	%read{14,50} %write{13,47}
local	color	luminance_weight	%read{36,43} %write{35,35}
local	float	temp2	%read{47,47} %write{46,46}
temp	int	$tmp1	%read{2147483647,-1} %write{0,0}
const	string	$const1	"sample"		%read{0,0} %write{2147483647,-1}
const	string	$const2	"color"		%read{0,0} %write{2147483647,-1}
const	float	$const3	0		%read{1,29} %write{2147483647,-1}
const	float	$const4	1		%read{2,34} %write{2147483647,-1}
temp	int	$tmp2	%read{4,4} %write{3,3}
const	float	$const5	18		%read{5,5} %write{2147483647,-1}
const	float	$const6	106		%read{5,5} %write{2147483647,-1}
temp	float	$tmp3	%read{6,6} %write{5,5}
temp	float	$tmp4	%read{8,8} %write{6,6}
temp	float	$tmp5	%read{8,8} %write{7,7}
temp	float	$tmp6	%read{11,11} %write{8,8}
const	float	$const7	15.4		%read{9,9} %write{2147483647,-1}
temp	float	$tmp7	%read{10,10} %write{9,9}
temp	float	$tmp8	%read{11,11} %write{10,10}
const	int	$const8	0		%read{14,37} %write{2147483647,-1}
temp	float	$tmp9	%read{15,15} %write{14,14}
temp	int	$tmp10	%read{16,16} %write{15,15}
temp	float	$tmp11	%read{18,18} %write{17,17}
temp	float	$tmp12	%read{19,19} %write{18,18}
const	int	$const9	1		%read{21,40} %write{2147483647,-1}
temp	float	$tmp13	%read{22,22} %write{21,21}
temp	int	$tmp14	%read{23,23} %write{22,22}
temp	float	$tmp15	%read{25,25} %write{24,24}
temp	float	$tmp16	%read{26,26} %write{25,25}
const	int	$const10	2		%read{28,44} %write{2147483647,-1}
temp	float	$tmp17	%read{29,29} %write{28,28}
temp	int	$tmp18	%read{30,30} %write{29,29}
temp	float	$tmp19	%read{32,32} %write{31,31}
temp	float	$tmp20	%read{33,33} %write{32,32}
const	color	$const11	0.212671 0.71516001 0.072168998		%read{35,35} %write{2147483647,-1}
temp	float	$tmp21	%read{38,38} %write{36,36}
temp	float	$tmp22	%read{38,38} %write{37,37}
temp	float	$tmp23	%read{42,42} %write{38,38}
temp	float	$tmp24	%read{41,41} %write{39,39}
temp	float	$tmp25	%read{41,41} %write{40,40}
temp	float	$tmp26	%read{42,42} %write{41,41}
temp	float	$tmp27	%read{46,46} %write{42,42}
temp	float	$tmp28	%read{45,45} %write{43,43}
temp	float	$tmp29	%read{45,45} %write{44,44}
temp	float	$tmp30	%read{46,46} %write{45,45}
temp	closure color	$tmp31	%read{51,51} %write{48,48}
const	string	$const12	"background"		%read{48,48} %write{2147483647,-1}
temp	color	$tmp32	%read{50,50} %write{49,49}
temp	color	$tmp33	%read{51,51} %write{50,50}
code ___main___
	getattribute	$tmp1 $const1 $const2 result 	%filename{"E:/github/elaramax/Shaders/max_vray_physical_camera.osl"} %line{26} %argrw{"wrrw"}
	assign		data_m $const3 	%line{28} %argrw{"wr"}
	div		t $const4 shutter_speed 	%line{29} %argrw{"wrr"}
	gt		$tmp2 film_iso $const3 	%line{30} %argrw{"wrr"}
	if		$tmp2 12 13 	%argrw{"r"}
	div		$tmp3 $const5 $const6 	%line{32} %argrw{"wrr"}
	mul		$tmp4 cm2_factor $tmp3 	%argrw{"wrr"}
	mul		$tmp5 film_iso t 	%argrw{"wrr"}
	mul		$tmp6 $tmp4 $tmp5 	%argrw{"wrr"}
	mul		$tmp7 $const7 f_number 	%argrw{"wrr"}
	mul		$tmp8 $tmp7 f_number 	%argrw{"wrr"}
	div		data_m $tmp6 $tmp8 	%argrw{"wrr"}
	assign		data_m cm2_factor 	%line{36} %argrw{"wr"}
	assign		nwp whitepoint 	%line{39} %argrw{"wr"}
	compref		$tmp9 nwp $const8 	%line{40} %argrw{"wrr"}
	gt		$tmp10 $tmp9 $const3 	%argrw{"wrr"}
	if		$tmp10 20 21 	%argrw{"r"}
	compref		$tmp11 nwp $const8 	%line{42} %argrw{"wrr"}
	div		$tmp12 $const4 $tmp11 	%argrw{"wrr"}
	compassign	nwp $const8 $tmp12 	%argrw{"wrr"}
	compassign	nwp $const8 $const4 	%line{46} %argrw{"wrr"}
	compref		$tmp13 nwp $const9 	%line{48} %argrw{"wrr"}
	gt		$tmp14 $tmp13 $const3 	%argrw{"wrr"}
	if		$tmp14 27 28 	%argrw{"r"}
	compref		$tmp15 nwp $const9 	%line{50} %argrw{"wrr"}
	div		$tmp16 $const4 $tmp15 	%argrw{"wrr"}
	compassign	nwp $const9 $tmp16 	%argrw{"wrr"}
	compassign	nwp $const9 $const4 	%line{54} %argrw{"wrr"}
	compref		$tmp17 nwp $const10 	%line{56} %argrw{"wrr"}
	gt		$tmp18 $tmp17 $const3 	%argrw{"wrr"}
	if		$tmp18 34 35 	%argrw{"r"}
	compref		$tmp19 nwp $const10 	%line{58} %argrw{"wrr"}
	div		$tmp20 $const4 $tmp19 	%argrw{"wrr"}
	compassign	nwp $const10 $tmp20 	%argrw{"wrr"}
	compassign	nwp $const10 $const4 	%line{62} %argrw{"wrr"}
	assign		luminance_weight $const11 	%line{65} %argrw{"wr"}
	compref		$tmp21 luminance_weight $const8 	%line{66} %argrw{"wrr"}
	compref		$tmp22 nwp $const8 	%argrw{"wrr"}
	mul		$tmp23 $tmp21 $tmp22 	%argrw{"wrr"}
	compref		$tmp24 luminance_weight $const9 	%argrw{"wrr"}
	compref		$tmp25 nwp $const9 	%argrw{"wrr"}
	mul		$tmp26 $tmp24 $tmp25 	%argrw{"wrr"}
	add		$tmp27 $tmp23 $tmp26 	%argrw{"wrr"}
	compref		$tmp28 luminance_weight $const10 	%argrw{"wrr"}
	compref		$tmp29 nwp $const10 	%argrw{"wrr"}
	mul		$tmp30 $tmp28 $tmp29 	%argrw{"wrr"}
	add		temp2 $tmp27 $tmp30 	%argrw{"wrr"}
	div		nwp nwp temp2 	%line{67} %argrw{"wrr"}
	closure		$tmp31 $const12 	%line{69} %argrw{"wr"}
	mul		$tmp32 result data_m 	%argrw{"wrr"}
	mul		$tmp33 $tmp32 nwp 	%argrw{"wrr"}
	mul		Ci $tmp31 $tmp33 	%argrw{"wrr"}
	end
