OpenShadingLanguage 1.00
# Compiled by oslc 1.3.0
shader maya_fractal
param	float	i_alphaGain	1 		 %read{117,117} %write{2147483647,-1}
param	float	i_alphaIsLuminance	1 		 %read{112,112} %write{2147483647,-1}
param	float	i_alphaOffset	0 		 %read{118,118} %write{2147483647,-1}
param	float	i_amplitude	1 		 %read{24,24} %write{2147483647,-1}
param	float	i_bias	0 		 %read{100,100} %write{2147483647,-1}
param	color	i_colorGain	1 1 1 		 %read{115,115} %write{2147483647,-1}
param	color	i_colorOffset	0 0 0 		 %read{116,116} %write{2147483647,-1}
param	color	i_defaultColor	0.5 0.5 0.5 		 %read{119,119} %write{2147483647,-1}
param	float	i_frequencyRatio	2 		 %read{26,91} %write{2147483647,-1}
param	int	i_invert	0 		 %read{106,106} %write{2147483647,-1}
param	float	i_levelMin	0 		 %read{50,50} %write{2147483647,-1}
param	float	i_levelMax	9 		 %read{42,42} %write{2147483647,-1}
param	float	i_ratio	0.70700002 		 %read{92,92} %write{2147483647,-1}
param	float	i_threshold	0 		 %read{99,99} %write{2147483647,-1}
param	int	i_inflection	0 		 %read{58,95} %write{2147483647,-1}
param	int	i_animated	0 		 %read{35,53} %write{2147483647,-1}
param	float	i_time	0 		 %read{37,37} %write{2147483647,-1}
param	float	i_timeRatio	2 		 %read{38,70} %write{2147483647,-1}
param	vector	i_uvCoord	0 0 0 		 %read{0,1} %write{2147483647,-1}
oparam	float	o_outAlpha	0 		 %read{111,118} %write{105,120}
oparam	color	o_outColor	1 1 1 		 %read{110,116} %write{104,119}
local	float	___344_noise	 %read{41,94} %write{41,94}
local	float	___345_noise	 %read{41,94} %write{41,94}
local	point	___345_p	 %read{41,94} %write{41,94}
local	point	___345_period	 %read{41,94} %write{41,94}
local	float	ss	 %read{2,71} %write{0,15}
local	float	tt	 %read{6,72} %write{1,20}
local	point	___346_pp	 %read{2147483647,-1} %write{22,22}
local	float	___346_result	 %read{41,105} %write{23,103}
local	float	___346_amp	 %read{41,94} %write{24,94}
local	float	___346_curFreq	 %read{27,94} %write{25,94}
local	float	___346_inv_frequencyRatio	 %read{83,83} %write{26,26}
local	float	___346_pixel_size	 %read{45,86} %write{31,31}
local	float	___346_pixel	 %read{41,94} %write{32,94}
local	float	___346_time	 %read{57,57} %write{33,37}
local	float	___346_timeRatio	 %read{2147483647,-1} %write{34,38}
local	float	___346_curTimeFreq	 %read{41,94} %write{39,94}
local	float	___346_i	 %read{41,94} %write{40,94}
local	float	___348_noise	 %read{41,94} %write{41,94}
local	float	___348_next_pixel	 %read{41,94} %write{41,94}
const	int	$const1	0		 %read{0,95} %write{2147483647,-1}
const	int	$const2	1		 %read{1,1} %write{2147483647,-1}
temp	float	$tmp1	 %read{3,3} %write{2,2}
const	int	$const3	100000		 %read{3,7} %write{2147483647,-1}
temp	int	$tmp2	 %read{4,4} %write{3,3}
temp	int	$tmp3	 %read{5,10} %write{4,9}
temp	float	$tmp4	 %read{7,7} %write{6,6}
temp	int	$tmp5	 %read{8,8} %write{7,7}
temp	int	$tmp6	 %read{9,9} %write{8,8}
const	float	$const4	1.000001		 %read{12,19} %write{2147483647,-1}
const	string	$const5	"mod"		 %read{11,16} %write{2147483647,-1}
temp	float	$tmp7	 %read{14,14} %write{13,13}
temp	float	$tmp8	 %read{13,13} %write{12,12}
temp	float	$tmp9	 %read{15,15} %write{14,14}
temp	float	$tmp10	 %read{19,19} %write{18,18}
temp	float	$tmp11	 %read{18,18} %write{17,17}
temp	float	$tmp12	 %read{20,20} %write{19,19}
temp	point	$tmp13	 %read{22,22} %write{21,21}
const	float	$const6	0		 %read{21,112} %write{2147483647,-1}
const	float	$const8	15		 %read{22,22} %write{2147483647,-1}
const	float	$const9	2		 %read{24,24} %write{2147483647,-1}
const	float	$const10	10		 %read{25,39} %write{2147483647,-1}
const	float	$const11	1		 %read{26,120} %write{2147483647,-1}
temp	float	$tmp14	 %read{31,31} %write{28,28}
temp	float	$tmp15	 %read{28,28} %write{27,27}
temp	float	$tmp16	 %read{31,31} %write{30,30}
temp	float	$tmp17	 %read{30,30} %write{29,29}
temp	int	$tmp18	 %read{36,36} %write{35,35}
temp	int	$tmp19	 %read{43,43} %write{42,42}
temp	int	$tmp20	 %read{44,48} %write{43,47}
temp	int	$tmp21	 %read{46,46} %write{45,45}
temp	int	$tmp22	 %read{47,47} %write{46,46}
temp	int	$tmp23	 %read{41,94} %write{41,94}
temp	int	$tmp24	 %read{51,51} %write{50,50}
temp	int	$tmp25	 %read{52,52} %write{51,51}
temp	int	$tmp26	 %read{54,54} %write{53,53}
temp	float	$tmp27	 %read{60,60} %write{55,55}
temp	float	$tmp28	 %read{60,60} %write{56,56}
temp	float	$tmp29	 %read{60,60} %write{57,57}
temp	float	$tmp30	 %read{62,62} %write{58,58}
const	string	$const12	"get3DNoise"		 %read{59,59} %write{2147483647,-1}
temp	int	$tmp31	 %read{63,63} %write{62,62}
temp	float	$tmp32	 %read{65,65} %write{64,64}
const	string	$const13	"uperlin"		 %read{64,79} %write{2147483647,-1}
const	float	$const14	0.5		 %read{65,98} %write{2147483647,-1}
temp	float	$tmp33	 %read{67,67} %write{66,66}
temp	float	$tmp34	 %read{68,68} %write{67,67}
temp	float	$tmp35	 %read{77,79} %write{71,71}
temp	float	$tmp36	 %read{77,79} %write{72,72}
temp	float	$tmp37	 %read{75,75} %write{73,73}
const	string	$const15	"get2DNoise"		 %read{74,74} %write{2147483647,-1}
temp	int	$tmp38	 %read{76,76} %write{75,75}
temp	float	$tmp39	 %read{78,78} %write{77,77}
temp	float	$tmp40	 %read{80,80} %write{79,79}
temp	float	$tmp41	 %read{81,81} %write{80,80}
temp	int	$tmp42	 %read{85,85} %write{84,84}
temp	float	$tmp43	 %read{87,87} %write{86,86}
temp	float	$tmp44	 %read{88,88} %write{87,87}
temp	float	$tmp45	 %read{90,90} %write{89,89}
temp	int	$tmp46	 %read{96,96} %write{95,95}
temp	float	$tmp47	 %read{98,98} %write{97,97}
const	string	$const16	"clamp"		 %read{101,101} %write{2147483647,-1}
temp	float	$tmp48	 %read{103,103} %write{102,102}
temp	float	$tmp49	 %read{108,108} %write{106,106}
const	string	$const17	"colorBalance"		 %read{107,107} %write{2147483647,-1}
temp	int	$tmp50	 %read{109,109} %write{108,108}
temp	int	$tmp51	 %read{113,113} %write{112,112}
code ___main___
	compref		ss i_uvCoord $const1 	%filename{"E:\\dev\\work\\mercury\\src\\shaders_er\\maya_fractal.osl"} %line{81} %argrw{"wrr"}
	compref		tt i_uvCoord $const2 	%line{82} %argrw{"wrr"}
	abs		$tmp1 ss 	%line{85} %argrw{"wr"}
	lt		$tmp2 $tmp1 $const3 	%argrw{"wrr"}
	neq		$tmp3 $tmp2 $const1 	%argrw{"wrr"}
	if		$tmp3 10 10 	%argrw{"r"}
	abs		$tmp4 tt 	%argrw{"wr"}
	lt		$tmp5 $tmp4 $const3 	%argrw{"wrr"}
	neq		$tmp6 $tmp5 $const1 	%argrw{"wrr"}
	assign		$tmp3 $tmp6 	%argrw{"wr"}
	if		$tmp3 119 121 	%argrw{"r"}
	functioncall	$const5 16 	%line{87} %argrw{"r"}
	div		$tmp8 ss $const4 	%filename{"E:/osl\\current\\shaders\\stdosl.h"} %line{135} %argrw{"wrr"}
	floor		$tmp7 $tmp8 	%argrw{"wr"}
	mul		$tmp9 $const4 $tmp7 	%argrw{"wrr"}
	sub		ss ss $tmp9 	%argrw{"wrr"}
	functioncall	$const5 21 	%filename{"E:\\dev\\work\\mercury\\src\\shaders_er\\maya_fractal.osl"} %line{88} %argrw{"r"}
	div		$tmp11 tt $const4 	%filename{"E:/osl\\current\\shaders\\stdosl.h"} %line{135} %argrw{"wrr"}
	floor		$tmp10 $tmp11 	%argrw{"wr"}
	mul		$tmp12 $const4 $tmp10 	%argrw{"wrr"}
	sub		tt tt $tmp12 	%argrw{"wrr"}
	point		$tmp13 ss tt $const6 	%filename{"E:\\dev\\work\\mercury\\src\\shaders_er\\maya_fractal.osl"} %line{90} %argrw{"wrrr"}
	mul		___346_pp $tmp13 $const8 	%argrw{"wrr"}
	assign		___346_result $const1 	%line{92} %argrw{"wr"}
	mul		___346_amp i_amplitude $const9 	%line{93} %argrw{"wrr"}
	assign		___346_curFreq $const10 	%line{94} %argrw{"wr"}
	div		___346_inv_frequencyRatio $const11 i_frequencyRatio 	%line{95} %argrw{"wrr"}
	mul		$tmp15 tt ___346_curFreq 	%line{97} %argrw{"wrr"}
	filterwidth	$tmp14 $tmp15 	%argrw{"wr"}
	mul		$tmp17 ss ___346_curFreq 	%argrw{"wrr"}
	filterwidth	$tmp16 $tmp17 	%argrw{"wr"}
	max		___346_pixel_size $tmp14 $tmp16 	%argrw{"wrr"}
	assign		___346_pixel $const11 	%line{98} %argrw{"wr"}
	assign		___346_time $const1 	%line{100} %argrw{"wr"}
	assign		___346_timeRatio $const1 	%line{101} %argrw{"wr"}
	neq		$tmp18 i_animated $const1 	%line{103} %argrw{"wrr"}
	if		$tmp18 39 39 	%argrw{"r"}
	assign		___346_time i_time 	%line{105} %argrw{"wr"}
	assign		___346_timeRatio i_timeRatio 	%line{106} %argrw{"wr"}
	assign		___346_curTimeFreq $const10 	%line{109} %argrw{"wr"}
	assign		___346_i $const1 	%line{111} %argrw{"wr"}
	while		$tmp23 42 53 95 95 	%line{112} %argrw{"r"}
	le		$tmp19 ___346_i i_levelMax 	%argrw{"wrr"}
	neq		$tmp20 $tmp19 $const1 	%argrw{"wrr"}
	if		$tmp20 48 48 	%argrw{"r"}
	gt		$tmp21 ___346_pixel ___346_pixel_size 	%argrw{"wrr"}
	neq		$tmp22 $tmp21 $const1 	%argrw{"wrr"}
	assign		$tmp20 $tmp22 	%argrw{"wr"}
	neq		$tmp23 $tmp20 $const1 	%argrw{"wrr"}
	if		$tmp23 50 53 	%argrw{"r"}
	lt		$tmp24 ___346_i i_levelMin 	%argrw{"wrr"}
	neq		$tmp25 $tmp24 $const1 	%argrw{"wrr"}
	assign		$tmp23 $tmp25 	%argrw{"wr"}
	neq		$tmp26 i_animated $const1 	%line{116} %argrw{"wrr"}
	if		$tmp26 71 83 	%argrw{"r"}
	mul		$tmp27 ss ___346_curFreq 	%line{118} %argrw{"wrr"}
	mul		$tmp28 tt ___346_curFreq 	%argrw{"wrr"}
	mul		$tmp29 ___346_time ___346_curTimeFreq 	%argrw{"wrr"}
	assign		$tmp30 i_inflection 	%line{119} %argrw{"wr"}
	functioncall	$const12 70 	%argrw{"r"}
	point		___345_p $tmp27 $tmp28 $tmp29 	%line{39} %argrw{"wrrr"}
	point		___345_period ___346_curFreq ___346_curFreq ___346_curTimeFreq 	%line{40} %argrw{"wrrr"}
	eq		$tmp31 $tmp30 $const1 	%line{42} %argrw{"wrr"}
	if		$tmp31 66 69 	%argrw{"r"}
	pnoise		$tmp32 $const13 ___345_p ___345_period 	%line{43} %argrw{"wrrr"}
	sub		___345_noise $tmp32 $const14 	%argrw{"wrr"}
	pnoise		$tmp33 $const13 ___345_p ___345_period 	%line{45} %argrw{"wrrr"}
	sub		$tmp34 $tmp33 $const14 	%argrw{"wrr"}
	abs		___345_noise $tmp34 	%argrw{"wr"}
	assign		___348_noise ___345_noise 	%line{47} %argrw{"wr"}
	mul		___346_curTimeFreq ___346_curTimeFreq i_timeRatio 	%line{121} %argrw{"wrr"}
	mul		$tmp35 ss ___346_curFreq 	%line{125} %argrw{"wrr"}
	mul		$tmp36 tt ___346_curFreq 	%argrw{"wrr"}
	assign		$tmp37 i_inflection 	%argrw{"wr"}
	functioncall	$const15 83 	%argrw{"r"}
	eq		$tmp38 $tmp37 $const1 	%line{27} %argrw{"wrr"}
	if		$tmp38 79 82 	%argrw{"r"}
	pnoise		$tmp39 $const13 $tmp35 $tmp36 ___346_curFreq ___346_curFreq 	%line{28} %argrw{"wrrrrr"}
	sub		___344_noise $tmp39 $const14 	%argrw{"wrr"}
	pnoise		$tmp40 $const13 $tmp35 $tmp36 ___346_curFreq ___346_curFreq 	%line{30} %argrw{"wrrrrr"}
	sub		$tmp41 $tmp40 $const14 	%argrw{"wrr"}
	abs		___344_noise $tmp41 	%argrw{"wr"}
	assign		___348_noise ___344_noise 	%line{32} %argrw{"wr"}
	mul		___348_next_pixel ___346_pixel ___346_inv_frequencyRatio 	%line{128} %argrw{"wrr"}
	lt		$tmp42 ___348_next_pixel ___346_pixel_size 	%line{129} %argrw{"wrr"}
	if		$tmp42 89 89 	%argrw{"r"}
	smoothstep	$tmp43 ___348_next_pixel ___346_pixel ___346_pixel_size 	%line{131} %argrw{"wrrr"}
	sub		$tmp44 $const11 $tmp43 	%argrw{"wrr"}
	mul		___348_noise ___348_noise $tmp44 	%argrw{"wrr"}
	mul		$tmp45 ___346_amp ___348_noise 	%line{134} %argrw{"wrr"}
	add		___346_result ___346_result $tmp45 	%argrw{"wrr"}
	mul		___346_curFreq ___346_curFreq i_frequencyRatio 	%line{135} %argrw{"wrr"}
	mul		___346_amp ___346_amp i_ratio 	%line{136} %argrw{"wrr"}
	assign		___346_pixel ___348_next_pixel 	%line{137} %argrw{"wr"}
	add		___346_i ___346_i $const11 	%line{138} %argrw{"wrr"}
	eq		$tmp46 i_inflection $const1 	%line{142} %argrw{"wrr"}
	if		$tmp46 99 99 	%argrw{"r"}
	mul		$tmp47 ___346_result $const14 	%line{143} %argrw{"wrr"}
	add		___346_result $tmp47 $const14 	%argrw{"wrr"}
	add		___346_result ___346_result i_threshold 	%line{145} %argrw{"wrr"}
	add		___346_result ___346_result i_bias 	%line{146} %argrw{"wrr"}
	functioncall	$const16 104 	%line{147} %argrw{"r"}
	min		$tmp48 ___346_result $const11 	%filename{"E:/osl\\current\\shaders\\stdosl.h"} %line{142} %argrw{"wrr"}
	max		___346_result $tmp48 $const6 	%argrw{"wrr"}
	color		o_outColor ___346_result ___346_result ___346_result 	%filename{"E:\\dev\\work\\mercury\\src\\shaders_er\\maya_fractal.osl"} %line{149} %argrw{"wrrr"}
	assign		o_outAlpha ___346_result 	%line{150} %argrw{"wr"}
	assign		$tmp49 i_invert 	%line{159} %argrw{"wr"}
	functioncall	$const17 119 	%argrw{"r"}
	neq		$tmp50 $tmp49 $const6 	%filename{"E:/dev\\work\\mercury\\src\\shaders_er\\mayautil.h"} %line{124} %argrw{"wrr"}
	if		$tmp50 112 112 	%argrw{"r"}
	sub		o_outColor $const11 o_outColor 	%line{126} %argrw{"wrr"}
	sub		o_outAlpha $const11 o_outAlpha 	%line{127} %argrw{"wrr"}
	neq		$tmp51 i_alphaIsLuminance $const6 	%line{130} %argrw{"wrr"}
	if		$tmp51 115 115 	%argrw{"r"}
	luminance	o_outAlpha o_outColor 	%line{132} %argrw{"wr"}
	mul		o_outColor o_outColor i_colorGain 	%line{135} %argrw{"wrr"}
	add		o_outColor o_outColor i_colorOffset 	%line{136} %argrw{"wrr"}
	mul		o_outAlpha o_outAlpha i_alphaGain 	%line{138} %argrw{"wrr"}
	add		o_outAlpha o_outAlpha i_alphaOffset 	%line{139} %argrw{"wrr"}
	assign		o_outColor i_defaultColor 	%filename{"E:\\dev\\work\\mercury\\src\\shaders_er\\maya_fractal.osl"} %line{163} %argrw{"wr"}
	assign		o_outAlpha $const11 	%line{164} %argrw{"wr"}
	end
